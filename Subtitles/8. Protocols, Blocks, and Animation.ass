[Script Info]
; Script generated by Aegisub 3.1.3
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: None
Last Style Storage: Default
Aegisub Scroll Position: 0
Aegisub Active Line: 2
Aegisub Video Zoom Percent: 1.000000

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: yin,冬青黑体简体中文 W3,20,&H00FFFFFF,&HF0000000,&H00000000,&H32000000,0,0,0,0,100,100,0,0,1,1,0,2,5,5,5,134

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:10.68,0:00:13.18,yin,,0,0,0,,欢迎来到2013至2014秋季学期\N{\fs12}Okay, well, welcome to Lecture number 8
Dialogue: 0,0:00:13.20,0:00:17.98,yin,,0,0,0,,斯坦福大学CS193P第八讲\N{\fs12}of Stanford CS193P, fall of 2013 and 14,
Dialogue: 0,0:00:18.00,0:00:20.00,yin,,0,0,0,,今天我们先讲讲\N{\fs12}and today, we are going to talk about
Dialogue: 0,0:00:20.02,0:00:22.94,yin,,0,0,0,,Objective-C的内容\N{\fs12}a couple of "Objective-C" things first.
Dialogue: 0,0:00:23.98,0:00:25.87,yin,,0,0,0,,主要是语言特性\N{\fs12}Language features, basically,
Dialogue: 0,0:00:26.09,0:00:28.30,yin,,0,0,0,,然后会讲一下动画\N{\fs12}and then we're going to talk about animation.
Dialogue: 0,0:00:28.35,0:00:30.04,yin,,0,0,0,,动画是今天的主题\N{\fs12}So animation is our topic of the day,
Dialogue: 0,0:00:30.25,0:00:32.17,yin,,0,0,0,,最后我会做一个示例\N{\fs12}I'll be starting a demo at the end,
Dialogue: 0,0:00:32.18,0:00:34.11,yin,,0,0,0,,今天开始 周三完成\N{\fs12}which we'll finish on Wednesday.
Dialogue: 0,0:00:34.12,0:00:36.99,yin,,0,0,0,,我会演示全部讲到的内容\N{\fs12}And I'm going to demo pretty much everything I talk about,
Dialogue: 0,0:00:36.99,0:00:38.42,yin,,0,0,0,,包括Objective-C\N{\fs12}including the Objective-C things,
Dialogue: 0,0:00:38.42,0:00:39.78,yin,,0,0,0,,甚至还包括\N{\fs12}and even including some of the things
Dialogue: 0,0:00:39.79,0:00:40.61,yin,,0,0,0,,上周讲过的内容\N{\fs12}we talked about last week,
Dialogue: 0,0:00:40.62,0:00:42.38,yin,,0,0,0,,所以会是一个大型且复杂的示例演示\N{\fs12}so it's going to be a very big, comprehensive demo,
Dialogue: 0,0:00:42.38,0:00:45.74,yin,,0,0,0,,所以要分成两节课完成\N{\fs12}that's why it runs over into two things.
Dialogue: 0,0:00:45.74,0:00:47.81,yin,,0,0,0,,首先是Objective-C的内容\N{\fs12}So the first objective-C thing,
Dialogue: 0,0:00:47.81,0:00:48.89,yin,,0,0,0,,我们要讲的是协议\N{\fs12}we're going to talk about is protocols.
Dialogue: 0,0:00:48.89,0:00:51.04,yin,,0,0,0,,我之前提到过\N{\fs12}I hinted at this earlier in the quarter.
Dialogue: 0,0:00:51.23,0:00:54.49,yin,,0,0,0,,这个方法会让id更安全\N{\fs12}This is a way that we're gonna make id a little more useful
Dialogue: 0,0:00:54.49,0:00:56.76,yin,,0,0,0,,让它更加有用\N{\fs12}by making it a little safer, okay?
Dialogue: 0,0:00:57.26,0:01:00.93,yin,,0,0,0,,我们已经有了内省机制 可以让id更安全\N{\fs12}And we already have introspection to make id safer.
Dialogue: 0,0:01:00.95,0:01:02.44,yin,,0,0,0,,如果我们有一个id\N{\fs12}When we have something that's an id,
Dialogue: 0,0:01:02.45,0:01:03.91,yin,,0,0,0,,我们知道它是一个指向某个对象的指针\N{\fs12}we know it's a pointer to some object,
Dialogue: 0,0:01:03.92,0:01:05.16,yin,,0,0,0,,我们不知道对象的类型\N{\fs12}we don't know what kind of object,
Dialogue: 0,0:01:05.17,0:01:07.86,yin,,0,0,0,,我们知道如何在运行时用内省来询问\N{\fs12}we know how to use introspection to ask at runtime,
Dialogue: 0,0:01:07.86,0:01:08.77,yin,,0,0,0,,你是什么类型的对象呢\N{\fs12}"What kind of object are you?"
Dialogue: 0,0:01:08.77,0:01:10.48,yin,,0,0,0,,你响应哪种方法呢\N{\fs12}"What kind of methods do you respond to?"
Dialogue: 0,0:01:10.81,0:01:12.79,yin,,0,0,0,,这样不错 但是下面这样更好\N{\fs12}That's nice, but it would be better if,
Dialogue: 0,0:01:12.81,0:01:16.46,yin,,0,0,0,,如果我们可以在代码中增加说明\N{\fs12}in our code, we could document in a way
Dialogue: 0,0:01:16.48,0:01:18.38,yin,,0,0,0,,让代码阅读者和编译器\N{\fs12}that both the reader of our code can understand
Dialogue: 0,0:01:18.40,0:01:20.62,yin,,0,0,0,,都可以理解\N{\fs12}and also that the compiler can understand
Dialogue: 0,0:01:20.73,0:01:23.86,yin,,0,0,0,,我们想用那个id做什么\N{\fs12}what it is we intend, okay, with that id.
Dialogue: 0,0:01:24.01,0:01:26.86,yin,,0,0,0,,我们打算对那个id调用哪个方法\N{\fs12}What methods we plan to call on that id.
Dialogue: 0,0:01:26.86,0:01:28.42,yin,,0,0,0,,这就是protocol协议的功能\N{\fs12}And so that's what protocols do.
Dialogue: 0,0:01:28.56,0:01:30.18,yin,,0,0,0,,基本上就是语法\N{\fs12}It's basically syntax,
Dialogue: 0,0:01:30.20,0:01:31.62,yin,,0,0,0,,只是编译器中的语法\N{\fs12}it's just syntax in the compiler,
Dialogue: 0,0:01:31.62,0:01:32.39,yin,,0,0,0,,仅此而已\N{\fs12}nothing more than that.
Dialogue: 0,0:01:32.39,0:01:35.32,yin,,0,0,0,,与NSString *和id一样\N{\fs12}It's kind of the same thing in NSString star versus id,
Dialogue: 0,0:01:35.32,0:01:37.21,yin,,0,0,0,,只是编译器中语法的不同\N{\fs12}that's really just syntax in the compiler,
Dialogue: 0,0:01:37.21,0:01:38.73,yin,,0,0,0,,在运行时并没有区别\N{\fs12}it makes no difference at runtime.
Dialogue: 0,0:01:39.24,0:01:42.02,yin,,0,0,0,,语法的基本部分是这样的\N{\fs12}And the fundamental part of the syntax is right here,
Dialogue: 0,0:01:42.05,0:01:44.45,yin,,0,0,0,,id <Protocol> obj\N{\fs12}id angle bracket protocol obj.
Dialogue: 0,0:01:44.72,0:01:47.02,yin,,0,0,0,,声明了一个obj变量\N{\fs12}So that's declaring a variable of type "obj"
Dialogue: 0,0:01:47.04,0:01:48.30,yin,,0,0,0,,它是一个id\N{\fs12}which is an id,
Dialogue: 0,0:01:48.43,0:01:52.52,yin,,0,0,0,,但是加上了协议部分\N{\fs12}but it's got this additional little thing, my protocol,
Dialogue: 0,0:01:52.52,0:01:54.47,yin,,0,0,0,,可以告诉编译器和阅读者\N{\fs12}which tells the compiler and readers
Dialogue: 0,0:01:54.47,0:01:55.49,yin,,0,0,0,,更多代码的信息\N{\fs12}of your code a little bit more.
Dialogue: 0,0:01:55.49,0:01:58.91,yin,,0,0,0,,我们来讲一下协议和它的工作原理\N{\fs12}So let's talk about protocols and how this all works.
Dialogue: 0,0:01:59.47,0:02:00.48,yin,,0,0,0,,首先 我们要讲的是\N{\fs12}The first thing we're going to talk about
Dialogue: 0,0:02:00.48,0:02:01.98,yin,,0,0,0,,如何声明一个协议\N{\fs12}is how to declare a protocol.
Dialogue: 0,0:02:02.15,0:02:05.23,yin,,0,0,0,,声明协议的方法\N{\fs12}And declaring a protocol looks almost exactly the same
Dialogue: 0,0:02:05.24,0:02:07.60,yin,,0,0,0,,和@interface声明几乎完全一样\N{\fs12}as an at sign interface statement.
Dialogue: 0,0:02:07.94,0:02:09.47,yin,,0,0,0,,我们在@interface中放的是\N{\fs12}At sign interface is where you put
Dialogue: 0,0:02:09.49,0:02:11.80,yin,,0,0,0,,所有公有的方法和属性\N{\fs12}all your methods and properties that are public,
Dialogue: 0,0:02:12.05,0:02:13.78,yin,,0,0,0,,或者可以在实现文件顶部\N{\fs12}or you can have an at sign interface
Dialogue: 0,0:02:13.78,0:02:14.85,yin,,0,0,0,,添加一个@interface\N{\fs12}at the top of your implementation
Dialogue: 0,0:02:14.85,0:02:18.97,yin,,0,0,0,,来放私有的方法和属性\N{\fs12}and have private methods and protocols-- properties.
Dialogue: 0,0:02:19.05,0:02:20.71,yin,,0,0,0,,协议也是一样的\N{\fs12}And the same thing for protocol, just you say
Dialogue: 0,0:02:20.71,0:02:23.45,yin,,0,0,0,,只不过把@interface换成了@protocol\N{\fs12}at sign protocol instead of at sign interface.
Dialogue: 0,0:02:23.60,0:02:26.92,yin,,0,0,0,,协议只是方法的声明\N{\fs12}Now, a protocol is just a declaration of the methods.
Dialogue: 0,0:02:26.92,0:02:27.99,yin,,0,0,0,,没有实现部分\N{\fs12}There's no implementation,
Dialogue: 0,0:02:28.01,0:02:30.49,yin,,0,0,0,,所以@protocol没有对应的@implementation\N{\fs12}so there's no at sign implementation for an at sign protocol.
Dialogue: 0,0:02:30.49,0:02:32.25,yin,,0,0,0,,我们说的只是方法\N{\fs12}We're just talking about the methods.
Dialogue: 0,0:02:32.61,0:02:36.99,yin,,0,0,0,,协议中的方法默认是必须实现的\N{\fs12}And the methods in a protocol by default are all required, okay,
Dialogue: 0,0:02:37.27,0:02:38.92,yin,,0,0,0,,因此如果有人\N{\fs12}so that means if someone wants to say
Dialogue: 0,0:02:38.92,0:02:40.61,yin,,0,0,0,,要实现这个协议\N{\fs12}that they implement this protocol,
Dialogue: 0,0:02:40.74,0:02:42.28,yin,,0,0,0,,必须实现全部这些方法\N{\fs12}they have to implement all these methods,
Dialogue: 0,0:02:42.28,0:02:44.44,yin,,0,0,0,,这些是这个示例协议中\N{\fs12}and so those are all the methods
Dialogue: 0,0:02:44.44,0:02:46.12,yin,,0,0,0,,所有的方法\N{\fs12}in my little sample protocol here.
Dialogue: 0,0:02:46.26,0:02:48.27,yin,,0,0,0,,你可以在这里加一个@optional\N{\fs12}You can make some of them optional
Dialogue: 0,0:02:48.29,0:02:50.66,yin,,0,0,0,,将一部分方法变为可选的\N{\fs12}by putting at sign optional in there.
Dialogue: 0,0:02:51.07,0:02:52.73,yin,,0,0,0,,现在 下面这些方法都是可选的了\N{\fs12}And now, all the rest of those are optional,
Dialogue: 0,0:02:52.73,0:02:55.16,yin,,0,0,0,,在现在这个示例中 someMethod是必需的\N{\fs12}so now in this example, someMethod is required,
Dialogue: 0,0:02:55.16,0:02:56.39,yin,,0,0,0,,下面其他的都是可选的\N{\fs12}but all the rest are optional.
Dialogue: 0,0:02:56.89,0:02:58.61,yin,,0,0,0,,你还可以再加一个@required\N{\fs12}And you can put at sign required,
Dialogue: 0,0:02:58.61,0:03:00.32,yin,,0,0,0,,在下面这里\N{\fs12}again, down a little lower.
Dialogue: 0,0:03:00.44,0:03:02.07,yin,,0,0,0,,现在就只有methodWithArgument是可选的\N{\fs12}Now, all of these are required
Dialogue: 0,0:03:02.09,0:03:03.89,yin,,0,0,0,,其余都是必需的\N{\fs12}except for methodWithArgument is optional.
Dialogue: 0,0:03:05.51,0:03:08.32,yin,,0,0,0,,所以基本上 我们是定义了一堆方法\N{\fs12}So, we're basically defining a little pile of methods,
Dialogue: 0,0:03:08.33,0:03:09.51,yin,,0,0,0,,其中有些是必需的\N{\fs12}some of which are required,
Dialogue: 0,0:03:09.52,0:03:10.74,yin,,0,0,0,,有些是可选的\N{\fs12}and some of which are optional, okay,
Dialogue: 0,0:03:10.74,0:03:13.20,yin,,0,0,0,,协议声明就是这样的\N{\fs12}that's what a protocol declaration is all about.
Dialogue: 0,0:03:13.31,0:03:16.32,yin,,0,0,0,,我在@protocol Foo后面加了个<Xyzzy>\N{\fs12}Now you see how I've added Xyzzy and angle brackets
Dialogue: 0,0:03:16.32,0:03:18.77,yin,,0,0,0,,看到了吗\N{\fs12}after protocol Foo there?
Dialogue: 0,0:03:19.13,0:03:21.63,yin,,0,0,0,,它的意思是\N{\fs12}So what that says is, if you want to implement,
Dialogue: 0,0:03:21.63,0:03:24.04,yin,,0,0,0,,如果你想要实现协议Foo\N{\fs12}if you want to say you implement protocol Foo,
Dialogue: 0,0:03:24.14,0:03:28.56,yin,,0,0,0,,就也要实现Xyzzy协议中全部必需的方法\N{\fs12}you also have to implement all the required methods of protocol Xyzzy.
Dialogue: 0,0:03:28.75,0:03:29.50,yin,,0,0,0,,不管是什么方法\N{\fs12}Whatever that is.
Dialogue: 0,0:03:29.84,0:03:33.37,yin,,0,0,0,,大体上有点像是父协议\N{\fs12}Okay? So it's basically a way of kind of like super protocol,
Dialogue: 0,0:03:33.51,0:03:35.12,yin,,0,0,0,,不是继承之类的\N{\fs12}it's not really like inherent or anything,
Dialogue: 0,0:03:35.14,0:03:36.73,yin,,0,0,0,,就是增加了协议\N{\fs12}but just kind of adds to the methods
Dialogue: 0,0:03:37.08,0:03:38.46,yin,,0,0,0,,必须要实现的方法\N{\fs12}that is required by a protocol,
Dialogue: 0,0:03:38.54,0:03:40.47,yin,,0,0,0,,实际上 这里可以添加多个协议\N{\fs12}and in fact, you can have multiple ones,
Dialogue: 0,0:03:40.47,0:03:43.10,yin,,0,0,0,,现在这个协议要求你实现\N{\fs12}so here's protocols now requiring you implement
Dialogue: 0,0:03:43.10,0:03:46.82,yin,,0,0,0,,Xyzzy协议和NSObject协议\N{\fs12}the Xyzzy protocol and a protocol called NSObject.
Dialogue: 0,0:03:47.16,0:03:49.69,yin,,0,0,0,,现在我们来说一下这个NSObject协议\N{\fs12}Okay, now, let's talk about this NSObject protocol
Dialogue: 0,0:03:49.69,0:03:51.27,yin,,0,0,0,,因为它是一个很常见的协议\N{\fs12}because it's a very common protocol.
Dialogue: 0,0:03:51.53,0:03:54.31,yin,,0,0,0,,大家都很熟悉NSObject类 对吧\N{\fs12}You're used to the NSObject class, right?
Dialogue: 0,0:03:54.79,0:03:58.00,yin,,0,0,0,,NSObject协议基本上就是一个\N{\fs12}And NSObject protocol is basically a protocol
Dialogue: 0,0:03:58.00,0:04:01.52,yin,,0,0,0,,包括了NSObject类中全部方法的协议\N{\fs12}that includes almost all the methods in the NSObject class.
Dialogue: 0,0:04:02.07,0:04:04.04,yin,,0,0,0,,为什么要这样做呢\N{\fs12}Okay. And why do we do this?
Dialogue: 0,0:04:04.04,0:04:05.79,yin,,0,0,0,,为什么要同时创建一个叫做NSObject的协议\N{\fs12}Why do we have a protocol named NSObject
Dialogue: 0,0:04:05.97,0:04:07.12,yin,,0,0,0,,和一个叫NSObject的类呢\N{\fs12}and a class named NSObject,
Dialogue: 0,0:04:07.12,0:04:08.70,yin,,0,0,0,,二者几乎有完全相同的方法\N{\fs12}and they have pretty much the same methods in it,
Dialogue: 0,0:04:08.71,0:04:12.59,yin,,0,0,0,,isEqual isKindOfClass description performSelector\N{\fs12}isEqual, isKindOfClass, description, performSelector,
Dialogue: 0,0:04:12.60,0:04:14.32,yin,,0,0,0,,全部这些NSObject的内容\N{\fs12}all those NSObject things.
Dialogue: 0,0:04:14.51,0:04:17.98,yin,,0,0,0,,是因为有时我们在声明协议时\N{\fs12}The answer is because we sometimes want to declare a protocol
Dialogue: 0,0:04:18.72,0:04:20.28,yin,,0,0,0,,有些方法是必需的\N{\fs12}where some methods are required,
Dialogue: 0,0:04:20.29,0:04:22.23,yin,,0,0,0,,但我们还想让实现这个协议的对象\N{\fs12}but we also want to require the thing
Dialogue: 0,0:04:22.23,0:04:25.47,yin,,0,0,0,,从本质上说 是一个NSObject\N{\fs12}that implements the protocol to essentially be an NSObject.
Dialogue: 0,0:04:25.89,0:04:27.19,yin,,0,0,0,,我们希望它是一个NSObject\N{\fs12}Okay. We want it to be an NSObject,
Dialogue: 0,0:04:27.21,0:04:30.39,yin,,0,0,0,,我们也许想要用内省等等\N{\fs12}we want to be able to maybe use introspection, things like that.
Dialogue: 0,0:04:30.53,0:04:33.38,yin,,0,0,0,,唯一的方法就是让这个协议\N{\fs12}Well, the only way to do that is to have the protocol
Dialogue: 0,0:04:33.38,0:04:36.30,yin,,0,0,0,,有一个父协议 附加的协议\N{\fs12}have like a super protocol, you know, an additional protocol,
Dialogue: 0,0:04:36.42,0:04:38.98,yin,,0,0,0,,所以我们直接将NSObject中全部的方法\N{\fs12}and so we just took all the methods in NSObject,
Dialogue: 0,0:04:38.98,0:04:40.32,yin,,0,0,0,,放到一个大协议中\N{\fs12}we put them all in a big protocol
Dialogue: 0,0:04:40.33,0:04:42.63,yin,,0,0,0,,然后让NSobject来实现那个协议\N{\fs12}and have NSObject implement that protocol.
Dialogue: 0,0:04:43.02,0:04:45.54,yin,,0,0,0,,所以NSObject协议和类\N{\fs12}Okay. So NSObject protocol and class,
Dialogue: 0,0:04:45.55,0:04:47.58,yin,,0,0,0,,差不多有完全一样的方法\N{\fs12}all the same methods pretty much.
Dialogue: 0,0:04:48.14,0:04:50.18,yin,,0,0,0,,只不过NSObject类\N{\fs12}Okay. It's just that NSObject class
Dialogue: 0,0:04:50.19,0:04:52.31,yin,,0,0,0,,真正实现了这些方法\N{\fs12}is an actual implementation of those methods.
Dialogue: 0,0:04:53.97,0:04:55.43,yin,,0,0,0,,那么这些协议声明...\N{\fs12}So where do these protocol declaration--
Dialogue: 0,0:04:55.43,0:04:56.27,yin,,0,0,0,,抱歉 有问题吗\N{\fs12}Oh yeah, sorry, question?
Dialogue: 0,0:04:57.05,0:05:00.31,yin,,0,0,0,,在Java中 所有类都是自动从对象继承的\N{\fs12}In Java, all class is automatically inherit from object,
Dialogue: 0,0:05:00.33,0:05:02.03,yin,,0,0,0,,NSObject不是这样吗\N{\fs12}is that not the case with NSObject here?
Dialogue: 0,0:05:02.03,0:05:03.53,yin,,0,0,0,,问题是 在Java中\N{\fs12}Yeah, so the question is, in Java,
Dialogue: 0,0:05:03.55,0:05:06.68,yin,,0,0,0,,差不多所有的类都是从对象继承的\N{\fs12}all class is pretty much inherit from object,
Dialogue: 0,0:05:06.88,0:05:08.72,yin,,0,0,0,,Objective-C中不是这样的\N{\fs12}and that's not true in Objective-C,
Dialogue: 0,0:05:08.84,0:05:10.72,yin,,0,0,0,,你可以直接用\N{\fs12}you could have a class where it just says
Dialogue: 0,0:05:10.72,0:05:14.53,yin,,0,0,0,,@interface 类名 没有冒号和父类\N{\fs12}at sign interface, name of class, no colon super class.
Dialogue: 0,0:05:14.53,0:05:17.24,yin,,0,0,0,,这种情况下 它不会继承任何方法\N{\fs12}In which case, it inherits no methods from anywhere.
Dialogue: 0,0:05:17.36,0:05:18.55,yin,,0,0,0,,只会有它自己的方法\N{\fs12}Okay, will only have its own method.
Dialogue: 0,0:05:18.83,0:05:20.28,yin,,0,0,0,,但我们不会这样做\N{\fs12}We never do that, however.
Dialogue: 0,0:05:20.29,0:05:22.60,yin,,0,0,0,,在iOS中 我们总是从NSObject继承而来\N{\fs12}In iOS we always inherit from NSObject.
Dialogue: 0,0:05:22.63,0:05:24.90,yin,,0,0,0,,因为我们需要内省等这些方法\N{\fs12}Because we want the introspection and all these things,
Dialogue: 0,0:05:25.52,0:05:27.13,yin,,0,0,0,,但这是惯例\N{\fs12}but it's by convention rather than
Dialogue: 0,0:05:27.15,0:05:30.04,yin,,0,0,0,,而不是编译器的强制要求\N{\fs12}by some sort of enforcement for the compiler.
Dialogue: 0,0:05:31.29,0:05:33.61,yin,,0,0,0,,那么 这些方法的@protocol声明\N{\fs12}Alright, so these at sign protocol declarations
Dialogue: 0,0:05:33.61,0:05:35.04,yin,,0,0,0,,要放在哪里呢\N{\fs12}of these methods, where do they go?
Dialogue: 0,0:05:35.10,0:05:36.39,yin,,0,0,0,,放在头文件中\N{\fs12}They go in header files,
Dialogue: 0,0:05:36.48,0:05:38.18,yin,,0,0,0,,可以放在它们自己的头文件中\N{\fs12}they can go in their own header file,
Dialogue: 0,0:05:38.40,0:05:41.05,yin,,0,0,0,,比如Foo协议的头文件就是Foo.h\N{\fs12}so like have a Foo.h for my protocol Foo,
Dialogue: 0,0:05:41.31,0:05:44.06,yin,,0,0,0,,或者可以放在某个相关类的头文件中\N{\fs12}or they can go in the header file of some related class,
Dialogue: 0,0:05:44.08,0:05:46.97,yin,,0,0,0,,比如要实现那个协议的某个类\N{\fs12}like some class that wants somebody to implement that protocol,
Dialogue: 0,0:05:46.97,0:05:47.73,yin,,0,0,0,,也可以放在它的头文件中\N{\fs12}you could put it in there.
Dialogue: 0,0:05:47.73,0:05:51.27,yin,,0,0,0,,比如iOS中有滚动视图类\N{\fs12}So, for example, iOS has scroll view class, right?
Dialogue: 0,0:05:51.27,0:05:51.84,yin,,0,0,0,,用于滚动\N{\fs12}For scrolling.
Dialogue: 0,0:05:51.84,0:05:53.15,yin,,0,0,0,,我们下周会讲到它\N{\fs12}We're going to talk about that next week.
Dialogue: 0,0:05:53.40,0:05:56.85,yin,,0,0,0,,它有一个协议叫做UIScrollViewDelegate\N{\fs12}It has a protocol called the UIScrollViewDelegate,
Dialogue: 0,0:05:57.17,0:06:01.33,yin,,0,0,0,,里面有一堆willScroll didScroll等这类方法\N{\fs12}which is a bunch of willScroll, didScroll things, methods,
Dialogue: 0,0:06:01.44,0:06:05.12,yin,,0,0,0,,这个协议只适用于UIScrollView\N{\fs12}and it's only good for UIScrollView, so that delegate,
Dialogue: 0,0:06:05.15,0:06:08.34,yin,,0,0,0,,所以这个协议是在UIScrollView.h中定义的\N{\fs12}that protocol is defined in UIScrollView.h,
Dialogue: 0,0:06:08.46,0:06:10.08,yin,,0,0,0,,而不是在它自己的头文件中\N{\fs12}not in its own header file.
Dialogue: 0,0:06:10.23,0:06:12.53,yin,,0,0,0,,所以这两种方法大家可以任选\N{\fs12}Okay? So you can kind of do which ever one you want,
Dialogue: 0,0:06:12.53,0:06:14.37,yin,,0,0,0,,两种方法都会见到\N{\fs12}and you'll see them both ways.
Dialogue: 0,0:06:15.92,0:06:17.63,yin,,0,0,0,,现在我们声明了协议\N{\fs12}Alright, so now we have the protocol declared,
Dialogue: 0,0:06:17.66,0:06:19.67,yin,,0,0,0,,定义了这些方法\N{\fs12}we defined this little bundle of methods,
Dialogue: 0,0:06:19.68,0:06:22.11,yin,,0,0,0,,也许包括属性的setter和getter\N{\fs12}including the setters and getters of properties, perhaps,
Dialogue: 0,0:06:23.05,0:06:27.76,yin,,0,0,0,,现在要有一个类保证实现这个协议\N{\fs12}now some class has to promise to implement that protocol.
Dialogue: 0,0:06:28.03,0:06:29.02,yin,,0,0,0,,如果你是一个类\N{\fs12}And how do you promise
Dialogue: 0,0:06:29.03,0:06:30.92,yin,,0,0,0,,如何保证实现一个协议呢\N{\fs12}to implement a protocol if you're a class?
Dialogue: 0,0:06:31.03,0:06:34.16,yin,,0,0,0,,只要在@interface那一行\N{\fs12}You just put angle brackets, the name of the protocol,
Dialogue: 0,0:06:34.16,0:06:35.62,yin,,0,0,0,,加上<协议名>\N{\fs12}on your at sign interface line.
Dialogue: 0,0:06:36.52,0:06:40.06,yin,,0,0,0,,这一行是我的公有的@interface\N{\fs12}Okay? So here, it's my public at sign interface line,
Dialogue: 0,0:06:40.07,0:06:42.91,yin,,0,0,0,,myClass 从NSobject继承来的 然后是<Foo>\N{\fs12}myClass, inherits from NSObject, angle brackets Foo.
Dialogue: 0,0:06:42.91,0:06:45.15,yin,,0,0,0,,这表示的是\N{\fs12}That means my class is promising
Dialogue: 0,0:06:45.45,0:06:47.48,yin,,0,0,0,,我的类向编译器和阅读者们保证\N{\fs12}to the compiler and to readers of this code,
Dialogue: 0,0:06:47.60,0:06:49.89,yin,,0,0,0,,我要实现Foo中全部必须实现的方法\N{\fs12}I'm going to implement all the required methods in Foo.
Dialogue: 0,0:06:50.78,0:06:52.72,yin,,0,0,0,,我做出了这样的保证\N{\fs12}Okay? So I'm just making that promise.
Dialogue: 0,0:06:52.78,0:06:54.99,yin,,0,0,0,,可以像这样公开保证\N{\fs12}And you can make the promise publicly like that,
Dialogue: 0,0:06:54.99,0:06:56.71,yin,,0,0,0,,或者也可以将其变为私有的\N{\fs12}or you can make the promise privately
Dialogue: 0,0:06:56.93,0:07:01.27,yin,,0,0,0,,方法是将其放在@interface myClass()中\N{\fs12}by putting it in your at sign interface myClass() thing
Dialogue: 0,0:07:01.28,0:07:03.10,yin,,0,0,0,,这是在实现部分中的\N{\fs12}that goes in your implementation,
Dialogue: 0,0:07:03.33,0:07:04.49,yin,,0,0,0,,需要的话 可以直接放在那里\N{\fs12}you can just put it there if you want.
Dialogue: 0,0:07:04.86,0:07:08.28,yin,,0,0,0,,只用于需要实现...\N{\fs12}That's if you only need to be able to implement that--
Dialogue: 0,0:07:08.63,0:07:10.12,yin,,0,0,0,,你只需要为实现文件中独有的某对象\N{\fs12}you're only required to implement that protocol
Dialogue: 0,0:07:10.12,0:07:12.51,yin,,0,0,0,,实现那个协议\N{\fs12}for something that's in your implementation only, okay,
Dialogue: 0,0:07:12.76,0:07:14.31,yin,,0,0,0,,不是公有的\N{\fs12}not on your public thing.
Dialogue: 0,0:07:15.43,0:07:17.90,yin,,0,0,0,,现在我有了一个协议\N{\fs12}Okay, so now I've got a protocol,
Dialogue: 0,0:07:18.01,0:07:19.16,yin,,0,0,0,,有了一个对象\N{\fs12}I've got an object,
Dialogue: 0,0:07:19.24,0:07:22.15,yin,,0,0,0,,至少有一个说了要实现它 然后呢\N{\fs12}at least one that signs up to implement it, now what?
Dialogue: 0,0:07:22.15,0:07:27.02,yin,,0,0,0,,现在我可以声明id类型的变量\N{\fs12}Well, now I can declare variables that are ids
Dialogue: 0,0:07:27.17,0:07:28.55,yin,,0,0,0,,加上附加要求\N{\fs12}with the additional requirement
Dialogue: 0,0:07:28.72,0:07:30.81,yin,,0,0,0,,要求实现某个协议中的必需方法\N{\fs12}to implement the required methods of a protocol.
Dialogue: 0,0:07:31.28,0:07:33.54,yin,,0,0,0,,也就是id <Foo> obj\N{\fs12}So id angle bracket Foo obj,
Dialogue: 0,0:07:33.57,0:07:35.87,yin,,0,0,0,,希望大家现在明白它的意思了\N{\fs12}hopefully, you understand what that means now,
Dialogue: 0,0:07:35.93,0:07:38.23,yin,,0,0,0,,它表示obj是一个变量 是一个id类型\N{\fs12}that means obj is a variable, it's an id,
Dialogue: 0,0:07:38.25,0:07:41.67,yin,,0,0,0,,我不知道它的类是什么 它是个id\N{\fs12}I have no idea what class it is, okay, it's id,
Dialogue: 0,0:07:41.69,0:07:42.52,yin,,0,0,0,,是完全不可知的\N{\fs12}it's completely blind,
Dialogue: 0,0:07:42.69,0:07:43.98,yin,,0,0,0,,但是我知道它实现了\N{\fs12}however, I know it implements
Dialogue: 0,0:07:43.99,0:07:47.77,yin,,0,0,0,,Foo中全部私有或必需的方法\N{\fs12}all the private or the required methods in Foo. Okay?
Dialogue: 0,0:07:48.07,0:07:49.95,yin,,0,0,0,,它也许也实现了某些可选方法\N{\fs12}And it might implement some of the optional ones too,
Dialogue: 0,0:07:49.95,0:07:51.84,yin,,0,0,0,,但我知道至少它实现了必需的方法\N{\fs12}but I know at least the required ones.
Dialogue: 0,0:07:52.27,0:07:56.85,yin,,0,0,0,,如果我用id <Foo> obj=[[MyClass alloc] init]\N{\fs12}So if I say id <Foo> obj MyClass alloc init,
Dialogue: 0,0:07:56.85,0:07:58.72,yin,,0,0,0,,这样就很不错 因为在上一张幻灯片中\N{\fs12}that looks good because on the previous slide
Dialogue: 0,0:07:58.74,0:08:00.88,yin,,0,0,0,,我说了MyClass保证会实现Foo\N{\fs12}I just said that MyClass promised to implement Foo.
Dialogue: 0,0:08:01.15,0:08:02.43,yin,,0,0,0,,编译器会很喜欢这行代码\N{\fs12}So the compiler is going to love that.
Dialogue: 0,0:08:02.74,0:08:06.51,yin,,0,0,0,,但如果用的是id <Foo> obj=[NSArray array]\N{\fs12}But if I said id Foo obj NS equals NSArray,
Dialogue: 0,0:08:06.93,0:08:08.37,yin,,0,0,0,,编译器不喜欢这样的\N{\fs12}that compiler is not going to like that
Dialogue: 0,0:08:08.38,0:08:10.64,yin,,0,0,0,,因为array显然没有实现协议Foo\N{\fs12}because array clearly don't implement a protocol Foo.
Dialogue: 0,0:08:10.64,0:08:12.04,yin,,0,0,0,,它们没有实现那些方法\N{\fs12}They don't implement those methods.
Dialogue: 0,0:08:12.52,0:08:16.01,yin,,0,0,0,,所以如果这样用了 编译器会警告你\N{\fs12}Okay? So the compiler will warn you in that case.
Dialogue: 0,0:08:16.69,0:08:19.54,yin,,0,0,0,,你这样做的话 编译器会发出警告\N{\fs12}Okay, so the compiler here will warn you if you do this,
Dialogue: 0,0:08:19.54,0:08:22.30,yin,,0,0,0,,如果你说了要实现一个协议\N{\fs12}it will also warn you if you sign up to do a protocol,
Dialogue: 0,0:08:22.30,0:08:23.22,yin,,0,0,0,,保证了要做某些事情\N{\fs12}you promise to do something,
Dialogue: 0,0:08:23.23,0:08:25.25,yin,,0,0,0,,但你却没有实现必需的方法\N{\fs12}and you don't implement the methods that are required,
Dialogue: 0,0:08:25.26,0:08:26.37,yin,,0,0,0,,编译器也会发出警告\N{\fs12}it will warn you about that too,
Dialogue: 0,0:08:27.09,0:08:29.18,yin,,0,0,0,,所以两种问题都会发出警告\N{\fs12}okay so it will warn you both coming and going.
Dialogue: 0,0:08:30.23,0:08:32.08,yin,,0,0,0,,除了声明变量\N{\fs12}In addition to declaring variables,
Dialogue: 0,0:08:32.09,0:08:34.85,yin,,0,0,0,,比如例子中的局部变量之外\N{\fs12}like local variables under the examples there,
Dialogue: 0,0:08:34.97,0:08:37.62,yin,,0,0,0,,你还可以传递它们\N{\fs12}you can also pass these around,
Dialogue: 0,0:08:37.86,0:08:40.73,yin,,0,0,0,,将这些带有协议的id\N{\fs12}these ids that are modified by the protocol,
Dialogue: 0,0:08:40.92,0:08:42.17,yin,,0,0,0,,作为方法的参数\N{\fs12}as arguments to methods.
Dialogue: 0,0:08:42.23,0:08:43.34,yin,,0,0,0,,还可以作为属性\N{\fs12}And as properties.
Dialogue: 0,0:08:43.97,0:08:46.98,yin,,0,0,0,,它就是另外一种类型\N{\fs12}Okay? So, it's really just another type,
Dialogue: 0,0:08:47.28,0:08:49.85,yin,,0,0,0,,不像NSString*那样\N{\fs12}it's not quite an NSString star
Dialogue: 0,0:08:49.86,0:08:51.11,yin,,0,0,0,,你知道它的类是什么\N{\fs12}where you know exactly the class
Dialogue: 0,0:08:51.12,0:08:52.82,yin,,0,0,0,,知道全部方法的功能\N{\fs12}and all the methods exactly that it does,
Dialogue: 0,0:08:52.96,0:08:54.28,yin,,0,0,0,,但也不是像id那样\N{\fs12}but it's not quite an id,
Dialogue: 0,0:08:54.29,0:08:55.61,yin,,0,0,0,,完全什么都不知道\N{\fs12}where you know nothing about it.
Dialogue: 0,0:08:55.63,0:08:56.35,yin,,0,0,0,,它在二者之间\N{\fs12}It's in between.
Dialogue: 0,0:08:56.73,0:08:57.83,yin,,0,0,0,,它是一个id\N{\fs12}Right? It's an id,
Dialogue: 0,0:08:57.85,0:09:00.74,yin,,0,0,0,,但你知道Foo中的某些方法\N{\fs12}but you kind of know some of the methods in Foo.
Dialogue: 0,0:09:04.70,0:09:05.92,yin,,0,0,0,,类似于静态类型\N{\fs12}Just like static typing,
Dialogue: 0,0:09:06.11,0:09:08.45,yin,,0,0,0,,只是编译器中的语法糖\N{\fs12}this is all just syntactic sugar in the compiler,
Dialogue: 0,0:09:08.46,0:09:10.33,yin,,0,0,0,,运行时毫无区别\N{\fs12}makes absolutely no difference at runtime,
Dialogue: 0,0:09:10.91,0:09:12.61,yin,,0,0,0,,编译器生成的代码\N{\fs12}no code is generated any differently
Dialogue: 0,0:09:12.61,0:09:14.20,yin,,0,0,0,,不会因为它们发生任何变化\N{\fs12}by the compiler because of these things.
Dialogue: 0,0:09:14.20,0:09:15.97,yin,,0,0,0,,只不过编译器现在可以发出警告了\N{\fs12}The compiler is just able to warn you now.
Dialogue: 0,0:09:16.10,0:09:17.10,yin,,0,0,0,,只有这点区别\N{\fs12}That is the only difference.
Dialogue: 0,0:09:17.64,0:09:20.50,yin,,0,0,0,,有些人不太理解\N{\fs12}Some people had a little difficulty accepting this,
Dialogue: 0,0:09:20.50,0:09:21.32,yin,,0,0,0,,但就是这样的\N{\fs12}but it's true.
Dialogue: 0,0:09:21.51,0:09:23.96,yin,,0,0,0,,编译器生成的代码不会因为这些协议\N{\fs12}No code generation is any different by the compiler
Dialogue: 0,0:09:23.96,0:09:25.13,yin,,0,0,0,,发生任何变化\N{\fs12}because of these protocols.
Dialogue: 0,0:09:25.23,0:09:27.20,yin,,0,0,0,,与NSString和id一样\N{\fs12}Same thing with NSString star versus id.
Dialogue: 0,0:09:27.21,0:09:28.52,yin,,0,0,0,,编译器生成的代码\N{\fs12}It's all exactly the same stuff
Dialogue: 0,0:09:28.53,0:09:29.66,yin,,0,0,0,,是完全一样的\N{\fs12}gets generated by the compiler.
Dialogue: 0,0:09:29.95,0:09:31.31,yin,,0,0,0,,只不过编译器可以发出警告\N{\fs12}It's just the compiler can warn you
Dialogue: 0,0:09:31.69,0:09:32.90,yin,,0,0,0,,因为它们知道你要做什么\N{\fs12}because they know what you intend.
Dialogue: 0,0:09:33.83,0:09:37.42,yin,,0,0,0,,iOS中 协议主要用于\N{\fs12}Okay? The number-one use of protocols in iOS
Dialogue: 0,0:09:37.52,0:09:39.89,yin,,0,0,0,,委托和数据源\N{\fs12}is delegation and data sources.
Dialogue: 0,0:09:40.00,0:09:40.86,yin,,0,0,0,,这就回到了\N{\fs12}This is back to--
Dialogue: 0,0:09:40.88,0:09:42.75,yin,,0,0,0,,还记得第一节课讲MVC的时候吗\N{\fs12}Remember lecture 1, I had the MVC
Dialogue: 0,0:09:42.76,0:09:44.90,yin,,0,0,0,,我说视图可以向它们的控制器发送消息\N{\fs12}and I told you that the views could talk to their controller
Dialogue: 0,0:09:44.90,0:09:46.98,yin,,0,0,0,,方法是通过不可视结构化通信\N{\fs12}with blind structured communication,
Dialogue: 0,0:09:47.22,0:09:49.03,yin,,0,0,0,,我们讲了各种will方法\N{\fs12}and we talked about will do this,
Dialogue: 0,0:09:49.05,0:09:50.72,yin,,0,0,0,,did方法 还有数据源\N{\fs12}did do that, or the data source,
Dialogue: 0,0:09:50.72,0:09:53.54,yin,,0,0,0,,dataAt和count等等\N{\fs12}which is data at, count, that kind of stuff.
Dialogue: 0,0:09:53.54,0:09:55.45,yin,,0,0,0,,还记得这些内容吗 这种通信方式\N{\fs12}All of those, remember that communication?
Dialogue: 0,0:09:55.54,0:09:56.68,yin,,0,0,0,,我们就是这样实现的\N{\fs12}This is how we do that.
Dialogue: 0,0:09:57.08,0:09:59.35,yin,,0,0,0,,通信是不可视的 因为它们是id类型\N{\fs12}So it's blind, because they're ids,
Dialogue: 0,0:09:59.37,0:10:01.66,yin,,0,0,0,,视图通信时使用的是id类型\N{\fs12}the views are talking through ids.
Dialogue: 0,0:10:01.72,0:10:04.17,yin,,0,0,0,,但它是结构化的 因为视图向其他不可视对象发送消息时\N{\fs12}But it's structured because there's a protocol
Dialogue: 0,0:10:04.44,0:10:08.20,yin,,0,0,0,,使用的是一个协议\N{\fs12}that the view uses to talk to that object blindly,
Dialogue: 0,0:10:08.42,0:10:09.76,yin,,0,0,0,,所以它知道里面的内容\N{\fs12}so it knows what's in there.
Dialogue: 0,0:10:09.78,0:10:11.62,yin,,0,0,0,,比如说 我们来讲一下\N{\fs12}So let's talk about, for example,
Dialogue: 0,0:10:11.62,0:10:14.39,yin,,0,0,0,,视图的数据源协议\N{\fs12}the dataSource protocols of views.
Dialogue: 0,0:10:14.85,0:10:16.39,yin,,0,0,0,,如果是一个表视图\N{\fs12}If it was a table view, let's say,
Dialogue: 0,0:10:16.40,0:10:17.78,yin,,0,0,0,,表视图是一个通用视图\N{\fs12}a table view is a generic view
Dialogue: 0,0:10:17.79,0:10:19.50,yin,,0,0,0,,用来展示信息表\N{\fs12}for showing a table of information,
Dialogue: 0,0:10:19.74,0:10:23.18,yin,,0,0,0,,它用来获取数据源的协议是\N{\fs12}its protocol for accessing its data source
Dialogue: 0,0:10:23.25,0:10:25.21,yin,,0,0,0,,表中有多少行\N{\fs12}is how many rows are there,
Dialogue: 0,0:10:25.68,0:10:27.61,yin,,0,0,0,,现在给我第七行的数据\N{\fs12}and now give me the data at row 7,
Dialogue: 0,0:10:27.63,0:10:29.33,yin,,0,0,0,,给我第500行的数据\N{\fs12}give me the data at row 500.
Dialogue: 0,0:10:29.76,0:10:31.30,yin,,0,0,0,,这就是它的协议\N{\fs12}Okay? That's its protocol.
Dialogue: 0,0:10:31.34,0:10:32.04,yin,,0,0,0,,这些方法\N{\fs12}Those methods.
Dialogue: 0,0:10:32.71,0:10:35.37,yin,,0,0,0,,count和dataAt 还有其他方法\N{\fs12}Count, and data at, it has other ones,
Dialogue: 0,0:10:35.37,0:10:37.60,yin,,0,0,0,,但这些是最基础的方法\N{\fs12}but those are the basic ones, okay?
Dialogue: 0,0:10:37.88,0:10:40.08,yin,,0,0,0,,我们真的很需要这些数据源协议\N{\fs12}And we really need those data source protocols
Dialogue: 0,0:10:40.20,0:10:41.95,yin,,0,0,0,,因为视图不能自己保存数据\N{\fs12}because views can't own their data.
Dialogue: 0,0:10:41.95,0:10:44.46,yin,,0,0,0,,表视图不能抓取全部数据 然后显示出来\N{\fs12}That table view can't grab all its data and display it,
Dialogue: 0,0:10:44.46,0:10:46.62,yin,,0,0,0,,它需要不断地询问其他对象\N{\fs12}it has to keep asking someone else,
Dialogue: 0,0:10:46.65,0:10:48.99,yin,,0,0,0,,但它并不想绑定某个数据源\N{\fs12}but it doesn't want to be tied to any source of the data,
Dialogue: 0,0:10:49.10,0:10:51.18,yin,,0,0,0,,所以它最好是一个id 是不可见的\N{\fs12}so it wants to be an id, it wants to be blind.
Dialogue: 0,0:10:52.05,0:10:53.65,yin,,0,0,0,,我们下周讲到表视图时\N{\fs12}Okay? And we'll see all this next week
Dialogue: 0,0:10:53.65,0:10:54.89,yin,,0,0,0,,会讲到这一部分\N{\fs12}when we talk about table views.
Dialogue: 0,0:10:55.90,0:10:57.33,yin,,0,0,0,,除了不可视结构化通信之外\N{\fs12}There are other uses of protocols
Dialogue: 0,0:10:57.34,0:10:59.99,yin,,0,0,0,,协议还可以用在其他地方\N{\fs12}besides that blind structured communication,
Dialogue: 0,0:11:00.01,0:11:01.99,yin,,0,0,0,,我们今天会讲一个 也就是动画\N{\fs12}and we're going to see one today which is animation,
Dialogue: 0,0:11:02.88,0:11:04.83,yin,,0,0,0,,我会讲得很清楚\N{\fs12}and I'll let that speak for itself,
Dialogue: 0,0:11:05.38,0:11:07.44,yin,,0,0,0,,但是基本上 我们是要用\N{\fs12}but basically we're going to have ids out there
Dialogue: 0,0:11:07.44,0:11:08.65,yin,,0,0,0,,具有动画性的id\N{\fs12}that are animatable,
Dialogue: 0,0:11:08.78,0:11:10.42,yin,,0,0,0,,我们知道它们是具有动画性的\N{\fs12}and we're going to know they're animatable
Dialogue: 0,0:11:10.43,0:11:12.41,yin,,0,0,0,,因为它们要实现某个特定协议\N{\fs12}because they're going to implement a certain protocol,
Dialogue: 0,0:11:12.85,0:11:13.69,yin,,0,0,0,,我们就是通过这个方法知道\N{\fs12}and that's how we're going to know
Dialogue: 0,0:11:13.70,0:11:14.78,yin,,0,0,0,,它们是具有动画性的\N{\fs12}that they're animatable things,
Dialogue: 0,0:11:14.79,0:11:16.56,yin,,0,0,0,,UIView会实现这个协议\N{\fs12}and UIView is going to implement that protocol
Dialogue: 0,0:11:16.56,0:11:18.07,yin,,0,0,0,,我们就是这样为视图添加动画的\N{\fs12}and that's how we're going to animate our views.
Dialogue: 0,0:11:19.55,0:11:21.28,yin,,0,0,0,,我今天要讲的第二个objective-C知识点\N{\fs12}Alright, the second objective-C thing
Dialogue: 0,0:11:21.30,0:11:23.11,yin,,0,0,0,,是block\N{\fs12}I want to talk about today is blocks.
Dialogue: 0,0:11:23.18,0:11:24.97,yin,,0,0,0,,和协议完全不一样\N{\fs12}Okay, it's a totally different thing that protocols.
Dialogue: 0,0:11:25.33,0:11:28.68,yin,,0,0,0,,block很重要 在iOS中广泛使用\N{\fs12}Blocks very important, used throughout iOS,
Dialogue: 0,0:11:28.84,0:11:30.24,yin,,0,0,0,,实际上 讲到第五周或者第四周\N{\fs12}in fact, sometimes I have difficulty getting
Dialogue: 0,0:11:30.26,0:11:33.89,yin,,0,0,0,,有的时候我很难不涉及到block\N{\fs12}all the way to week 5 here or 4 without putting blocks
Dialogue: 0,0:11:33.90,0:11:36.39,yin,,0,0,0,,因为它在iOS的API中太常用了\N{\fs12}because it's so much in the API of iOS.
Dialogue: 0,0:11:37.15,0:11:38.07,yin,,0,0,0,,什么是block\N{\fs12}What is a block?
Dialogue: 0,0:11:38.08,0:11:40.12,yin,,0,0,0,,block就是一段代码块\N{\fs12}A block is a block of code.
Dialogue: 0,0:11:40.76,0:11:43.59,yin,,0,0,0,,为什么我们要定义一个术语block\N{\fs12}Okay? Why do we define this term block,
Dialogue: 0,0:11:43.60,0:11:45.50,yin,,0,0,0,,只是用来代表一段代码块 我们已经知道了\N{\fs12}just to mean block of code, we already know that,
Dialogue: 0,0:11:45.61,0:11:46.77,yin,,0,0,0,,因为这段代码块\N{\fs12}it's because it's a block of code
Dialogue: 0,0:11:46.78,0:11:49.73,yin,,0,0,0,,可以嵌入到其他代码中\N{\fs12}that can be embedded inside other code,
Dialogue: 0,0:11:49.89,0:11:53.34,yin,,0,0,0,,可以作为参数进行传递 储存在数组中\N{\fs12}passed as an argument, stored in an array, okay?
Dialogue: 0,0:11:53.93,0:11:56.88,yin,,0,0,0,,我们可以操纵这段代码块\N{\fs12}So it's a block of code that we manipulate
Dialogue: 0,0:11:56.89,0:11:59.65,yin,,0,0,0,,在API中进行使用\N{\fs12}and move around our API.
Dialogue: 0,0:12:00.23,0:12:01.33,yin,,0,0,0,,那么是什么样子的呢\N{\fs12}So what does it look like?
Dialogue: 0,0:12:01.42,0:12:02.68,yin,,0,0,0,,这个示例是\N{\fs12}Here's an example of a method
Dialogue: 0,0:12:02.68,0:12:04.60,yin,,0,0,0,,一个参数为block的方法\N{\fs12}that takes a block as an argument.
Dialogue: 0,0:12:04.66,0:12:06.76,yin,,0,0,0,,这是在调用这个方法\N{\fs12}Okay? This is the calling of this method.
Dialogue: 0,0:12:06.76,0:12:09.01,yin,,0,0,0,,这是一个NSDictionary方法 真正的方法\N{\fs12}There's an NSDictionary method, it's a real method,
Dialogue: 0,0:12:09.29,0:12:12.47,yin,,0,0,0,,叫做enumerateKeysAndObjectsUsingBlock\N{\fs12}it's called enumerateKeysAndObjectsUsingBlock.
Dialogue: 0,0:12:12.87,0:12:16.86,yin,,0,0,0,,参数是一个没有返回值的block\N{\fs12}Okay? The argument is a block that has no return value
Dialogue: 0,0:12:17.03,0:12:20.42,yin,,0,0,0,,带有三个参数 其中前两个是id类型\N{\fs12}and takes three arguments, two of the arguments are ids,
Dialogue: 0,0:12:20.53,0:12:22.53,yin,,0,0,0,,分别是字典中的键和值\N{\fs12}which are they keys and values in the dictionary,
Dialogue: 0,0:12:22.74,0:12:25.23,yin,,0,0,0,,第三个参数是一个BOOL\N{\fs12}and a third one is actually a BOOL star,
Dialogue: 0,0:12:25.26,0:12:26.52,yin,,0,0,0,,一个指向BOOL的指针\N{\fs12}a pointer to a BOOL,
Dialogue: 0,0:12:27.20,0:12:28.48,yin,,0,0,0,,是一个外部的BOOL\N{\fs12}it's an outgoing BOOL.
Dialogue: 0,0:12:29.07,0:12:32.83,yin,,0,0,0,,当调用这个方法时\N{\fs12}Okay? And basically when you call this method,
Dialogue: 0,0:12:33.64,0:12:37.12,yin,,0,0,0,,字典会重复执行这段代码块\N{\fs12}Dictionary will execute that block of code, repeatedly,
Dialogue: 0,0:12:37.12,0:12:38.28,yin,,0,0,0,,每对键值执行一遍\N{\fs12}for every key and value,
Dialogue: 0,0:12:39.26,0:12:42.99,yin,,0,0,0,,直到你将*stop设为了YES\N{\fs12}until you set the stop, star stop, to yes,
Dialogue: 0,0:12:43.09,0:12:44.67,yin,,0,0,0,,或者循环执行完全部键值\N{\fs12}or until it runs out of keys and values.
Dialogue: 0,0:12:45.51,0:12:46.88,yin,,0,0,0,,而且它真的会实现\N{\fs12}Okay? And it's actually going to implement
Dialogue: 0,0:12:46.88,0:12:48.25,yin,,0,0,0,,中间的代码\N{\fs12}that code that's right there,
Dialogue: 0,0:12:48.28,0:12:49.73,yin,,0,0,0,,嵌套在方法调用中的代码\N{\fs12}embedded inside that method call.
Dialogue: 0,0:12:49.73,0:12:51.10,yin,,0,0,0,,看到这个枚举键值方法的\N{\fs12}You can see the open square bracket
Dialogue: 0,0:12:51.10,0:12:52.86,yin,,0,0,0,,左方括号了吗\N{\fs12}for enumerate keys and objects,
Dialogue: 0,0:12:52.99,0:12:54.12,yin,,0,0,0,,在aDictionary前面\N{\fs12}before aDictionary,
Dialogue: 0,0:12:54.17,0:12:56.60,yin,,0,0,0,,而右方括号在下面的大括号后面\N{\fs12}the close square bracket is down after the curly brace.
Dialogue: 0,0:12:57.28,0:12:59.79,yin,,0,0,0,,真正的大括号表示的代码\N{\fs12}Okay? So the code, the actual curly brace,
Dialogue: 0,0:12:59.80,0:13:01.50,yin,,0,0,0,,放在中间\N{\fs12}we put right in there,
Dialogue: 0,0:13:01.80,0:13:02.80,yin,,0,0,0,,放在方法调用的中间\N{\fs12}in the middle of our method call.
Dialogue: 0,0:13:02.89,0:13:05.06,yin,,0,0,0,,而在一般计算机科学的其他语言中\N{\fs12}Other languages, in computer science in general,
Dialogue: 0,0:13:05.06,0:13:06.41,yin,,0,0,0,,我们把这叫做闭包\N{\fs12}we call this a closure.
Dialogue: 0,0:13:06.54,0:13:08.45,yin,,0,0,0,,有多少人知道闭包这个词\N{\fs12}Okay, how many people know the name closure,
Dialogue: 0,0:13:08.45,0:13:09.40,yin,,0,0,0,,以前听到过\N{\fs12}ever heard that before?
Dialogue: 0,0:13:09.54,0:13:11.92,yin,,0,0,0,,好的 那大家就都知道这是什么了 是一个闭包\N{\fs12}Okay, so you guys generally know what this is, it's a closure.
Dialogue: 0,0:13:13.01,0:13:16.20,yin,,0,0,0,,Objective-C中的block常以脱字符号^开始\N{\fs12}Blocks in Objective-C always start with the caret.
Dialogue: 0,0:13:16.34,0:13:18.05,yin,,0,0,0,,它代表着block的开始\N{\fs12}That's the magic block character.
Dialogue: 0,0:13:18.23,0:13:21.95,yin,,0,0,0,,然后可能会指定一个返回类型\N{\fs12}And then there might be a return type, possibly specified,
Dialogue: 0,0:13:21.95,0:13:23.72,yin,,0,0,0,,可能会有一些参数\N{\fs12}and maybe some arguments, possibly,
Dialogue: 0,0:13:23.72,0:13:25.52,yin,,0,0,0,,然后是一个大括号 一些代码\N{\fs12}and then a curly brace, and some code,
Dialogue: 0,0:13:25.55,0:13:26.77,yin,,0,0,0,,最后以大括号结束\N{\fs12}and an end curly brace.
Dialogue: 0,0:13:27.13,0:13:29.72,yin,,0,0,0,,当然 还有一些有趣的功能\N{\fs12}Now, of course, to make this really interesting,
Dialogue: 0,0:13:29.90,0:13:34.32,yin,,0,0,0,,比如编译器知道如何使用一个局部变量\N{\fs12}the compiler knows how to do things like have local variables
Dialogue: 0,0:13:34.32,0:13:36.52,yin,,0,0,0,,在block使用之前声明\N{\fs12}that are declared before the block is used,
Dialogue: 0,0:13:36.67,0:13:38.09,yin,,0,0,0,,在block内部使用\N{\fs12}work inside the block.
Dialogue: 0,0:13:39.18,0:13:40.57,yin,,0,0,0,,如果我用了这个block\N{\fs12}Okay? So if I had that block
Dialogue: 0,0:13:40.58,0:13:44.27,yin,,0,0,0,,我希望不只在发现ENOUGH键时停下来\N{\fs12}and I wanted to stop not just when I see the key ENOUGH
Dialogue: 0,0:13:44.28,0:13:47.39,yin,,0,0,0,,还要在发现stopValue这个值时也停下来\N{\fs12}but also when I see the value, stopValue,
Dialogue: 0,0:13:47.61,0:13:50.30,yin,,0,0,0,,它是一个局部变量\N{\fs12}which is a local variable defined in the scope
Dialogue: 0,0:13:50.32,0:13:53.50,yin,,0,0,0,,是在调用enumerateKeysAndObjectsUsingBlock时定义的\N{\fs12}that's calling the method enumerateKeysAndObjectsUsingBlock,
Dialogue: 0,0:13:53.67,0:13:54.44,yin,,0,0,0,,我可以用它\N{\fs12}I can use it.
Dialogue: 0,0:13:54.46,0:13:56.61,yin,,0,0,0,,编译器确保了可以将它的值\N{\fs12}The compiler makes sure that the value of that
Dialogue: 0,0:13:56.63,0:13:57.89,yin,,0,0,0,,正确地传递进来\N{\fs12}gets properly passed in.
Dialogue: 0,0:13:58.37,0:13:59.48,yin,,0,0,0,,你有问题吗\N{\fs12}However-- you have a question?
Dialogue: 0,0:13:59.91,0:14:03.19,yin,,0,0,0,,这个是静态范围吗\N{\fs12}Now is this statically scoped for using things outside?
Dialogue: 0,0:14:03.78,0:14:06.28,yin,,0,0,0,,对 这是...\N{\fs12}Uh...yeah, it is the loc--
Dialogue: 0,0:14:06.30,0:14:09.75,yin,,0,0,0,,aDictionary enumerateKeysAndObjects的调用范围\N{\fs12}whatever scope the aDictionary enumerateKeysAndObjects,
Dialogue: 0,0:14:09.76,0:14:11.69,yin,,0,0,0,,不管它的范围是什么\N{\fs12}that call, whatever scope there,
Dialogue: 0,0:14:11.70,0:14:14.21,yin,,0,0,0,,它的范围就是变量的使用范围\N{\fs12}that's the scope in which the variables can be used,
Dialogue: 0,0:14:14.21,0:14:16.62,yin,,0,0,0,,基本上就是局部堆栈\N{\fs12}which is pretty much the local stack, right?
Dialogue: 0,0:14:16.63,0:14:18.32,yin,,0,0,0,,你自己的堆栈\N{\fs12}The stack from your thing,
Dialogue: 0,0:14:18.33,0:14:21.90,yin,,0,0,0,,但是这些变量是只读的\N{\fs12}now, those variables though are read only.
Dialogue: 0,0:14:22.72,0:14:25.85,yin,,0,0,0,,如果再增加一个BOOL类型stoppedEarly\N{\fs12}Okay? So if I had another one, a BOOL stoppedEarly
Dialogue: 0,0:14:25.86,0:14:29.01,yin,,0,0,0,,然后我想在block内部设置它\N{\fs12}and I tried to set that inside my block,
Dialogue: 0,0:14:29.10,0:14:31.31,yin,,0,0,0,,就会出现错误\N{\fs12}that would be an error,
Dialogue: 0,0:14:31.60,0:14:33.07,yin,,0,0,0,,编译器不允许这样的操作\N{\fs12}compiler would not allow that, okay?
Dialogue: 0,0:14:33.22,0:14:35.83,yin,,0,0,0,,因为stoppedEarly是只读的\N{\fs12}Because stoppedEarly is read only.
Dialogue: 0,0:14:35.83,0:14:37.97,yin,,0,0,0,,但是其实有一种方法\N{\fs12}However, there's actually a way to make it
Dialogue: 0,0:14:37.97,0:14:39.77,yin,,0,0,0,,能够让变量不是只读的\N{\fs12}so it's not read only,
Dialogue: 0,0:14:39.78,0:14:41.91,yin,,0,0,0,,方法是在变量前面加上__block\N{\fs12}which is to put underbar, underbar, block in front of it.
Dialogue: 0,0:14:42.23,0:14:43.71,yin,,0,0,0,,如果你在局部变量前面\N{\fs12}If you put underbar, underbar, block
Dialogue: 0,0:14:43.74,0:14:45.13,yin,,0,0,0,,加上双下划线block\N{\fs12}in front of a local variable,
Dialogue: 0,0:14:45.36,0:14:47.86,yin,,0,0,0,,编译器就会生成一段代码\N{\fs12}then the compiler will generate code
Dialogue: 0,0:14:47.86,0:14:51.90,yin,,0,0,0,,将stoppedEarly从栈中移到堆中\N{\fs12}that transfers stoppedEarly off the stack into the heap
Dialogue: 0,0:14:52.44,0:14:53.94,yin,,0,0,0,,这样它就可以在block中使用了\N{\fs12}so that it can be used by the block,
Dialogue: 0,0:14:54.09,0:14:55.90,yin,,0,0,0,,然后block结束时\N{\fs12}and then when the block is finished,
Dialogue: 0,0:14:56.01,0:14:58.31,yin,,0,0,0,,它会将信息复制回堆中\N{\fs12}it will copy the information back into the heap
Dialogue: 0,0:14:58.37,0:14:59.63,yin,,0,0,0,,再放回到栈上\N{\fs12}and then back onto the stack.
Dialogue: 0,0:15:00.20,0:15:01.97,yin,,0,0,0,,都神奇地自动实现了\N{\fs12}Okay? All happens magically.
Dialogue: 0,0:15:02.69,0:15:04.37,yin,,0,0,0,,所以如果你加上__block\N{\fs12}So if you have underbar, underbar, block,
Dialogue: 0,0:15:04.38,0:15:05.19,yin,,0,0,0,,系统就知道怎样做了\N{\fs12}it knows to do that.
Dialogue: 0,0:15:05.19,0:15:06.40,yin,,0,0,0,,只要加上这个神奇的__block\N{\fs12}So that's the magic you put in there,
Dialogue: 0,0:15:06.40,0:15:08.03,yin,,0,0,0,,你的变量就可以读写了\N{\fs12}and now your variables can go both ways,
Dialogue: 0,0:15:08.03,0:15:10.04,yin,,0,0,0,,这时stoppedEarly=YES就是合法的了\N{\fs12}and now stoppedEarly is yes is legal.
Dialogue: 0,0:15:11.00,0:15:13.71,yin,,0,0,0,,如果变量是个实例变量\N{\fs12}Okay? This also works
Dialogue: 0,0:15:13.71,0:15:16.08,yin,,0,0,0,,也是可以的\N{\fs12}if the variable is an instance variable.
Dialogue: 0,0:15:16.09,0:15:17.34,yin,,0,0,0,,除了用setter和getter\N{\fs12}We don't really access instance variables
Dialogue: 0,0:15:17.35,0:15:19.01,yin,,0,0,0,,我们并不直接获取实例变量\N{\fs12}except for setters and getters,
Dialogue: 0,0:15:19.17,0:15:20.54,yin,,0,0,0,,那是因为实例变量\N{\fs12}but that's because instance variables,
Dialogue: 0,0:15:20.54,0:15:22.05,yin,,0,0,0,,当然是在堆中的\N{\fs12}of course, are in the heap.
Dialogue: 0,0:15:22.49,0:15:24.08,yin,,0,0,0,,因为全部对象都保存在堆中\N{\fs12}Because all objects are stored in the heap.
Dialogue: 0,0:15:25.68,0:15:28.71,yin,,0,0,0,,那么block中使用的对象呢\N{\fs12}What about objects that are messaged inside of a block?
Dialogue: 0,0:15:28.72,0:15:30.90,yin,,0,0,0,,因为这里有个特殊的问题需要考虑\N{\fs12}Because there's a little special thing to think about there.
Dialogue: 0,0:15:31.01,0:15:34.17,yin,,0,0,0,,如果我有一个字符串stopKey 值为ENOUGH\N{\fs12}So if I had a string stopKey, which was enough,
Dialogue: 0,0:15:34.19,0:15:37.72,yin,,0,0,0,,我想在block中使用这个stopKey 就像这样\N{\fs12}and I wanted to use stopKey inside that block, like this,
Dialogue: 0,0:15:38.14,0:15:40.78,yin,,0,0,0,,我要确保 也不是我要确保\N{\fs12}I have to make sure-- well not I have to make sure,
Dialogue: 0,0:15:40.78,0:15:43.40,yin,,0,0,0,,编译器要确保它生成了代码\N{\fs12}the compiler has to make sure that it generates code
Dialogue: 0,0:15:43.53,0:15:45.19,yin,,0,0,0,,运行环境要确保它正常工作\N{\fs12}and the runtime has to make sure it works,
Dialogue: 0,0:15:45.26,0:15:48.34,yin,,0,0,0,,所以有一个强指针指向这个stopKey\N{\fs12}so that stopKey, that there's a strong pointer to it,
Dialogue: 0,0:15:48.50,0:15:49.88,yin,,0,0,0,,否则执行这个block时\N{\fs12}otherwise it could leave the heap
Dialogue: 0,0:15:50.10,0:15:51.50,yin,,0,0,0,,stopKey可能已经离开堆了\N{\fs12}by the time this block executes.
Dialogue: 0,0:15:51.50,0:15:53.62,yin,,0,0,0,,因为这个block可以在任意时间执行\N{\fs12}Because this block could execute at any time.
Dialogue: 0,0:15:53.84,0:15:56.28,yin,,0,0,0,,当你调用这个block时\N{\fs12}Okay? This block happens to execute immediately
Dialogue: 0,0:15:56.49,0:15:57.23,yin,,0,0,0,,它会立刻执行\N{\fs12}when you call this,
Dialogue: 0,0:15:57.36,0:15:59.79,yin,,0,0,0,,但是可以使用字典\N{\fs12}but it's legal for the dictionary
Dialogue: 0,0:15:59.79,0:16:01.90,yin,,0,0,0,,抓取这个block 保存在某个地方\N{\fs12}to grab this block and store it somewhere
Dialogue: 0,0:16:01.90,0:16:04.33,yin,,0,0,0,,在后面某个需要的时候再调用\N{\fs12}and execute it sometime later that it wants to.
Dialogue: 0,0:16:04.57,0:16:08.00,yin,,0,0,0,,仔细听下面这点\N{\fs12}Okay? So every time you-- listen to this carefully,
Dialogue: 0,0:16:08.09,0:16:10.92,yin,,0,0,0,,每次向block中的对象发送消息时\N{\fs12}every time you send a message to an object inside a block,
Dialogue: 0,0:16:11.19,0:16:14.37,yin,,0,0,0,,系统就会创建一个指向该对象的强指针\N{\fs12}a strong pointer is created to that object,
Dialogue: 0,0:16:14.51,0:16:17.60,yin,,0,0,0,,该指针会一直保持到block超出范围以后\N{\fs12}and it stays around until the block goes out of scope,
Dialogue: 0,0:16:17.81,0:16:19.60,yin,,0,0,0,,直到block不存在\N{\fs12}until the block no longer exists.
Dialogue: 0,0:16:20.09,0:16:21.88,yin,,0,0,0,,只要block存在\N{\fs12}Okay? As long as that block exists,
Dialogue: 0,0:16:21.95,0:16:23.80,yin,,0,0,0,,消息中每个对象\N{\fs12}a strong pointer to every single object
Dialogue: 0,0:16:23.82,0:16:25.28,yin,,0,0,0,,都会被一个强指针指着\N{\fs12}in there this message will exist.
Dialogue: 0,0:16:25.56,0:16:28.18,yin,,0,0,0,,在仔细讲解之前 我想先讲个简写方法\N{\fs12}Before I talk about that, I want to talk about some shorthand.
Dialogue: 0,0:16:28.34,0:16:31.67,yin,,0,0,0,,如果block没有参数 就像这个block一样\N{\fs12}If the block has no arguments, like this block, see?
Dialogue: 0,0:16:32.09,0:16:33.19,yin,,0,0,0,,这里没有参数\N{\fs12}No arguments there.
Dialogue: 0,0:16:33.41,0:16:35.91,yin,,0,0,0,,可以不用添加括号\N{\fs12}You do not need to put the parentheses, okay?
Dialogue: 0,0:16:36.02,0:16:37.13,yin,,0,0,0,,直接删掉就行\N{\fs12}You can just leave those off.
Dialogue: 0,0:16:37.28,0:16:40.38,yin,,0,0,0,,同样的 如果block的返回值...\N{\fs12}And similarly, if the return value of the block--
Dialogue: 0,0:16:40.38,0:16:42.02,yin,,0,0,0,,这个block是大家第一次见到\N{\fs12}so this block which is the first time
Dialogue: 0,0:16:42.04,0:16:43.42,yin,,0,0,0,,带有返回值的block\N{\fs12}you've seen a block with a return value,
Dialogue: 0,0:16:43.43,0:16:45.58,yin,,0,0,0,,返回一个BOOL值 看到那个BOOL了吗\N{\fs12}it returns a BOOL, see that BOOL?
Dialogue: 0,0:16:45.69,0:16:47.98,yin,,0,0,0,,如果返回值\N{\fs12}If the return value can be inferred
Dialogue: 0,0:16:48.19,0:16:50.74,yin,,0,0,0,,能够从block的内容推断出来\N{\fs12}from the contents of the block, right?
Dialogue: 0,0:16:51.05,0:16:54.55,yin,,0,0,0,,这个例子中 return [obj isKindOfClass: UIView class]\N{\fs12}So in this case, return obj isKindOfClass UI class,
Dialogue: 0,0:16:54.56,0:16:56.04,yin,,0,0,0,,肯定会返回一个BOOL值\N{\fs12}definitely going to return a BOOL,
Dialogue: 0,0:16:56.18,0:16:58.19,yin,,0,0,0,,不需要在这里再加一个BOOL\N{\fs12}you do not need to put the BOOL there.
Dialogue: 0,0:16:58.29,0:17:00.57,yin,,0,0,0,,换句话说 如果能够推断出来\N{\fs12}In other words, if it can be inferred,
Dialogue: 0,0:17:00.74,0:17:03.15,yin,,0,0,0,,系统就会自动为你识别出来\N{\fs12}it will figure it out for you, okay?
Dialogue: 0,0:17:03.73,0:17:05.85,yin,,0,0,0,,可以直接省略一部分语法\N{\fs12}So just to clean up the syntax,
Dialogue: 0,0:17:05.95,0:17:08.66,yin,,0,0,0,,不用总是再在那里加上BOOL等等\N{\fs12}you don't have to put the BOOL in there all the time or whatever.
Dialogue: 0,0:17:09.58,0:17:10.63,yin,,0,0,0,,好了 接下来呢\N{\fs12}Okay. Now.
Dialogue: 0,0:17:10.63,0:17:14.28,yin,,0,0,0,,我们来讲一下block是如何表现得像对象的\N{\fs12}Let's talk about how blocks sort of act like objects.
Dialogue: 0,0:17:14.28,0:17:16.98,yin,,0,0,0,,block不是对象\N{\fs12}Blocks are not objects, okay they're not,
Dialogue: 0,0:17:17.26,0:17:19.04,yin,,0,0,0,,但它们有时会表现得像对象\N{\fs12}but they sort of act like objects
Dialogue: 0,0:17:19.17,0:17:22.19,yin,,0,0,0,,只表现在这一个小的方面\N{\fs12}in the only in this fine really small way,
Dialogue: 0,0:17:22.19,0:17:24.29,yin,,0,0,0,,也就是它们可以被存储\N{\fs12}which is, they can be stored.
Dialogue: 0,0:17:24.96,0:17:26.71,yin,,0,0,0,,自动引用计数会统计\N{\fs12}Okay? And they are reference counted
Dialogue: 0,0:17:26.88,0:17:28.85,yin,,0,0,0,,它们的引用数目\N{\fs12}by the automatic reference counter. Okay?
Dialogue: 0,0:17:29.22,0:17:32.45,yin,,0,0,0,,能够存储意味着它们可以被保存在变量中\N{\fs12}So storing them means they can be stored in variables,
Dialogue: 0,0:17:32.56,0:17:36.41,yin,,0,0,0,,属性中 字典和数组中\N{\fs12}in properties, and in dictionaries and arrays.
Dialogue: 0,0:17:37.10,0:17:39.28,yin,,0,0,0,,所以block可以像对象一样进行存储\N{\fs12}Okay? So they can be stored just like they're objects,
Dialogue: 0,0:17:39.38,0:17:41.46,yin,,0,0,0,,但并不像对象那样可以理解消息\N{\fs12}but they don't understand any messages like an object.
Dialogue: 0,0:17:41.46,0:17:43.24,yin,,0,0,0,,实际上 它们理解一个消息 就是复制\N{\fs12}Actually, they understand one message which is copy,
Dialogue: 0,0:17:43.24,0:17:44.90,yin,,0,0,0,,这是一个挺重要的消息\N{\fs12}which is kind of an important message
Dialogue: 0,0:17:44.93,0:17:46.77,yin,,0,0,0,,因为它会在堆中复制block\N{\fs12}because that copies them in the heap,
Dialogue: 0,0:17:46.78,0:17:48.76,yin,,0,0,0,,如果你想要用一个指针始终指向block\N{\fs12}and if you want to keep a pointer to a block around,
Dialogue: 0,0:17:48.77,0:17:50.46,yin,,0,0,0,,可能你要对它进行复制\N{\fs12}you probably want to copy it, okay,
Dialogue: 0,0:17:50.55,0:17:52.85,yin,,0,0,0,,这样它才不会从栈中释放\N{\fs12}so it doesn't just go off the stack somewhere.
Dialogue: 0,0:17:54.36,0:17:57.80,yin,,0,0,0,,比如说 这里我将一个block放入一个数组\N{\fs12}So for example, here I am putting a block into an array,
Dialogue: 0,0:17:57.99,0:18:01.17,yin,,0,0,0,,我的类中有一个属性myBlocks\N{\fs12}so I have a property in my class myBlocks,
Dialogue: 0,0:18:01.19,0:18:02.95,yin,,0,0,0,,是一个block的可变数组\N{\fs12}it's a mutable array of blocks,
Dialogue: 0,0:18:03.58,0:18:08.16,yin,,0,0,0,,只要用self.myBlocks addObject:block\N{\fs12}and I just say self dot myBlocks addObject colon a block.
Dialogue: 0,0:18:09.04,0:18:11.86,yin,,0,0,0,,我知道这看起来很奇怪 是很怪\N{\fs12}Okay? I know this looks weird, and it is weird,
Dialogue: 0,0:18:11.96,0:18:13.11,yin,,0,0,0,,因为block不是对象\N{\fs12}because blocks are not objects,
Dialogue: 0,0:18:13.14,0:18:14.28,yin,,0,0,0,,但当要将它们进行存储时\N{\fs12}but they act like objects
Dialogue: 0,0:18:14.28,0:18:17.20,yin,,0,0,0,,和对象的操作是类似的\N{\fs12}for this purpose of storing them in things.
Dialogue: 0,0:18:17.81,0:18:19.85,yin,,0,0,0,,非常好用\N{\fs12}Okay? So pretty neat.
Dialogue: 0,0:18:19.85,0:18:22.27,yin,,0,0,0,,对了 我还没讲\N{\fs12}And by the way, I have not talked about
Dialogue: 0,0:18:22.34,0:18:24.28,yin,,0,0,0,,如何调用block\N{\fs12}basically how you would call this block.
Dialogue: 0,0:18:24.39,0:18:26.56,yin,,0,0,0,,如果我将这个block从数组中取出\N{\fs12}Like if I grab this block out of this array
Dialogue: 0,0:18:26.57,0:18:28.92,yin,,0,0,0,,想要调用它 要怎么做呢\N{\fs12}and wanted to invoke it, how would I do it?
Dialogue: 0,0:18:29.26,0:18:30.59,yin,,0,0,0,,我今天不讲\N{\fs12}I'm not going to talk about that today,
Dialogue: 0,0:18:30.59,0:18:31.73,yin,,0,0,0,,但是会演示\N{\fs12}but I'm going to show you
Dialogue: 0,0:18:32.00,0:18:33.22,yin,,0,0,0,,这样大家就能看到是怎样做的了\N{\fs12}so that you can see it.
Dialogue: 0,0:18:34.07,0:18:37.46,yin,,0,0,0,,在这门课中 大家不需要实现调用\N{\fs12}Really, you're not going to have to do that in this class,
Dialogue: 0,0:18:37.84,0:18:39.75,yin,,0,0,0,,因为要把block传递给iOS\N{\fs12}because you're going to be passing blocks to iOS
Dialogue: 0,0:18:39.76,0:18:41.03,yin,,0,0,0,,它来执行它们\N{\fs12}and it's going to be executing them,
Dialogue: 0,0:18:41.05,0:18:42.97,yin,,0,0,0,,但如果大家想知道 语法就是这样的\N{\fs12}but if you wanted to know, that's the syntax,
Dialogue: 0,0:18:42.98,0:18:44.88,yin,,0,0,0,,有点像C函数语法\N{\fs12}it's kind of like C-function syntax,
Dialogue: 0,0:18:45.14,0:18:46.15,yin,,0,0,0,,大家可以课下再看\N{\fs12}you can look offline,
Dialogue: 0,0:18:46.17,0:18:48.13,yin,,0,0,0,,很可惜 我没有时间讲这个了\N{\fs12}I just don't have time to cover it unfortunately.
Dialogue: 0,0:18:48.88,0:18:51.93,yin,,0,0,0,,这里有一个危险的地方\N{\fs12}But there's a real danger lurking here.
Dialogue: 0,0:18:52.69,0:18:54.64,yin,,0,0,0,,在上面的这段代码中\N{\fs12}Okay? In this code, above.
Dialogue: 0,0:18:54.86,0:18:56.45,yin,,0,0,0,,self doSomething这里\N{\fs12}Okay, this self, doSomething, thing.
Dialogue: 0,0:18:56.48,0:18:57.13,yin,,0,0,0,,是什么\N{\fs12}And what is it?
Dialogue: 0,0:18:57.15,0:18:59.20,yin,,0,0,0,,它叫做存储循环\N{\fs12}Well, it's called a memory cycle.
Dialogue: 0,0:18:59.25,0:19:00.84,yin,,0,0,0,,有多少人知道存储循环是什么\N{\fs12}How many people know what a memory cycle is?
Dialogue: 0,0:19:01.44,0:19:03.80,yin,,0,0,0,,不太多 很好 我来讲一下\N{\fs12}Okay, not very many, that's good so I'll cover this.
Dialogue: 0,0:19:05.08,0:19:07.69,yin,,0,0,0,,出现存储循环问题的原因是\N{\fs12}A memory cycle, it's caused
Dialogue: 0,0:19:07.70,0:19:11.26,yin,,0,0,0,,只要block存在\N{\fs12}because all the objects inside that block
Dialogue: 0,0:19:11.41,0:19:13.82,yin,,0,0,0,,block中的所有对象\N{\fs12}have a strong pointer to them,
Dialogue: 0,0:19:13.83,0:19:15.45,yin,,0,0,0,,就都有一个强指针指向它们\N{\fs12}as long as the block exists.
Dialogue: 0,0:19:15.62,0:19:18.84,yin,,0,0,0,,比如在这段代码中\N{\fs12}Okay? So, for example, in this code, self--
Dialogue: 0,0:19:20.08,0:19:23.08,yin,,0,0,0,,block会有一个强指针指向self\N{\fs12}a strong pointer will be held by that block to self.
Dialogue: 0,0:19:23.51,0:19:24.23,yin,,0,0,0,,知道为什么吗\N{\fs12}You see why?
Dialogue: 0,0:19:24.31,0:19:27.01,yin,,0,0,0,,因为只要这个block保存在数组中\N{\fs12}Because the block, as long as it stays around in that array,
Dialogue: 0,0:19:27.05,0:19:28.87,yin,,0,0,0,,它就需要能够调用self doSomething\N{\fs12}it needs to be able to call self doSomething,
Dialogue: 0,0:19:28.87,0:19:31.07,yin,,0,0,0,,所以它需要始终用一个强指针指向self\N{\fs12}so it needs to always keep a strong pointer to self,
Dialogue: 0,0:19:31.08,0:19:32.88,yin,,0,0,0,,只要这个block存在\N{\fs12}as long as the block exists.
Dialogue: 0,0:19:33.20,0:19:35.83,yin,,0,0,0,,但是问题是\N{\fs12}However, the problem is
Dialogue: 0,0:19:36.01,0:19:38.87,yin,,0,0,0,,self也有一个强指针指向block\N{\fs12}that self has a strong pointer to the block.
Dialogue: 0,0:19:39.47,0:19:41.25,yin,,0,0,0,,通过它的myBlocks数组 对吧\N{\fs12}Through its myBlocks array. Right?
Dialogue: 0,0:19:41.26,0:19:42.91,yin,,0,0,0,,self有一个指向myBlocks的强指针\N{\fs12}Self has a strong pointer to myBlocks,
Dialogue: 0,0:19:42.92,0:19:43.55,yin,,0,0,0,,myBlocks是一个数组\N{\fs12}which is an array,
Dialogue: 0,0:19:43.56,0:19:45.59,yin,,0,0,0,,数组对其内容都是强引用的\N{\fs12}the array always hold their things strongly,
Dialogue: 0,0:19:45.74,0:19:48.15,yin,,0,0,0,,现在它们都用强指针指向对方\N{\fs12}so now both of them are pointing strongly to each other.
Dialogue: 0,0:19:48.19,0:19:50.89,yin,,0,0,0,,self指向block block指向self\N{\fs12}The block is pointing to self, self is pointing to the block.
Dialogue: 0,0:19:51.26,0:19:55.02,yin,,0,0,0,,这种情况下 二者都无法从栈中释放\N{\fs12}Neither of them can ever leave the heap in that situation
Dialogue: 0,0:19:55.14,0:19:56.62,yin,,0,0,0,,因为始终会有对方的强指针\N{\fs12}because there's always going to be a strong pointer
Dialogue: 0,0:19:56.62,0:19:58.52,yin,,0,0,0,,指向自己\N{\fs12}to them, each other's, right?
Dialogue: 0,0:19:58.53,0:19:59.98,yin,,0,0,0,,没有办法让一个先释放\N{\fs12}One of them can't leave first
Dialogue: 0,0:20:00.14,0:20:01.81,yin,,0,0,0,,然后另外一个就没有指针指着了\N{\fs12}and make it so there's no pointer to the other,
Dialogue: 0,0:20:02.06,0:20:03.81,yin,,0,0,0,,因为它们都不让对方释放\N{\fs12}because they are keeping each other in.
Dialogue: 0,0:20:03.81,0:20:05.06,yin,,0,0,0,,这叫做存储循环\N{\fs12}That's called a memory cycle.
Dialogue: 0,0:20:05.48,0:20:07.63,yin,,0,0,0,,我们得打破这种循环\N{\fs12}Okay? And we have to break these cycles.
Dialogue: 0,0:20:08.11,0:20:09.22,yin,,0,0,0,,这是个严重的问题\N{\fs12}Okay? This is a serious problem,
Dialogue: 0,0:20:09.24,0:20:11.11,yin,,0,0,0,,我们当然希望能够打破这种循环\N{\fs12}you definitely want to be able to break these cycles,
Dialogue: 0,0:20:11.29,0:20:12.34,yin,,0,0,0,,方法是这样的\N{\fs12}and here's how we do it.
Dialogue: 0,0:20:12.43,0:20:14.36,yin,,0,0,0,,我们要用一个局部变量\N{\fs12}We're going to do it with a local variable.
Dialogue: 0,0:20:14.99,0:20:18.17,yin,,0,0,0,,局部变量都是怎样的\N{\fs12}Okay? Now, local variables are all what?
Dialogue: 0,0:20:18.27,0:20:19.08,yin,,0,0,0,,都是强类型\N{\fs12}They're all strong.
Dialogue: 0,0:20:19.64,0:20:21.15,yin,,0,0,0,,局部变量都是强类型\N{\fs12}Right? Local variables are strong,
Dialogue: 0,0:20:21.17,0:20:23.97,yin,,0,0,0,,是指向堆中的强指针 指针变量\N{\fs12}they're strong pointers into the heap, pointer variables,
Dialogue: 0,0:20:24.04,0:20:27.70,yin,,0,0,0,,直到方法结束 这时强指针被释放\N{\fs12}until the method ends, and now the strong pointer goes away
Dialogue: 0,0:20:27.70,0:20:29.76,yin,,0,0,0,,这时局部变量\N{\fs12}and so now that local variable obviously
Dialogue: 0,0:20:29.77,0:20:32.20,yin,,0,0,0,,显然就不再用强指针指向堆中的内容了\N{\fs12}is not holding something in the heap by being strong.
Dialogue: 0,0:20:32.65,0:20:36.08,yin,,0,0,0,,但是有一种方法可以创建弱类型局部变量\N{\fs12}But there is a way to actually create weak local variables,
Dialogue: 0,0:20:36.41,0:20:38.16,yin,,0,0,0,,就是在前面加上__weak\N{\fs12}with underbar, underbar, weak.
Dialogue: 0,0:20:38.58,0:20:40.83,yin,,0,0,0,,将双下划线weak\N{\fs12}Okay? Underbar, underbar, weak
Dialogue: 0,0:20:40.85,0:20:42.46,yin,,0,0,0,,添加到一个局部变量声明之前\N{\fs12}before a local variable declaration
Dialogue: 0,0:20:42.47,0:20:45.17,yin,,0,0,0,,这个变量就是弱类型的了\N{\fs12}will make that variable weak, okay?
Dialogue: 0,0:20:45.18,0:20:48.29,yin,,0,0,0,,记得吗 弱类型表示它不会在堆中保存该对象\N{\fs12}Remember that weak means it's not keeping the object
Dialogue: 0,0:20:48.29,0:20:50.09,yin,,0,0,0,,如果没有其他元素指向它\N{\fs12}in the heap, if no one else is pointing to it,
Dialogue: 0,0:20:50.09,0:20:52.99,yin,,0,0,0,,它就会被释放 弱变量变为nil\N{\fs12}it just goes away, and the weak variable gets set to nil.
Dialogue: 0,0:20:53.88,0:20:57.79,yin,,0,0,0,,所以我要创建一个局部变量weakSelf\N{\fs12}Okay? So I'm going to make a local variable, weakSelf,
Dialogue: 0,0:20:58.31,0:21:01.06,yin,,0,0,0,,它指向self 但用的是弱指针\N{\fs12}which points to self, but is weak pointer to self,
Dialogue: 0,0:21:01.32,0:21:05.31,yin,,0,0,0,,现在我可以在block中使用它\N{\fs12}and now I can use that inside this block that I added.
Dialogue: 0,0:21:05.68,0:21:07.52,yin,,0,0,0,,我要将doSomething发送给weakSelf\N{\fs12}I'll send doSomething to weakSelf,
Dialogue: 0,0:21:08.05,0:21:09.70,yin,,0,0,0,,这时就不会再出现循环了\N{\fs12}and now I don't have this cycle anymore,
Dialogue: 0,0:21:10.03,0:21:12.34,yin,,0,0,0,,因为block没有了指向self的强指针\N{\fs12}because the block no longer has a strong pointer to self,
Dialogue: 0,0:21:12.47,0:21:13.41,yin,,0,0,0,,是一个弱指针\N{\fs12}it has a weak pointer.
Dialogue: 0,0:21:14.57,0:21:16.71,yin,,0,0,0,,我们要使用这个方法\N{\fs12}Okay? So yes, we will do this.
Dialogue: 0,0:21:17.02,0:21:18.29,yin,,0,0,0,,大家可能要在作业中用到\N{\fs12}You might have to do it in your homework,
Dialogue: 0,0:21:18.29,0:21:20.08,yin,,0,0,0,,取决于你们的实现方法\N{\fs12}depending on how you decide to implement it,
Dialogue: 0,0:21:20.34,0:21:21.93,yin,,0,0,0,,我肯定会在示例中演示它\N{\fs12}and I will definitely do it in the demo today
Dialogue: 0,0:21:22.03,0:21:24.24,yin,,0,0,0,,大家可以看到是如何使用的\N{\fs12}so you can see how this works. Okay?
Dialogue: 0,0:21:24.49,0:21:26.88,yin,,0,0,0,,我们使用自动引用计数时\N{\fs12}This is really the only place we have these kind of cycles,
Dialogue: 0,0:21:27.10,0:21:29.63,yin,,0,0,0,,只会在这种情况下遇到这种循环\N{\fs12}with ARC, with the automatic reference counter,
Dialogue: 0,0:21:29.97,0:21:31.08,yin,,0,0,0,,并不是太糟糕\N{\fs12}it's not too bad,
Dialogue: 0,0:21:31.09,0:21:34.13,yin,,0,0,0,,但你要知道有这个问题 并处理它\N{\fs12}you just have to know it's there, and deal with it.
Dialogue: 0,0:21:36.76,0:21:37.15,yin,,0,0,0,,好的\N{\fs12}Okay.
Dialogue: 0,0:21:37.60,0:21:39.49,yin,,0,0,0,,在iOS中 何时使用block呢\N{\fs12}So when do we use blocks in iOS?
Dialogue: 0,0:21:39.50,0:21:42.00,yin,,0,0,0,,可以用于枚举 我们刚才就用了字典\N{\fs12}We use them for enumeration, you saw that dictionary,
Dialogue: 0,0:21:42.00,0:21:43.25,yin,,0,0,0,,枚举 键和值\N{\fs12}enumerate, keys and values.
Dialogue: 0,0:21:43.25,0:21:45.04,yin,,0,0,0,,常用于枚举\N{\fs12}We use it a lot for enumeration.
Dialogue: 0,0:21:45.30,0:21:46.89,yin,,0,0,0,,我们还会用于视图动画\N{\fs12}We use it for view animation,
Dialogue: 0,0:21:46.90,0:21:49.01,yin,,0,0,0,,这节课后面的部分\N{\fs12}I'm going to do the whole rest of this lecture
Dialogue: 0,0:21:49.02,0:21:50.66,yin,,0,0,0,,和下节课前面部分都是关于视图动画的\N{\fs12}and the start of next lecture is going to be about that.
Dialogue: 0,0:21:51.13,0:21:52.31,yin,,0,0,0,,我们还会用于排序\N{\fs12}And we use it for sorting.
Dialogue: 0,0:21:52.99,0:21:56.77,yin,,0,0,0,,你可以向数组发送消息 让这个数组进行排序\N{\fs12}There's messages you can send to arrays like sort this array,
Dialogue: 0,0:21:56.83,0:22:00.04,yin,,0,0,0,,用这个block比较数组中的两个对象\N{\fs12}and use this block to compare two objects in the array.
Dialogue: 0,0:22:00.96,0:22:02.95,yin,,0,0,0,,还用于通知\N{\fs12}Okay? Notifications.
Dialogue: 0,0:22:03.02,0:22:04.70,yin,,0,0,0,,当进行广播时\N{\fs12}Right? When a radio station broadcasts
Dialogue: 0,0:22:04.72,0:22:05.98,yin,,0,0,0,,不用发送通知消息\N{\fs12}instead of sending a notification message,
Dialogue: 0,0:22:05.98,0:22:07.87,yin,,0,0,0,,可以直接说 执行这个block\N{\fs12}you can say "Just execute this block"
Dialogue: 0,0:22:08.58,0:22:10.96,yin,,0,0,0,,当广播站进行广播时\N{\fs12}when broadcast happens on the radio station.
Dialogue: 0,0:22:11.45,0:22:12.92,yin,,0,0,0,,错误处理程序很常见\N{\fs12}Error handler is very common.
Dialogue: 0,0:22:13.20,0:22:15.53,yin,,0,0,0,,执行这个操作 出现错误时\N{\fs12}Do this thing, and when an error happens,
Dialogue: 0,0:22:15.55,0:22:17.20,yin,,0,0,0,,执行这个block 我会进行处理\N{\fs12}execute this block and I'll handle it.
Dialogue: 0,0:22:18.30,0:22:21.42,yin,,0,0,0,,完成处理程序同样很常见\N{\fs12}Okay? Completion handlers also very common.
Dialogue: 0,0:22:21.77,0:22:23.94,yin,,0,0,0,,某个操作需要一段时间才能完成\N{\fs12}Do this thing that's going to take a long time,
Dialogue: 0,0:22:23.95,0:22:26.09,yin,,0,0,0,,会在后台线程中完成\N{\fs12}and it's gonna be done in a background thread,
Dialogue: 0,0:22:26.38,0:22:28.09,yin,,0,0,0,,当它完成时\N{\fs12}and when it's done,
Dialogue: 0,0:22:28.48,0:22:29.98,yin,,0,0,0,,执行这个block 让我知道\N{\fs12}execute this block to let me know.
Dialogue: 0,0:22:30.95,0:22:33.36,yin,,0,0,0,,实际上 动画会完成这个操作\N{\fs12}Okay? Animation does that, in fact,
Dialogue: 0,0:22:33.36,0:22:34.65,yin,,0,0,0,,我们也会在动画中见到\N{\fs12}we'll see that in animation too.
Dialogue: 0,0:22:35.29,0:22:35.74,yin,,0,0,0,,有问题吗\N{\fs12}Question?
Dialogue: 0,0:22:36.00,0:22:38.61,yin,,0,0,0,,如果你在类中定义了一个方法\N{\fs12}So you have like a method defined in your class
Dialogue: 0,0:22:38.61,0:22:41.06,yin,,0,0,0,,而你想将它作为block使用\N{\fs12}and you want to use that function as a block.
Dialogue: 0,0:22:41.42,0:22:43.27,yin,,0,0,0,,有什么简单方法来引用它吗\N{\fs12}Is there any easy way to refer to it,
Dialogue: 0,0:22:43.30,0:22:44.40,yin,,0,0,0,,还是必须要将它写成block呢\N{\fs12}or do you have to like write it as a block?
Dialogue: 0,0:22:44.55,0:22:46.60,yin,,0,0,0,,问题是 如果我有一个方法\N{\fs12}Yeah, so the question is, if I had a method,
Dialogue: 0,0:22:47.16,0:22:48.40,yin,,0,0,0,,定义在类中等等\N{\fs12}defined in my class or whatever,
Dialogue: 0,0:22:48.41,0:22:50.55,yin,,0,0,0,,我想将它作为block的内容\N{\fs12}and I want to use it as the contents of the block,
Dialogue: 0,0:22:50.73,0:22:53.01,yin,,0,0,0,,只要在block中调用self和那个方法\N{\fs12}just call self and that method inside the block,
Dialogue: 0,0:22:53.55,0:22:54.55,yin,,0,0,0,,就可以调用了\N{\fs12}and that will call it.
Dialogue: 0,0:22:54.75,0:22:56.34,yin,,0,0,0,,这个操作实际上很常用\N{\fs12}That's a common thing to want to do, actually.
Dialogue: 0,0:22:57.94,0:22:59.73,yin,,0,0,0,,block还有一个非常非常重要的用处\N{\fs12}A very, very important use of blocks,
Dialogue: 0,0:22:59.75,0:23:01.10,yin,,0,0,0,,我们会在后面的课程中讲到\N{\fs12}which we're going to talk about later in the quarter,
Dialogue: 0,0:23:01.11,0:23:02.26,yin,,0,0,0,,就是多线程\N{\fs12}is multi-threading.
Dialogue: 0,0:23:02.66,0:23:05.56,yin,,0,0,0,,就是让应用\N{\fs12}Okay? Which is getting your application
Dialogue: 0,0:23:05.57,0:23:07.49,yin,,0,0,0,,同时执行多个操作\N{\fs12}doing multiple things at the same time,
Dialogue: 0,0:23:07.86,0:23:08.61,yin,,0,0,0,,严格来说 不是同时\N{\fs12}not really at the same time,
Dialogue: 0,0:23:08.61,0:23:10.32,yin,,0,0,0,,但看起来是同时执行\N{\fs12}but seemingly at the same time.
Dialogue: 0,0:23:11.13,0:23:13.10,yin,,0,0,0,,我真的推荐大家...\N{\fs12}And I really encourage you,
Dialogue: 0,0:23:13.11,0:23:15.07,yin,,0,0,0,,只有几个地方 我会让你们回去查看文档\N{\fs12}this is one of the few times I'm going to tell you go look
Dialogue: 0,0:23:15.07,0:23:17.50,yin,,0,0,0,,这里就是其中之一 建议大家查看block相关文档\N{\fs12}in the documentation to find out about blocks,
Dialogue: 0,0:23:17.51,0:23:20.85,yin,,0,0,0,,直接在Xcode文档中搜索block\N{\fs12}just search for blocks in Xcode documentation,
Dialogue: 0,0:23:21.03,0:23:22.07,yin,,0,0,0,,就会找到相关内容\N{\fs12}and you can find out things like
Dialogue: 0,0:23:22.09,0:23:24.88,yin,,0,0,0,,比如 如何声明一个block类型的局部变量\N{\fs12}how to declare a local variable that is a block,
Dialogue: 0,0:23:24.89,0:23:25.50,yin,,0,0,0,,这类内容\N{\fs12}and things like that,
Dialogue: 0,0:23:25.51,0:23:26.80,yin,,0,0,0,,因为我没有仔细讲这些内容\N{\fs12}because I haven't really talked about those things.
Dialogue: 0,0:23:26.91,0:23:28.74,yin,,0,0,0,,我讲的关于block的内容\N{\fs12}Mostly I've just talked to you enough about blocks
Dialogue: 0,0:23:28.79,0:23:31.51,yin,,0,0,0,,可以让大家学会调用参数为block的方法\N{\fs12}to be able to call methods that take blocks as arguments.
Dialogue: 0,0:23:31.97,0:23:34.57,yin,,0,0,0,,到目前为止 我讲过的就是这些内容\N{\fs12}Okay? That's all I've pretty much shown you so far.
Dialogue: 0,0:23:35.91,0:23:37.96,yin,,0,0,0,,这就是我想要讲的\N{\fs12}Okay. So that's it for the Objective-C
Dialogue: 0,0:23:38.54,0:23:39.51,yin,,0,0,0,,Objective-C的内容\N{\fs12}that I wanted to cover.
Dialogue: 0,0:23:39.65,0:23:42.74,yin,,0,0,0,,现在我们可以进入有趣的部分了 也就是动画\N{\fs12}And now we can get into the fun stuff, which is animation.
Dialogue: 0,0:23:43.09,0:23:45.52,yin,,0,0,0,,今天这节课剩下的时间都是这个内容\N{\fs12}Alright? So that's going to be the rest of today
Dialogue: 0,0:23:45.53,0:23:47.59,yin,,0,0,0,,周三可能还要再讲一会\N{\fs12}and probably the start of Wednesday
Dialogue: 0,0:23:47.62,0:23:49.50,yin,,0,0,0,,因为这个示例很大\N{\fs12}because this demo is really big.
Dialogue: 0,0:23:49.94,0:23:55.59,yin,,0,0,0,,iOS中有很多不同的动画\N{\fs12}And there's lots of different animation that goes on in iOS.
Dialogue: 0,0:23:55.60,0:23:59.25,yin,,0,0,0,,我今天要讲的 大概只会在这门课上讲到\N{\fs12}I'm going to talk today, and only really in this course,
Dialogue: 0,0:24:00.02,0:24:02.29,yin,,0,0,0,,是关于为视图添加动画的\N{\fs12}for the most part, about animating views.
Dialogue: 0,0:24:02.78,0:24:04.75,yin,,0,0,0,,大家知道如何创建自定义视图 对吧\N{\fs12}Okay? You know how to create custom views, right?
Dialogue: 0,0:24:04.96,0:24:07.25,yin,,0,0,0,,你甚至可以为非自定义视图添加动画\N{\fs12}And you can even animate non-custom views,
Dialogue: 0,0:24:07.26,0:24:08.59,yin,,0,0,0,,按钮等等\N{\fs12}buttons, or whatever you want,
Dialogue: 0,0:24:08.73,0:24:11.52,yin,,0,0,0,,就是要让视图在屏幕上移动\N{\fs12}but basically making views move around the screen,
Dialogue: 0,0:24:11.53,0:24:15.29,yin,,0,0,0,,缩放 淡入淡出 旋转\N{\fs12}get bigger and smaller, fade in and out, spin around and rotate,
Dialogue: 0,0:24:15.48,0:24:16.57,yin,,0,0,0,,这是我们要讲的内容\N{\fs12}that's what we're going to talk about.
Dialogue: 0,0:24:16.57,0:24:17.99,yin,,0,0,0,,为视图添加动画\N{\fs12}Okay? Animating views.
Dialogue: 0,0:24:18.07,0:24:19.99,yin,,0,0,0,,但还有其他动画\N{\fs12}But there's other animation that goes on,
Dialogue: 0,0:24:20.00,0:24:22.98,yin,,0,0,0,,比如进入导航控制器后 进行点击\N{\fs12}like when you go into a navigation controller, and you click,
Dialogue: 0,0:24:22.98,0:24:25.37,yin,,0,0,0,,一个新视图就会滑进来\N{\fs12}and a new view slides in, okay?
Dialogue: 0,0:24:25.37,0:24:27.31,yin,,0,0,0,,这也是动画\N{\fs12}That's animation. Alright?
Dialogue: 0,0:24:27.32,0:24:29.93,yin,,0,0,0,,如果是在地图应用中\N{\fs12}And it's possible, also, okay you're in the maps app
Dialogue: 0,0:24:30.22,0:24:31.65,yin,,0,0,0,,在角落点击\N{\fs12}and you click in the corner
Dialogue: 0,0:24:31.65,0:24:33.96,yin,,0,0,0,,它会卷起来 显示其他选项\N{\fs12}and it curls up to show you other options?
Dialogue: 0,0:24:34.03,0:24:35.26,yin,,0,0,0,,这也是动画\N{\fs12}That's animation, okay?
Dialogue: 0,0:24:35.40,0:24:37.98,yin,,0,0,0,,这种视图控制器的动画\N{\fs12}All that kind of view controller animation,
Dialogue: 0,0:24:37.99,0:24:39.78,yin,,0,0,0,,我大概不会讲\N{\fs12}I'm not going to talk about, for the most part.
Dialogue: 0,0:24:40.08,0:24:43.48,yin,,0,0,0,,但也有对这部分的支持\N{\fs12}Okay? But that's all-- there's all support for that as well.
Dialogue: 0,0:24:43.57,0:24:45.70,yin,,0,0,0,,iOS中还有一套机制\N{\fs12}There's also a whole other thing in iOS
Dialogue: 0,0:24:45.72,0:24:48.26,yin,,0,0,0,,叫做集合视图 是一个视图的集合\N{\fs12}called the collection view, which is a collection of views
Dialogue: 0,0:24:48.27,0:24:51.91,yin,,0,0,0,,视图排列在网格中或是流程型\N{\fs12}that kind of live in a grid, sort of, or in a flow,
Dialogue: 0,0:24:52.14,0:24:55.13,yin,,0,0,0,,这些都可以添加动画效果\N{\fs12}kind of layout, and those all can be animated.
Dialogue: 0,0:24:55.13,0:24:56.59,yin,,0,0,0,,里面也有动画\N{\fs12}What's going on in there as well,
Dialogue: 0,0:24:57.20,0:24:58.58,yin,,0,0,0,,但是我只会讲解视图的动画\N{\fs12}okay, but I'm only going to talk about views.
Dialogue: 0,0:24:59.11,0:25:03.17,yin,,0,0,0,,它们的底层是这个Core Animation核心动画框架\N{\fs12}Underneath all of that is this framework called core animation,
Dialogue: 0,0:25:03.18,0:25:06.06,yin,,0,0,0,,非常强大的框架\N{\fs12}super powerful framework, I mean,
Dialogue: 0,0:25:06.47,0:25:09.13,yin,,0,0,0,,是技术等级的动画框架\N{\fs12}industrial grade animation framework there,
Dialogue: 0,0:25:09.77,0:25:12.19,yin,,0,0,0,,但我们要通过比它高得多的层级入手\N{\fs12}but we're going to be doing it all at a much higher level,
Dialogue: 0,0:25:12.20,0:25:16.47,yin,,0,0,0,,更容易编程\N{\fs12}much easier to program, and you know, kind of easier to--
Dialogue: 0,0:25:17.32,0:25:18.93,yin,,0,0,0,,你不必知道太多\N{\fs12}you don't have to know quite so much about the detail
Dialogue: 0,0:25:18.95,0:25:20.58,yin,,0,0,0,,动画工作的细节\N{\fs12}of how animation really works.
Dialogue: 0,0:25:20.99,0:25:23.75,yin,,0,0,0,,Core Animation适用于那些专业动画人员\N{\fs12}Whereas core animation is really for animation people
Dialogue: 0,0:25:23.77,0:25:25.52,yin,,0,0,0,,制作重要的动画效果\N{\fs12}who want really to do serious animations,
Dialogue: 0,0:25:25.52,0:25:28.84,yin,,0,0,0,,很多iOS应用都是游戏之类的应用\N{\fs12}and a lot of iOS applications are games, or other things
Dialogue: 0,0:25:28.84,0:25:31.07,yin,,0,0,0,,里面有很重要的动画\N{\fs12}that have a very serious animation going on in there.
Dialogue: 0,0:25:31.37,0:25:32.38,yin,,0,0,0,,在iOS7中\N{\fs12}By the way, in iOS 7
Dialogue: 0,0:25:32.40,0:25:33.99,yin,,0,0,0,,还有很多实现动画的工具\N{\fs12}there's a lot of other things for doing animation,
Dialogue: 0,0:25:34.00,0:25:37.75,yin,,0,0,0,,比如 Sprite Kit用来添加sprite动画\N{\fs12}for example, Sprite Kit is a way to animate sprites,
Dialogue: 0,0:25:37.76,0:25:41.81,yin,,0,0,0,,从本质上说是2D图形元素\N{\fs12}which are essentially 2D graphic elements
Dialogue: 0,0:25:41.82,0:25:43.56,yin,,0,0,0,,以某种方式混合\N{\fs12}that are being composited in a way
Dialogue: 0,0:25:43.57,0:25:45.67,yin,,0,0,0,,以此获得3D视觉环境\N{\fs12}to try to get a 3D looking environment,
Dialogue: 0,0:25:45.67,0:25:47.83,yin,,0,0,0,,很多电子游戏就是这样的\N{\fs12}like a lot of video games are,
Dialogue: 0,0:25:48.31,0:25:49.94,yin,,0,0,0,,我们甚至不会用到Sprite Kit\N{\fs12}and we're not even going to touch Sprite Kit,
Dialogue: 0,0:25:49.95,0:25:51.99,yin,,0,0,0,,我认为不会的 除非最后一周用到了它\N{\fs12}I don't think, unless we get to it the last week.
Dialogue: 0,0:25:52.44,0:25:54.67,yin,,0,0,0,,内容很多 我不可能全部讲到\N{\fs12}So there's a lot of stuff that I can't possibly cover,
Dialogue: 0,0:25:54.67,0:25:57.44,yin,,0,0,0,,所以这里我们就只讲动画的基础部分\N{\fs12}so let's just talk the basics here of animation.
Dialogue: 0,0:25:58.02,0:26:02.31,yin,,0,0,0,,为视图添加动画主要有三种方法\N{\fs12}So there's three ways to animate views, basically.
Dialogue: 0,0:26:02.48,0:26:05.06,yin,,0,0,0,,第一种方法是\N{\fs12}Okay? The first way is that
Dialogue: 0,0:26:05.07,0:26:08.20,yin,,0,0,0,,视图中有一些非常特殊的属性\N{\fs12}there are some very special properties in view,
Dialogue: 0,0:26:08.20,0:26:10.05,yin,,0,0,0,,比如视图的frame属性\N{\fs12}namely the view's frame,
Dialogue: 0,0:26:10.06,0:26:11.95,yin,,0,0,0,,记得吗 就是包含它的那个矩形\N{\fs12}remember that's the rectangle enclosing it,
Dialogue: 0,0:26:12.30,0:26:15.28,yin,,0,0,0,,还有transform属性 讲卡牌游戏的时候\N{\fs12}its transform, which we talked about briefly,
Dialogue: 0,0:26:15.30,0:26:16.72,yin,,0,0,0,,简单提到过\N{\fs12}when we did the playing card thing,
Dialogue: 0,0:26:16.89,0:26:19.95,yin,,0,0,0,,transform指视图的缩放比例\N{\fs12}transform is the view scale,
Dialogue: 0,0:26:20.26,0:26:21.59,yin,,0,0,0,,视图可以被放大缩小\N{\fs12}can be used to scale it up and down,
Dialogue: 0,0:26:21.68,0:26:24.03,yin,,0,0,0,,以及旋转情况 视图可以被旋转\N{\fs12}and it's rotation, views can be rotated,
Dialogue: 0,0:26:24.24,0:26:25.05,yin,,0,0,0,,还有移动距离\N{\fs12}and also translation,
Dialogue: 0,0:26:25.05,0:26:27.02,yin,,0,0,0,,尽管通常情况下 我们会使用frame来移动\N{\fs12}although usually for translation we use the frame,
Dialogue: 0,0:26:27.02,0:26:28.08,yin,,0,0,0,,直接移动frame\N{\fs12}we move the frame around.
Dialogue: 0,0:26:28.44,0:26:30.66,yin,,0,0,0,,还有alpha 代表它的不透明度\N{\fs12}And also alpha, its opacity,
Dialogue: 0,0:26:30.97,0:26:35.43,yin,,0,0,0,,可以在任意时间向视图中添加这三个的动画\N{\fs12}these three things can be animated at any time into view.
Dialogue: 0,0:26:35.54,0:26:37.64,yin,,0,0,0,,意思是 你将它们设为新值\N{\fs12}Meaning, you set them to a new value
Dialogue: 0,0:26:37.78,0:26:39.97,yin,,0,0,0,,它会立刻变为那个新值\N{\fs12}and it will set to that new value immediately,
Dialogue: 0,0:26:40.05,0:26:43.10,yin,,0,0,0,,但是效果会过一段时间\N{\fs12}but the effect will appear on screen animated
Dialogue: 0,0:26:43.44,0:26:44.50,yin,,0,0,0,,才以动画显示在屏幕上\N{\fs12}over some amount of time.
Dialogue: 0,0:26:44.70,0:26:47.97,yin,,0,0,0,,我们来看一下它的工作原理\N{\fs12}So, let's take a look at how this works.
Dialogue: 0,0:26:47.97,0:26:51.12,yin,,0,0,0,,是通过UIView的一个类方法实现的\N{\fs12}It's done with a class method in UIView.
Dialogue: 0,0:26:51.30,0:26:53.91,yin,,0,0,0,,是UIView的类方法 而不是实例方法\N{\fs12}Okay? A class method, it's not an instance method in UIView,
Dialogue: 0,0:26:53.91,0:26:55.05,yin,,0,0,0,,是一个类方法\N{\fs12}it's a class method,
Dialogue: 0,0:26:55.44,0:26:59.69,yin,,0,0,0,,类方法的参数为动画参数\N{\fs12}and the class method basically takes the animation parameters,
Dialogue: 0,0:26:59.70,0:27:01.37,yin,,0,0,0,,时间多长之类的\N{\fs12}how long to take and stuff like that,
Dialogue: 0,0:27:01.47,0:27:04.17,yin,,0,0,0,,还有一个block参数 在这个block中\N{\fs12}and it takes a block, and inside that block,
Dialogue: 0,0:27:04.34,0:27:07.89,yin,,0,0,0,,可以修改这三个属性\N{\fs12}you can modify these three properties.
Dialogue: 0,0:27:08.14,0:27:09.31,yin,,0,0,0,,其实还可以做其他操作\N{\fs12}There's actually a few others you can do,
Dialogue: 0,0:27:09.32,0:27:11.04,yin,,0,0,0,,但是这里\N{\fs12}but these are the three main ones
Dialogue: 0,0:27:11.04,0:27:12.15,yin,,0,0,0,,我主要讲一下这三个属性\N{\fs12}I'm going to talk about here.
Dialogue: 0,0:27:12.66,0:27:13.57,yin,,0,0,0,,就是这样的\N{\fs12}So it looks like this.
Dialogue: 0,0:27:13.58,0:27:15.31,yin,,0,0,0,,叫做animationWithDuration\N{\fs12}It's called animationWithDuration,
Dialogue: 0,0:27:15.72,0:27:18.35,yin,,0,0,0,,第一个参数代表这个动画\N{\fs12}and the first argument is how long you want it to take
Dialogue: 0,0:27:18.56,0:27:20.34,yin,,0,0,0,,出现在屏幕上的时间\N{\fs12}for this thing to appear on screen,
Dialogue: 0,0:27:20.58,0:27:23.87,yin,,0,0,0,,要记住 你所做的改变会立刻生效\N{\fs12}remember that the change you make happens immediately.
Dialogue: 0,0:27:24.46,0:27:26.46,yin,,0,0,0,,所以如果你修改了alpha或者frame\N{\fs12}So if you change the alpha or the frame,
Dialogue: 0,0:27:26.51,0:27:29.07,yin,,0,0,0,,或者transform 会立刻生效\N{\fs12}or the transform, it instantly happens.
Dialogue: 0,0:27:29.07,0:27:31.48,yin,,0,0,0,,这个方法一执行就会生效\N{\fs12}As soon as this method is executed.
Dialogue: 0,0:27:31.52,0:27:34.79,yin,,0,0,0,,这个方法总会立即返回\N{\fs12}And this method returns immediately at all times, okay?
Dialogue: 0,0:27:34.96,0:27:36.98,yin,,0,0,0,,会立即执行block中的操作\N{\fs12}It does what's in the block immediately.
Dialogue: 0,0:27:37.23,0:27:41.04,yin,,0,0,0,,但是会过一段时间才显示出来\N{\fs12}But the appearance of it is going to happen over time.
Dialogue: 0,0:27:41.30,0:27:43.31,yin,,0,0,0,,如果修改了alpha 会淡入显示出来\N{\fs12}Right? It's going to fade in, if it's alpha,
Dialogue: 0,0:27:43.34,0:27:45.62,yin,,0,0,0,,如果修改了frame 会移动过去\N{\fs12}it's going to move over if it's the frame,
Dialogue: 0,0:27:45.74,0:27:48.18,yin,,0,0,0,,如果修改了transform 会进行旋转\N{\fs12}it's going to rotate if it's the transform.
Dialogue: 0,0:27:48.18,0:27:49.66,yin,,0,0,0,,需要一段时间才能发生\N{\fs12}Okay, that's going to happen over time.
Dialogue: 0,0:27:49.77,0:27:52.46,yin,,0,0,0,,duration表示需要多少时间来执行\N{\fs12}Duration says how long to take to do that.
Dialogue: 0,0:27:52.94,0:27:57.31,yin,,0,0,0,,delay代表等待多长时间再开始执行\N{\fs12}Okay? Delay is how long to wait to start doing it.
Dialogue: 0,0:27:57.94,0:27:59.32,yin,,0,0,0,,为什么会需要延迟呢\N{\fs12}And why would you want a delay?
Dialogue: 0,0:27:59.41,0:28:01.50,yin,,0,0,0,,因为有时你需要连锁动画\N{\fs12}Well, becomes sometimes you want to chain animations,
Dialogue: 0,0:28:01.50,0:28:04.17,yin,,0,0,0,,你想要先做一个两秒钟的动画\N{\fs12}you want to do one animation first, that takes two seconds,
Dialogue: 0,0:28:04.24,0:28:06.29,yin,,0,0,0,,然后再做另外一个动画\N{\fs12}then you want to do another animation after that.
Dialogue: 0,0:28:06.30,0:28:07.96,yin,,0,0,0,,有两种方法可以连接起来\N{\fs12}Well, there's two ways to chain.
Dialogue: 0,0:28:07.98,0:28:12.05,yin,,0,0,0,,一是用第二个参数delay来延迟第二个动画发生\N{\fs12}One is to delay the second one using this delay, second argument,
Dialogue: 0,0:28:12.26,0:28:14.00,yin,,0,0,0,,或者用completion block\N{\fs12}or there's a completion block--
Dialogue: 0,0:28:14.00,0:28:16.31,yin,,0,0,0,,最下面的那个completion block\N{\fs12}you see the completion block at the bottom there,
Dialogue: 0,0:28:16.70,0:28:18.92,yin,,0,0,0,,实际上 你可以在其中执行另一个动画\N{\fs12}you can actually do another animation in that.
Dialogue: 0,0:28:19.26,0:28:20.67,yin,,0,0,0,,因为这个completion block\N{\fs12}Because that completion block is called
Dialogue: 0,0:28:20.69,0:28:22.14,yin,,0,0,0,,会在动画完成时被调用\N{\fs12}when the animation completes.
Dialogue: 0,0:28:23.06,0:28:24.31,yin,,0,0,0,,明白吗 还有options\N{\fs12}Alright? Options.
Dialogue: 0,0:28:24.32,0:28:25.44,yin,,0,0,0,,我们会讲到所有options\N{\fs12}We're going to talk about all the options,
Dialogue: 0,0:28:25.44,0:28:27.70,yin,,0,0,0,,动画有不少对应的options\N{\fs12}and quite a few options for animating.
Dialogue: 0,0:28:27.82,0:28:30.79,yin,,0,0,0,,然后是这个最重要的animations参数\N{\fs12}And then there's the all important animations argument.
Dialogue: 0,0:28:30.79,0:28:33.43,yin,,0,0,0,,它是一个block 没有参数\N{\fs12}That is a block, you can see, it takes no arguments
Dialogue: 0,0:28:33.44,0:28:35.03,yin,,0,0,0,,也没有返回值\N{\fs12}and has no return value.
Dialogue: 0,0:28:35.12,0:28:37.56,yin,,0,0,0,,在这个block中 你可以修改frame\N{\fs12}In that block is where you change frame
Dialogue: 0,0:28:37.75,0:28:42.40,yin,,0,0,0,,还可以修改center center和frame是关联的\N{\fs12}and you can also change center, center and frame are related,
Dialogue: 0,0:28:42.59,0:28:44.01,yin,,0,0,0,,还可以修改transform和alpha\N{\fs12}and transform and alpha.
Dialogue: 0,0:28:44.37,0:28:46.43,yin,,0,0,0,,这是调用它的例子\N{\fs12}Okay? So here's an example of calling it.
Dialogue: 0,0:28:47.14,0:28:49.75,yin,,0,0,0,,UIView 类方法animateWithDuration\N{\fs12}So I'm saying UIView class method, animateWithDuration,
Dialogue: 0,0:28:49.75,0:28:51.74,yin,,0,0,0,,这个动画需要三秒\N{\fs12}this animation is going to take 3 seconds,
Dialogue: 0,0:28:51.89,0:28:54.74,yin,,0,0,0,,我要做的是 不管我的视图是什么状态\N{\fs12}and what I'm going to do is, whatever state my view is in,
Dialogue: 0,0:28:54.75,0:28:57.66,yin,,0,0,0,,我要让它淡出并消失\N{\fs12}I'm going to make it fade out and disappear.
Dialogue: 0,0:28:58.55,0:29:00.84,yin,,0,0,0,,看到animation这个block了吗\N{\fs12}Okay? So, you see in the animation block?
Dialogue: 0,0:29:00.85,0:29:03.07,yin,,0,0,0,,里面是myView.alpha=0.0\N{\fs12}MyView dot alpha equals zero.
Dialogue: 0,0:29:03.21,0:29:04.54,yin,,0,0,0,,表示完全透明\N{\fs12}That means fully transparent.
Dialogue: 0,0:29:05.32,0:29:09.62,yin,,0,0,0,,不管它现在的透明度是多少\N{\fs12}Okay? So that is, whatever it's at now, okay, could be anything,
Dialogue: 0,0:29:09.81,0:29:13.38,yin,,0,0,0,,它的透明度要从当前值变为0\N{\fs12}it's going to go from whatever it's at now to zero
Dialogue: 0,0:29:13.56,0:29:16.11,yin,,0,0,0,,在三秒内从屏幕上消失\N{\fs12}in three seconds, on screen, okay?
Dialogue: 0,0:29:16.32,0:29:18.07,yin,,0,0,0,,在代码中 这是立即发生的\N{\fs12}But in the code, this happens immediately.
Dialogue: 0,0:29:18.40,0:29:20.46,yin,,0,0,0,,视图的alpha值立即就变为0\N{\fs12}Immediately the view has gone to alpha of zero,
Dialogue: 0,0:29:20.52,0:29:23.93,yin,,0,0,0,,只不过在屏幕上不会显示当前状态\N{\fs12}it's just onscreen it's not showing what's currently the state,
Dialogue: 0,0:29:23.96,0:29:25.14,yin,,0,0,0,,会显示这个动画\N{\fs12}it's showing this animation.
Dialogue: 0,0:29:25.68,0:29:28.64,yin,,0,0,0,,还要注意这里的完成处理程序\N{\fs12}Okay? And notice the completion handler there.
Dialogue: 0,0:29:29.24,0:29:32.35,yin,,0,0,0,,完成处理程序block的参数\N{\fs12}Okay? The argument to the completion handler's block
Dialogue: 0,0:29:32.44,0:29:35.14,yin,,0,0,0,,是一个BOOL值 代表动画是否结束\N{\fs12}is a BOOL that says whether the animation finished.
Dialogue: 0,0:29:35.14,0:29:36.96,yin,,0,0,0,,这个动画为什么不会结束呢\N{\fs12}Why wouldn't this animation finish?
Dialogue: 0,0:29:37.15,0:29:39.95,yin,,0,0,0,,可能会有其他动画开始了alpha动画\N{\fs12}Well, some other animation might start animating alpha.
Dialogue: 0,0:29:40.42,0:29:41.99,yin,,0,0,0,,或者可能直接修改了alpha\N{\fs12}Or someone might just set alpha.
Dialogue: 0,0:29:42.51,0:29:45.00,yin,,0,0,0,,如果有人干扰了alpha的变化\N{\fs12}So if anyone interferes, with alpha,
Dialogue: 0,0:29:45.43,0:29:47.37,yin,,0,0,0,,那么完成处理程序就会被调用\N{\fs12}then the completion handler will get called,
Dialogue: 0,0:29:47.55,0:29:49.17,yin,,0,0,0,,这个动画会被中断\N{\fs12}this animation will get interrupted,
Dialogue: 0,0:29:49.42,0:29:51.00,yin,,0,0,0,,完成处理程序会被调用\N{\fs12}the completion handler will get called,
Dialogue: 0,0:29:51.09,0:29:52.54,yin,,0,0,0,,但是BOOL值为NO\N{\fs12}but the BOOL there will be no.
Dialogue: 0,0:29:53.34,0:29:54.58,yin,,0,0,0,,但如果没人中断它\N{\fs12}But if nothing interrupts it,
Dialogue: 0,0:29:54.60,0:29:56.52,yin,,0,0,0,,alpha就会变为0\N{\fs12}and the alpha goes all the way to zero,
Dialogue: 0,0:29:56.66,0:29:58.34,yin,,0,0,0,,然后这个完成处理程序会被调用\N{\fs12}then this completion handler will be called,
Dialogue: 0,0:29:58.41,0:30:01.41,yin,,0,0,0,,参数为YES 代表动画完成了\N{\fs12}and the argument will be yes, yes it completed,
Dialogue: 0,0:30:01.67,0:30:04.81,yin,,0,0,0,,如果动画完成了 我就要将视图\N{\fs12}and if that happens, I'm then going to remove my view
Dialogue: 0,0:30:04.85,0:30:05.95,yin,,0,0,0,,从视图层级中移除\N{\fs12}from the view hierarchy.
Dialogue: 0,0:30:06.47,0:30:10.36,yin,,0,0,0,,所以这行代码的意思就是淡出我的视图\N{\fs12}So what this single line of code does is it fades out my view,
Dialogue: 0,0:30:10.47,0:30:11.85,yin,,0,0,0,,如果成功淡出了\N{\fs12}and if it successfully fades it out,
Dialogue: 0,0:30:11.85,0:30:13.27,yin,,0,0,0,,就将它从视图层级中移除\N{\fs12}removes it from the view hierarchy.
Dialogue: 0,0:30:14.07,0:30:14.47,yin,,0,0,0,,有问题吗\N{\fs12}Question?
Dialogue: 0,0:30:14.85,0:30:16.44,yin,,0,0,0,,如果在下一行代码中\N{\fs12}Did you, in the next line,
Dialogue: 0,0:30:17.17,0:30:18.31,yin,,0,0,0,,做了同样的操作\N{\fs12}did kind of the same thing
Dialogue: 0,0:30:18.32,0:30:20.87,yin,,0,0,0,,但将alpha修改为了其他值\N{\fs12}except changed the alpha to something else?
Dialogue: 0,0:30:21.34,0:30:23.32,yin,,0,0,0,,并将delay设为了3秒\N{\fs12}And you had delay equals three seconds.
Dialogue: 0,0:30:23.77,0:30:25.44,yin,,0,0,0,,看起来就在二者交接的地方\N{\fs12}It seems like it's right on the edge there,
Dialogue: 0,0:30:25.77,0:30:27.81,yin,,0,0,0,,它也许是在第一个结束之后发生的\N{\fs12}maybe it happens after this one finishes,
Dialogue: 0,0:30:27.82,0:30:29.69,yin,,0,0,0,,也许是在结束之前发生的\N{\fs12}or maybe it happens before.
Dialogue: 0,0:30:29.70,0:30:30.33,yin,,0,0,0,,是怎样的呢\N{\fs12}Is there...?
Dialogue: 0,0:30:31.38,0:30:34.30,yin,,0,0,0,,好的 问题是 如果我又增加了一个动画\N{\fs12}Yeah, so the question is, what if I have another animation
Dialogue: 0,0:30:34.30,0:30:36.22,yin,,0,0,0,,在下一行执行\N{\fs12}that I execute on the very next line.
Dialogue: 0,0:30:36.38,0:30:38.84,yin,,0,0,0,,首先 假设我延迟了第一个动画\N{\fs12}Well first of all, let's say I delay this one, right?
Dialogue: 0,0:30:39.02,0:30:41.51,yin,,0,0,0,,你的意思是延迟第一个调用\N{\fs12}So you're saying delay this first call, put delay in there,
Dialogue: 0,0:30:41.51,0:30:42.88,yin,,0,0,0,,让delay为3 是吗\N{\fs12}delay equals three or something?
Dialogue: 0,0:30:43.06,0:30:45.81,yin,,0,0,0,,是延迟执行第二个 这样它就...\N{\fs12}Actually delay the second one, so that it has to--
Dialogue: 0,0:30:45.82,0:30:48.42,yin,,0,0,0,,好的 延迟第二个 3秒吗\N{\fs12}Okay, delay the second one, exactly three seconds?
Dialogue: 0,0:30:48.77,0:30:50.48,yin,,0,0,0,,这样也是没问题的\N{\fs12}Okay, so that will be fine
Dialogue: 0,0:30:50.50,0:30:52.39,yin,,0,0,0,,因为第一个动画\N{\fs12}because the first one will finish instantly
Dialogue: 0,0:30:52.41,0:30:54.16,yin,,0,0,0,,会在第二个开始前立即结束\N{\fs12}right before the second one starts, okay?
Dialogue: 0,0:30:54.17,0:30:56.27,yin,,0,0,0,,这种做法很常见\N{\fs12}Because it's a common practice to do just exactly that.
Dialogue: 0,0:30:56.41,0:30:57.67,yin,,0,0,0,,让第一个动画执行3秒\N{\fs12}Have something take three seconds,
Dialogue: 0,0:30:57.67,0:30:59.74,yin,,0,0,0,,然后让第二个动画延迟3秒执行\N{\fs12}and then start the other one with a delay of three seconds,
Dialogue: 0,0:30:59.85,0:31:00.75,yin,,0,0,0,,没问题 可以运行\N{\fs12}so yeah, it'll work.
Dialogue: 0,0:31:03.31,0:31:05.00,yin,,0,0,0,,还有一个... 错了\N{\fs12}Here's another-- oops!
Dialogue: 0,0:31:05.22,0:31:06.88,yin,,0,0,0,,我可以做一下这个例子 但是...\N{\fs12}Well I guess I can do that example, but anyway--
Dialogue: 0,0:31:06.98,0:31:08.19,yin,,0,0,0,,这是...\N{\fs12}so that is--
Dialogue: 0,0:31:09.40,0:31:10.88,yin,,0,0,0,,大家明白这里是怎么回事吗\N{\fs12}does everyone understand what's going on there?
Dialogue: 0,0:31:11.97,0:31:14.30,yin,,0,0,0,,就是这么简单 需要理解的主要是\N{\fs12}It's really that simple, the main thing to understand is
Dialogue: 0,0:31:14.32,0:31:16.89,yin,,0,0,0,,alpha会被立刻设为0\N{\fs12}that alpha would be set immediately to zero,
Dialogue: 0,0:31:17.15,0:31:18.92,yin,,0,0,0,,动画只是显示在屏幕上\N{\fs12}it's just on screen that it will show.
Dialogue: 0,0:31:20.01,0:31:21.46,yin,,0,0,0,,好了 我们讲一下这些options选项\N{\fs12}Alright, let's talk about some of the options.
Dialogue: 0,0:31:21.59,0:31:22.93,yin,,0,0,0,,第一个选项很有意思\N{\fs12}The first one's an interesting option,
Dialogue: 0,0:31:22.93,0:31:24.18,yin,,0,0,0,,BeginFromCurrentState\N{\fs12}BeginFromCurrentState.
Dialogue: 0,0:31:24.56,0:31:28.67,yin,,0,0,0,,如果你开启这个选项\N{\fs12}So if you set this option on, okay, and when--
Dialogue: 0,0:31:28.67,0:31:30.84,yin,,0,0,0,,在选项列表中开启这个选项 意思就是\N{\fs12}in the options list-- what this means is
Dialogue: 0,0:31:30.86,0:31:33.18,yin,,0,0,0,,如果还有一个正在执行的动画\N{\fs12}if there is another animation that is going on
Dialogue: 0,0:31:33.19,0:31:35.58,yin,,0,0,0,,动画的对象与我想要的是同一个\N{\fs12}that is animating the things I want to animate,
Dialogue: 0,0:31:35.82,0:31:39.39,yin,,0,0,0,,那么执行我的动画时 从它们的当前状态开始\N{\fs12}then pick up from wherever they are when you do my animation.
Dialogue: 0,0:31:40.01,0:31:43.53,yin,,0,0,0,,所以如果我要修改alpha 让它逐渐消失\N{\fs12}Okay? So if I'm doing that alpha thing and it's fading down
Dialogue: 0,0:31:43.53,0:31:45.89,yin,,0,0,0,,alpha变为0.2之类的\N{\fs12}and it's down to 0.2, or something,
Dialogue: 0,0:31:45.95,0:31:48.46,yin,,0,0,0,,然后我让另一个动画开始执行\N{\fs12}and then I issue another animation to start,
Dialogue: 0,0:31:48.64,0:31:50.63,yin,,0,0,0,,alpha增大到0.7\N{\fs12}that goes up to 0.7 alpha,
Dialogue: 0,0:31:51.06,0:31:53.90,yin,,0,0,0,,如果开启了beginFromCurrentState\N{\fs12}if I have beginFromCurrentState option on,
Dialogue: 0,0:31:53.96,0:31:56.50,yin,,0,0,0,,那么alpha就会从0.2变为0.7\N{\fs12}then it will start at 0.2 and go up to 0.7.
Dialogue: 0,0:31:56.98,0:31:59.22,yin,,0,0,0,,如果不开启这个选项 就会从0开始\N{\fs12}If I don't have this on, it will start at zero,
Dialogue: 0,0:31:59.34,0:32:02.92,yin,,0,0,0,,因为0才是alpha的真正的值 然后再增大到0.7\N{\fs12}because zero is what the real alpha is, and go up to 0.7.
Dialogue: 0,0:32:03.43,0:32:05.24,yin,,0,0,0,,所以beginFromCurrentState可以用来\N{\fs12}So beginFromCurrentState is a way
Dialogue: 0,0:32:05.24,0:32:07.66,yin,,0,0,0,,拦截其他动画\N{\fs12}of intercepting other animations,
Dialogue: 0,0:32:07.66,0:32:08.71,yin,,0,0,0,,拦截它们\N{\fs12}intercepting them, right?
Dialogue: 0,0:32:08.71,0:32:09.61,yin,,0,0,0,,在动画过程中拦截它们\N{\fs12}In mid-flight.
Dialogue: 0,0:32:10.50,0:32:13.35,yin,,0,0,0,,之所以需要这样做\N{\fs12}Okay? You need this because remember that
Dialogue: 0,0:32:13.43,0:32:15.08,yin,,0,0,0,,是因为设置动画参数后\N{\fs12}when you set these animation parameters,
Dialogue: 0,0:32:15.09,0:32:16.15,yin,,0,0,0,,会立即生效\N{\fs12}it happens immediately.
Dialogue: 0,0:32:16.36,0:32:18.14,yin,,0,0,0,,所以如果你想要拦截正在执行的动画\N{\fs12}So if you want to intercept animation in flight
Dialogue: 0,0:32:18.15,0:32:19.54,yin,,0,0,0,,你需要设置一些选项\N{\fs12}you need some option for the system
Dialogue: 0,0:32:19.56,0:32:21.85,yin,,0,0,0,,让系统检查视图的位置\N{\fs12}to go check and see where the view is,
Dialogue: 0,0:32:21.86,0:32:23.30,yin,,0,0,0,,在让它显示在新位置之前\N{\fs12}if it's flying across screen,
Dialogue: 0,0:32:23.89,0:32:25.43,yin,,0,0,0,,看它是否正在划过屏幕\N{\fs12}before it sends it to a new place
Dialogue: 0,0:32:25.45,0:32:28.17,yin,,0,0,0,,当想让它淡出时 看它是否已经正在淡出\N{\fs12}or if it's fading out, it fades at its new level.
Dialogue: 0,0:32:28.75,0:32:31.05,yin,,0,0,0,,通常情况下 这个选项都是开启的\N{\fs12}It's very common to have that option on, actually.
Dialogue: 0,0:32:32.03,0:32:34.09,yin,,0,0,0,,可以看到 下面还有AllowUserInteraction\N{\fs12}And then you see things like AllowUserInteraction,
Dialogue: 0,0:32:34.09,0:32:36.36,yin,,0,0,0,,动画正在执行时 这个视图中\N{\fs12}do you want to allow gestures to happen in this view
Dialogue: 0,0:32:36.38,0:32:37.35,yin,,0,0,0,,是否允许手势发生\N{\fs12}while it's in flight?
Dialogue: 0,0:32:37.37,0:32:39.26,yin,,0,0,0,,有的时候有用 有的时候没有\N{\fs12}Sometimes that makes sense, sometimes not.
Dialogue: 0,0:32:40.03,0:32:41.88,yin,,0,0,0,,看到下面这些Curve开头的选项了吗\N{\fs12}Down at the bottom, you see those curves?
Dialogue: 0,0:32:41.90,0:32:43.88,yin,,0,0,0,,CurveEaseIn和CurveEaseInEaseOut\N{\fs12}CurveEaseIn, CurveEaseOut?
Dialogue: 0,0:32:44.13,0:32:46.65,yin,,0,0,0,,有时当你在屏幕上移动视图时\N{\fs12}Sometimes when you move a view across screen
Dialogue: 0,0:32:46.74,0:32:48.72,yin,,0,0,0,,并不想直接将它提起来移动\N{\fs12}you don't want it to just up and move,
Dialogue: 0,0:32:49.11,0:32:51.25,yin,,0,0,0,,你想要的是慢慢地提起来\N{\fs12}you want it to kind of slowly pick up speed,
Dialogue: 0,0:32:51.45,0:32:53.85,yin,,0,0,0,,加速到最快 最后再减速\N{\fs12}get up to full speed, and then slow down at the end.
Dialogue: 0,0:32:54.12,0:32:56.14,yin,,0,0,0,,这样动画看起来更平滑\N{\fs12}It's a little smoother kind of animation
Dialogue: 0,0:32:56.14,0:32:59.46,yin,,0,0,0,,并不是生硬的移动视图\N{\fs12}than just here's my view, mmmmm, that's a little, mmmmmm,
Dialogue: 0,0:32:59.46,0:33:02.10,yin,,0,0,0,,而是有一个加速减速的过程\N{\fs12}you know, but mmmmmmmmmmmmm, okay?
Dialogue: 0,0:33:02.56,0:33:03.76,yin,,0,0,0,,效果更好 更平滑\N{\fs12}Better. Smoother.
Dialogue: 0,0:33:03.91,0:33:07.09,yin,,0,0,0,,CurveEaseIn和CurveEaseInEaseOut就是用来控制的\N{\fs12}So curve in, ease and out, that's for controlling that.
Dialogue: 0,0:33:07.42,0:33:10.60,yin,,0,0,0,,淡入淡出也是一样的 也可以这样处理\N{\fs12}Okay? Same thing for fading, you could do it for fading as well.
Dialogue: 0,0:33:10.60,0:33:12.43,yin,,0,0,0,,尽管淡入淡出更倾向于线性运动\N{\fs12}Though fading tends to be okay linear.
Dialogue: 0,0:33:12.73,0:33:16.02,yin,,0,0,0,,但是移动时用这个选项是很不错的\N{\fs12}But moving definitely curving in and out is a pretty good idea.
Dialogue: 0,0:33:16.52,0:33:17.67,yin,,0,0,0,,大家可以回去看文档\N{\fs12}So you can look in the documentation
Dialogue: 0,0:33:17.67,0:33:19.48,yin,,0,0,0,,看看这些选项的作用\N{\fs12}and see what all these options do,
Dialogue: 0,0:33:19.49,0:33:20.77,yin,,0,0,0,,你可以重复动画\N{\fs12}you can repeat animations,
Dialogue: 0,0:33:20.77,0:33:22.66,yin,,0,0,0,,让它们反复执行等等\N{\fs12}have them go over and over and things like that.
Dialogue: 0,0:33:23.46,0:33:26.57,yin,,0,0,0,,这就是为这些特殊属性添加动画的方法\N{\fs12}So that's how you animate those special properties, okay?
Dialogue: 0,0:33:26.91,0:33:30.72,yin,,0,0,0,,系统自动为他们添加动画 处理中间过程\N{\fs12}And it animates them, it figures out all the in between.
Dialogue: 0,0:33:30.73,0:33:32.72,yin,,0,0,0,,即便你是同时执行多个动画\N{\fs12}Even if you animate multiple of them at the same time.
Dialogue: 0,0:33:32.72,0:33:35.36,yin,,0,0,0,,移动 淡入淡出 旋转\N{\fs12}It's moving, it's fading, it's rotating,
Dialogue: 0,0:33:35.51,0:33:38.74,yin,,0,0,0,,系统会自动插入\N{\fs12}it will find, you know, it will interpolate all those points
Dialogue: 0,0:33:38.78,0:33:40.45,yin,,0,0,0,,变化路径上的所有点\N{\fs12}all the way along automatically.
Dialogue: 0,0:33:40.94,0:33:42.80,yin,,0,0,0,,性能也很高\N{\fs12}Okay? And pretty high performance, as well.
Dialogue: 0,0:33:44.97,0:33:47.57,yin,,0,0,0,,但有时 你在修改视图内容时\N{\fs12}Okay. Sometimes though, you're changing your contents
Dialogue: 0,0:33:47.57,0:33:51.43,yin,,0,0,0,,用的不是这三个属性\N{\fs12}of your view in a way that's other than those three things.
Dialogue: 0,0:33:51.54,0:33:53.79,yin,,0,0,0,,一个经典的例子就是卡牌游戏\N{\fs12}The classic example here, the playing card.
Dialogue: 0,0:33:54.09,0:33:55.99,yin,,0,0,0,,当翻转卡牌时\N{\fs12}When I'm flipping my playing card over,
Dialogue: 0,0:33:56.43,0:33:58.32,yin,,0,0,0,,我只设置了视图的一个属性\N{\fs12}the only property I'm setting in my view
Dialogue: 0,0:33:58.33,0:34:00.95,yin,,0,0,0,,就是让faceUp等于YES\N{\fs12}is faceUp equals yes, right?
Dialogue: 0,0:34:00.97,0:34:02.55,yin,,0,0,0,,这时卡牌就会翻到正面朝上\N{\fs12}And now my card flips over to face up.
Dialogue: 0,0:34:02.55,0:34:04.68,yin,,0,0,0,,faceUp等于NO 卡牌翻到正面朝下\N{\fs12}FaceUp equals no, now it flips over to down.
Dialogue: 0,0:34:04.88,0:34:07.20,yin,,0,0,0,,它本身并不是一个动画属性\N{\fs12}So that's not an animatable property per se,
Dialogue: 0,0:34:07.34,0:34:11.26,yin,,0,0,0,,但是我想让这个视图通过动画\N{\fs12}however, what I'd like to do is have the view change
Dialogue: 0,0:34:11.27,0:34:14.47,yin,,0,0,0,,实现从正面朝上到正面朝下的翻转\N{\fs12}from face up to face down through some animation,
Dialogue: 0,0:34:14.86,0:34:16.70,yin,,0,0,0,,比如翻转卡牌\N{\fs12}like flipping the card over,
Dialogue: 0,0:34:16.71,0:34:18.67,yin,,0,0,0,,或从一种状态渐变为另一种状态\N{\fs12}or dissolving between the two.
Dialogue: 0,0:34:18.78,0:34:21.09,yin,,0,0,0,,换句话说 我要通过某些动画\N{\fs12}In other words, I want to change the entire view
Dialogue: 0,0:34:21.25,0:34:25.39,yin,,0,0,0,,修改整个视图的状态\N{\fs12}through some animation to a new state.
Dialogue: 0,0:34:25.70,0:34:26.89,yin,,0,0,0,,这就是这个方法的功能\N{\fs12}And that's what this one is for.
Dialogue: 0,0:34:26.91,0:34:27.97,yin,,0,0,0,,transitionWithView\N{\fs12}TransitionWithView.
Dialogue: 0,0:34:28.37,0:34:31.11,yin,,0,0,0,,transitionWithView的一个参数为view\N{\fs12}So transitionWithView takes a view
Dialogue: 0,0:34:31.23,0:34:33.14,yin,,0,0,0,,即你的目标视图 比如playingCardView\N{\fs12}that you want to do, like a playing card view,
Dialogue: 0,0:34:33.39,0:34:35.28,yin,,0,0,0,,还有一个duration参数\N{\fs12}and it takes a duration.
Dialogue: 0,0:34:35.36,0:34:37.23,yin,,0,0,0,,代表从原有状态到新状态\N{\fs12}How long it's going to take to go
Dialogue: 0,0:34:37.23,0:34:39.28,yin,,0,0,0,,需要多长时间\N{\fs12}from the old state to the new state.
Dialogue: 0,0:34:39.61,0:34:42.00,yin,,0,0,0,,options和刚才的options类似\N{\fs12}Options, again, similar to the other options,
Dialogue: 0,0:34:42.00,0:34:44.24,yin,,0,0,0,,但这里要用上面这里\N{\fs12}but this is especially where you would specify the options
Dialogue: 0,0:34:44.25,0:34:45.38,yin,,0,0,0,,列出的选项\N{\fs12}listed at the top there,
Dialogue: 0,0:34:45.39,0:34:48.71,yin,,0,0,0,,比如UIViewAnimationOptionsTransitionFlipFormLeft\N{\fs12}like UIViewAnimationOptionsTransitionFlipFormLeft
Dialogue: 0,0:34:49.06,0:34:51.91,yin,,0,0,0,,代表我想让它翻过去\N{\fs12}would mean I want this to flip over
Dialogue: 0,0:34:51.92,0:34:54.92,yin,,0,0,0,,或者选择交叉溶解 或者向上卷起\N{\fs12}or cross dissolve, or curl up.
Dialogue: 0,0:34:56.61,0:34:58.97,yin,,0,0,0,,然后是animations 也是一个block\N{\fs12}And then animations, again, is a block,
Dialogue: 0,0:34:59.17,0:35:00.93,yin,,0,0,0,,就是在这里设置faceUp\N{\fs12}that's where you're going to set faceUp.
Dialogue: 0,0:35:02.23,0:35:04.52,yin,,0,0,0,,在这个block中 你可以对视图进行各种设置\N{\fs12}In that block, you can set anything you want about the view
Dialogue: 0,0:35:04.53,0:35:06.09,yin,,0,0,0,,让它变为新状态\N{\fs12}to make it be in its new state,
Dialogue: 0,0:35:06.59,0:35:09.36,yin,,0,0,0,,系统会应用这些修改\N{\fs12}and the system will apply all those changes,
Dialogue: 0,0:35:09.46,0:35:12.38,yin,,0,0,0,,在屏外重绘新状态的视图\N{\fs12}re-draw the view in the new state, off screen,
Dialogue: 0,0:35:12.50,0:35:14.28,yin,,0,0,0,,然后在二者之间进行转换\N{\fs12}and then transition between the two.
Dialogue: 0,0:35:14.53,0:35:16.15,yin,,0,0,0,,原来的状态现在显示在屏幕上\N{\fs12}The old state is on screen now,
Dialogue: 0,0:35:16.15,0:35:18.04,yin,,0,0,0,,变化后的视图在这边\N{\fs12}and whatever your changes result in.
Dialogue: 0,0:35:18.64,0:35:19.27,yin,,0,0,0,,明白吗\N{\fs12}Make sense?
Dialogue: 0,0:35:19.93,0:35:20.73,yin,,0,0,0,,有问题吗\N{\fs12}Questions about that?
Dialogue: 0,0:35:21.59,0:35:24.88,yin,,0,0,0,,然后是completion 一样的 如果动画被中断了\N{\fs12}And then completion, same thing, if you get interrupted somehow,
Dialogue: 0,0:35:25.10,0:35:27.44,yin,,0,0,0,,这里比较不容易中断\N{\fs12}you know, it's harder to get interrupted on this one,
Dialogue: 0,0:35:27.44,0:35:30.39,yin,,0,0,0,,但是可以中断 然后完成处理程序就会被调用\N{\fs12}but it can happen, then the completion handler gets called.
Dialogue: 0,0:35:30.61,0:35:31.09,yin,,0,0,0,,两种方式\N{\fs12}Either way.
Dialogue: 0,0:35:32.00,0:35:33.72,yin,,0,0,0,,这个很好用\N{\fs12}Okay? So this one will be great.
Dialogue: 0,0:35:33.74,0:35:35.91,yin,,0,0,0,,作业的一部分是要翻转卡牌\N{\fs12}Part of your homework is to flip that card over,
Dialogue: 0,0:35:36.26,0:35:38.14,yin,,0,0,0,,你要用的就是这个方法\N{\fs12}and this is the method you're going to want to use,
Dialogue: 0,0:35:39.74,0:35:41.10,yin,,0,0,0,,非常简单\N{\fs12}so very, very straightforward.
Dialogue: 0,0:35:43.15,0:35:44.94,yin,,0,0,0,,如果你要修改视图层级\N{\fs12}If you're changing the view hierarchy,
Dialogue: 0,0:35:44.97,0:35:47.23,yin,,0,0,0,,比如置换出一个视图\N{\fs12}like you're swapping a view out, okay?
Dialogue: 0,0:35:47.23,0:35:48.35,yin,,0,0,0,,视图层级中有一个视图\N{\fs12}You got a view in the view hierarchy
Dialogue: 0,0:35:48.35,0:35:50.03,yin,,0,0,0,,你将它换成了一个新视图\N{\fs12}and you're swapping a new one in,
Dialogue: 0,0:35:50.41,0:35:53.82,yin,,0,0,0,,或者是隐藏一个视图 显示另外一个\N{\fs12}or if you want to hide a view in favor of another view,
Dialogue: 0,0:35:54.83,0:35:57.25,yin,,0,0,0,,可以用这个transitionFromView toView方法\N{\fs12}you can use this transitionFromView toView.
Dialogue: 0,0:35:57.81,0:36:01.50,yin,,0,0,0,,这个方法类似那个修改的方法\N{\fs12}So this one is kind of like the other one in that you're changing,
Dialogue: 0,0:36:01.52,0:36:02.79,yin,,0,0,0,,但并不是只作用于一个视图\N{\fs12}but instead of having a single view
Dialogue: 0,0:36:02.79,0:36:05.18,yin,,0,0,0,,改变它的状态 然后翻转它\N{\fs12}that you're changing its state and then flipping it over,
Dialogue: 0,0:36:05.28,0:36:08.08,yin,,0,0,0,,这里是用另一个视图来替换这个视图\N{\fs12}here you're replacing a view with another view.
Dialogue: 0,0:36:08.69,0:36:10.02,yin,,0,0,0,,但除此之外都很相似\N{\fs12}Okay? But otherwise is very similar.
Dialogue: 0,0:36:10.05,0:36:12.28,yin,,0,0,0,,调用的对象基本一致 都是transition\N{\fs12}It's even called almost the same thing, transition, right?
Dialogue: 0,0:36:12.53,0:36:13.84,yin,,0,0,0,,transitionFromView toView\N{\fs12}Transition from view to view.
Dialogue: 0,0:36:14.85,0:36:16.59,yin,,0,0,0,,明白吗 好的\N{\fs12}Okay? Alright.
Dialogue: 0,0:36:17.52,0:36:21.14,yin,,0,0,0,,这就是直接修改视图 属性\N{\fs12}So that's it for direct changing of views, properties,
Dialogue: 0,0:36:21.14,0:36:23.08,yin,,0,0,0,,实现动画效果的方法\N{\fs12}and making things happen. Okay?
Dialogue: 0,0:36:23.30,0:36:25.81,yin,,0,0,0,,下面我们要讲的是另外一种动画\N{\fs12}The next kind of animation we're going to talk about,
Dialogue: 0,0:36:25.81,0:36:28.82,yin,,0,0,0,,是完全不同的系统 是iOS7的新增内容\N{\fs12}which is a totally different system, new for iOS 7,
Dialogue: 0,0:36:30.92,0:36:32.53,yin,,0,0,0,,叫做dynamic animation动力动画\N{\fs12}is called dynamic animation.
Dialogue: 0,0:36:32.91,0:36:35.23,yin,,0,0,0,,这是一个完全不同的概念\N{\fs12}And this one's a completely different concept.
Dialogue: 0,0:36:35.53,0:36:39.04,yin,,0,0,0,,你要做的是 定义一些物理效果\N{\fs12}Here, what you're going to do, is define a bunch of physics
Dialogue: 0,0:36:39.22,0:36:42.36,yin,,0,0,0,,然后应用于要添加动画效果的视图\N{\fs12}that apply to all the views that you want to animate,
Dialogue: 0,0:36:42.63,0:36:44.93,yin,,0,0,0,,然后只要说 好了做吧\N{\fs12}and then you're just going to say "Okay, do it!"
Dialogue: 0,0:36:45.37,0:36:48.46,yin,,0,0,0,,系统就会将这些物理效果应用于这些视图\N{\fs12}And they're going to go have those physics apply to them.
Dialogue: 0,0:36:48.96,0:36:51.46,yin,,0,0,0,,有什么物理效果呢\N{\fs12}So what kind of physics are we talking about here?
Dialogue: 0,0:36:51.56,0:36:54.18,yin,,0,0,0,,有重力 碰撞\N{\fs12}We're talking about gravity, collisions,
Dialogue: 0,0:36:54.41,0:36:56.51,yin,,0,0,0,,作用力 等等\N{\fs12}forces applied to them, things like that.
Dialogue: 0,0:36:56.76,0:36:59.50,yin,,0,0,0,,动画会一直运行\N{\fs12}Okay? And they're just going to keep on animating
Dialogue: 0,0:36:59.50,0:37:01.52,yin,,0,0,0,,直到力量平衡\N{\fs12}until the forces all balance out.
Dialogue: 0,0:37:02.01,0:37:03.89,yin,,0,0,0,,我们会看到是怎样的\N{\fs12}Okay? And we'll see what that looks like.
Dialogue: 0,0:37:04.87,0:37:07.72,yin,,0,0,0,,想要实现它 这个API非常好用\N{\fs12}The way we do this, this is a really nice API,
Dialogue: 0,0:37:07.80,0:37:08.85,yin,,0,0,0,,非常易用\N{\fs12}very easy to use.
Dialogue: 0,0:37:08.85,0:37:10.86,yin,,0,0,0,,新建一个UIDynamicAnimator\N{\fs12}You create a UIDynamicAnimator,
Dialogue: 0,0:37:10.86,0:37:12.02,yin,,0,0,0,,只需要创建一个\N{\fs12}you just need to create one.
Dialogue: 0,0:37:12.26,0:37:14.82,yin,,0,0,0,,可以创建多个 但是一个较常见\N{\fs12}You can do multiple, but just one--
Dialogue: 0,0:37:15.40,0:37:17.24,yin,,0,0,0,,是为了对这些行为进行分组\N{\fs12}it's really for grouping these behaviors,
Dialogue: 0,0:37:17.24,0:37:19.22,yin,,0,0,0,,通常会用alloc/init\N{\fs12}but usually create one dynamic animator
Dialogue: 0,0:37:19.22,0:37:20.80,yin,,0,0,0,,来创建UIDynamicAnimator\N{\fs12}with alloc and init, basically.
Dialogue: 0,0:37:21.35,0:37:22.18,yin,,0,0,0,,我会演示的\N{\fs12}I'll show you that.
Dialogue: 0,0:37:22.32,0:37:24.21,yin,,0,0,0,,然后向其中添加动力行为\N{\fs12}And then you're going to add behaviors to it.
Dialogue: 0,0:37:24.24,0:37:28.00,yin,,0,0,0,,行为包括重力 碰撞 推动等等\N{\fs12}Behaviors are like gravity, collisions, pushes,
Dialogue: 0,0:37:28.00,0:37:29.56,yin,,0,0,0,,这些叫做行为\N{\fs12}those kinds of things, those are behaviors.
Dialogue: 0,0:37:29.56,0:37:32.20,yin,,0,0,0,,这些动力行为会应用于目标对象上\N{\fs12}Things that are going to be applied to the things.
Dialogue: 0,0:37:32.48,0:37:34.55,yin,,0,0,0,,然后向其中添加内容\N{\fs12}And then you put the things in there,
Dialogue: 0,0:37:34.98,0:37:37.75,yin,,0,0,0,,添加的是UIDynamicItem\N{\fs12}and the things you put in there are UIDynamicItems,
Dialogue: 0,0:37:37.77,0:37:41.31,yin,,0,0,0,,代表它们响应或实现了那个协议\N{\fs12}meaning they respond or they implement that protocol.
Dialogue: 0,0:37:41.40,0:37:42.00,yin,,0,0,0,,我也会演示的\N{\fs12}I'll show you that.
Dialogue: 0,0:37:42.19,0:37:45.90,yin,,0,0,0,,将它们加进去时 动画会立刻开始执行\N{\fs12}And the instant you put them in there, they'll start animating.
Dialogue: 0,0:37:45.96,0:37:48.22,yin,,0,0,0,,你不用告诉它运行 什么都不用说\N{\fs12}You don't have to say run, you don't have to say anything,
Dialogue: 0,0:37:48.22,0:37:50.30,yin,,0,0,0,,只要动力动画者中有一个动力行为\N{\fs12}immediately, any time there's an item
Dialogue: 0,0:37:50.36,0:37:53.00,yin,,0,0,0,,动力行为中有一个动力项\N{\fs12}that's in a behavior that's in a dynamic animator,
Dialogue: 0,0:37:53.07,0:37:56.48,yin,,0,0,0,,动画就会立即开始 直到有力作用于它\N{\fs12}it will start animating until the forces on it,
Dialogue: 0,0:37:56.53,0:37:59.37,yin,,0,0,0,,代表不用再移动了 这时就会停下来\N{\fs12}meaning that it doesn't need to move, then it will stop.
Dialogue: 0,0:38:00.20,0:38:02.76,yin,,0,0,0,,我们详细讲一下\N{\fs12}Okay? So let's look at all these things.
Dialogue: 0,0:38:02.86,0:38:06.07,yin,,0,0,0,,UIDynamicAnimator 可以直接用alloc/init\N{\fs12}UIDynamicAnimator, you can just do alloc init,
Dialogue: 0,0:38:06.29,0:38:08.03,yin,,0,0,0,,但如果对象是视图\N{\fs12}but when you're doing views,
Dialogue: 0,0:38:08.04,0:38:09.72,yin,,0,0,0,,如果要添加动画的是视图\N{\fs12}if it's views that you want to animate,
Dialogue: 0,0:38:09.73,0:38:11.86,yin,,0,0,0,,就要用alloc/initWithReferenceView\N{\fs12}you want to do alloc initWithReferenceView.
Dialogue: 0,0:38:12.24,0:38:13.54,yin,,0,0,0,,在initWithReferenceView中\N{\fs12}Okay? And initWithReferenceView,
Dialogue: 0,0:38:13.54,0:38:16.81,yin,,0,0,0,,指定视图层级的顶级视图\N{\fs12}you're specifying the top view of a view hierarchy,
Dialogue: 0,0:38:16.82,0:38:19.56,yin,,0,0,0,,所有要添加动画的视图都要在这个视图层级中\N{\fs12}all the views you animate have to be in that view hierarchy,
Dialogue: 0,0:38:19.93,0:38:20.88,yin,,0,0,0,,也就是说 它们必须在这个层级中的某一层\N{\fs12}in other words, they have to be somewhere,
Dialogue: 0,0:38:20.88,0:38:23.37,yin,,0,0,0,,是这个参考视图的子视图 或者是子视图的子视图\N{\fs12}a subview of this reference view or a subview of that
Dialogue: 0,0:38:23.37,0:38:25.40,yin,,0,0,0,,或者再下面的子视图 层级可以很深\N{\fs12}or a subview of that, as deep as you want to go,
Dialogue: 0,0:38:25.63,0:38:27.67,yin,,0,0,0,,但是你需要指定它的顶级视图\N{\fs12}but you have to specify the top level view.
Dialogue: 0,0:38:28.39,0:38:31.51,yin,,0,0,0,,然后创建行为\N{\fs12}Okay? Then you create these behaviors.
Dialogue: 0,0:38:31.73,0:38:33.69,yin,,0,0,0,,直接用alloc/init就可以了\N{\fs12}Behaviors are just alloc init,
Dialogue: 0,0:38:33.71,0:38:36.03,yin,,0,0,0,,比如[UIGravityBehavior alloc] init\N{\fs12}like UIGravityBehavior alloc init.
Dialogue: 0,0:38:37.12,0:38:39.38,yin,,0,0,0,,还有[UICollisionBehavior alloc] init\N{\fs12}UICollisionBehavior alloc init,
Dialogue: 0,0:38:39.45,0:38:41.86,yin,,0,0,0,,然后将这些行为添加到animator中\N{\fs12}and then you add these behaviors to the animator,
Dialogue: 0,0:38:42.24,0:38:43.19,yin,,0,0,0,,用addBehavior方法\N{\fs12}using addBehavior,
Dialogue: 0,0:38:43.19,0:38:45.19,yin,,0,0,0,,是一个动力动画者方法\N{\fs12}which is a dynamic animator method.
Dialogue: 0,0:38:45.62,0:38:47.38,yin,,0,0,0,,再简单不过了\N{\fs12}Okay? Couldn't be simpler.
Dialogue: 0,0:38:47.69,0:38:50.60,yin,,0,0,0,,然后将动力项添加到动力行为中\N{\fs12}And then, you add the items to the behaviors.
Dialogue: 0,0:38:50.71,0:38:51.66,yin,,0,0,0,,方法是什么\N{\fs12}And you do that with?
Dialogue: 0,0:38:51.77,0:38:54.23,yin,,0,0,0,,在动力行为中使用addItem来添加\N{\fs12}AddItem, in dynamic behavior.
Dialogue: 0,0:38:54.90,0:38:58.03,yin,,0,0,0,,动力项是一个id\N{\fs12}So an item is just an id
Dialogue: 0,0:38:58.29,0:39:00.67,yin,,0,0,0,,实现了UIDynamicItem协议\N{\fs12}that implements the protocol UIDynamicItem
Dialogue: 0,0:39:00.67,0:39:02.02,yin,,0,0,0,,就是下面这段\N{\fs12}which you can see there below.
Dialogue: 0,0:39:02.40,0:39:05.81,yin,,0,0,0,,同样的 UIView实现了这个协议\N{\fs12}And again, UIView implements that protocol,
Dialogue: 0,0:39:06.03,0:39:08.49,yin,,0,0,0,,所以通常情况下 加入的动力项是UIView\N{\fs12}so usually the items we put in there are UIViews,
Dialogue: 0,0:39:08.49,0:39:09.71,yin,,0,0,0,,90%的情况下都是UIView\N{\fs12}about 90 percent of the time.
Dialogue: 0,0:39:09.72,0:39:11.12,yin,,0,0,0,,在这门课上全部都是\N{\fs12}100 percent of the time in this class,
Dialogue: 0,0:39:11.14,0:39:12.87,yin,,0,0,0,,作业中用到的也全部都是UIView\N{\fs12}100 percent of the time in your homework,
Dialogue: 0,0:39:12.89,0:39:14.72,yin,,0,0,0,,我只要求大家实现视图动画\N{\fs12}I'm only asking you to animate views,
Dialogue: 0,0:39:14.87,0:39:18.81,yin,,0,0,0,,但也可以为非视觉项添加动画\N{\fs12}but you could animate completely non-visual items.
Dialogue: 0,0:39:18.87,0:39:21.62,yin,,0,0,0,,只要它们实现了这个协议\N{\fs12}They could be-- as long as they implement this protocol,
Dialogue: 0,0:39:21.62,0:39:22.59,yin,,0,0,0,,就可以做任何想做的事情\N{\fs12}they can do anything they want.
Dialogue: 0,0:39:22.79,0:39:24.07,yin,,0,0,0,,协议中有什么呢\N{\fs12}So what's in the protocol?
Dialogue: 0,0:39:24.14,0:39:25.34,yin,,0,0,0,,有一个bounds\N{\fs12}There's the bounds.
Dialogue: 0,0:39:25.35,0:39:29.27,yin,,0,0,0,,是动力项的bounds\N{\fs12}That's again the bounds in the items world.
Dialogue: 0,0:39:29.40,0:39:31.04,yin,,0,0,0,,就像视图的bounds\N{\fs12}It's like the view's bounds, right?
Dialogue: 0,0:39:31.04,0:39:32.88,yin,,0,0,0,,它自己的绘制坐标系\N{\fs12}Its own drawing coordinate system.
Dialogue: 0,0:39:32.96,0:39:34.24,yin,,0,0,0,,注意bounds是只读的\N{\fs12}Notice that's read only.
Dialogue: 0,0:39:34.62,0:39:38.32,yin,,0,0,0,,动力项可以通过变换 居中 移动等进行修改\N{\fs12}Okay? It could be modified by the transform, centering,
Dialogue: 0,0:39:38.33,0:39:41.93,yin,,0,0,0,,大多数情况下是通过变换\N{\fs12}moving the thing around, possibly, mostly the transform.
Dialogue: 0,0:39:42.00,0:39:45.67,yin,,0,0,0,,而bounds只是动力项的绘制区域\N{\fs12}So the bounds, though, is just the drawing area for the item.
Dialogue: 0,0:39:45.94,0:39:49.58,yin,,0,0,0,,但是center中心 也就是动力项的位置\N{\fs12}But the center, in other words, the position of the item,
Dialogue: 0,0:39:49.92,0:39:52.80,yin,,0,0,0,,以及transform变换 也就是旋转和缩放比例\N{\fs12}and its transform, it's rotation and scale,
Dialogue: 0,0:39:53.02,0:39:54.11,yin,,0,0,0,,这两个属性是可读写的\N{\fs12}those are read-write.
Dialogue: 0,0:39:54.37,0:39:55.70,yin,,0,0,0,,它们是可以被设置的\N{\fs12}Those can actually be set.
Dialogue: 0,0:39:56.30,0:39:58.32,yin,,0,0,0,,显然是由animator设置的\N{\fs12}They're obviously set by the animator,
Dialogue: 0,0:39:58.49,0:40:00.83,yin,,0,0,0,,动力动画者的作用\N{\fs12}that's what the dynamic animator does is go
Dialogue: 0,0:40:00.84,0:40:04.26,yin,,0,0,0,,就是弄清楚动力项的中心 旋转和缩放比例的值\N{\fs12}figure out what the center and rotation and scale should be.
Dialogue: 0,0:40:04.41,0:40:05.48,yin,,0,0,0,,你也可以设置它们\N{\fs12}And you could set them too,
Dialogue: 0,0:40:05.48,0:40:08.70,yin,,0,0,0,,但是如果你要与animator同时进行设置\N{\fs12}but if you do set them while the animator is also setting them,
Dialogue: 0,0:40:08.78,0:40:11.40,yin,,0,0,0,,需要调用这个方法updateItemUsingCurrentState\N{\fs12}you have to call this method updateItemUsingCurrentState,
Dialogue: 0,0:40:11.40,0:40:12.83,yin,,0,0,0,,animator的当前状态\N{\fs12}current state in the animator,
Dialogue: 0,0:40:12.96,0:40:14.59,yin,,0,0,0,,否则animator不会...\N{\fs12}otherwise the animator will not--
Dialogue: 0,0:40:14.74,0:40:16.82,yin,,0,0,0,,它会忽略其他操作\N{\fs12}will ignore anything that's going on.
Dialogue: 0,0:40:16.82,0:40:19.58,yin,,0,0,0,,所以如果你想要设置中心\N{\fs12}Okay? So if you want to be setting the center,
Dialogue: 0,0:40:19.67,0:40:20.95,yin,,0,0,0,,如果你想要移动对象的时候\N{\fs12}if you want to be moving the thing
Dialogue: 0,0:40:20.96,0:40:22.57,yin,,0,0,0,,animator也想要移动它\N{\fs12}while the animator is also trying to move it,
Dialogue: 0,0:40:22.59,0:40:24.17,yin,,0,0,0,,换句话说 你想要和animator抗争一下\N{\fs12}in other words, you want to fight it a little bit,
Dialogue: 0,0:40:24.29,0:40:26.79,yin,,0,0,0,,或者是animator正在移动它 而你想要让它旋转\N{\fs12}or if it is moving it and you want to rotate it,
Dialogue: 0,0:40:27.09,0:40:29.07,yin,,0,0,0,,你需要用这个updateItemUsingCurrentState方法\N{\fs12}you need to do this updateItemUsingCurrentState,
Dialogue: 0,0:40:29.07,0:40:31.30,yin,,0,0,0,,否则 出于性能方面的原因\N{\fs12}otherwise it will assume, for performance reasons,
Dialogue: 0,0:40:31.54,0:40:33.21,yin,,0,0,0,,它会假设自己知道当前状态\N{\fs12}that it knows the current state.
Dialogue: 0,0:40:33.57,0:40:35.85,yin,,0,0,0,,直到它的动画完成 一切操作完毕\N{\fs12}Until it's done animating, until everything settles.
Dialogue: 0,0:40:36.81,0:40:38.20,yin,,0,0,0,,好了 就是这样\N{\fs12}Okay? So that's it.
Dialogue: 0,0:40:38.28,0:40:40.96,yin,,0,0,0,,动力动画者 动力行为和动力项\N{\fs12}Animator, behaviors and items.
Dialogue: 0,0:40:41.66,0:40:42.75,yin,,0,0,0,,这套系统中主要就是这三项内容\N{\fs12}That's all there is in this system.
Dialogue: 0,0:40:43.21,0:40:45.03,yin,,0,0,0,,现在我们来讲一下动力行为\N{\fs12}So now let's talk about some of these behaviors.
Dialogue: 0,0:40:45.03,0:40:46.58,yin,,0,0,0,,可用的具体行为\N{\fs12}The concrete behaviors that are available.
Dialogue: 0,0:40:46.83,0:40:47.81,yin,,0,0,0,,首先是gravity重力\N{\fs12}There's gravity.
Dialogue: 0,0:40:48.23,0:40:52.54,yin,,0,0,0,,重力行为默认是向下的\N{\fs12}Okay? Gravity-- gravity behavior by default, gravity is down.
Dialogue: 0,0:40:52.72,0:40:54.55,yin,,0,0,0,,如果我拿起手机 是向下的\N{\fs12}So if I'm holding my phone, it's down,
Dialogue: 0,0:40:54.69,0:40:55.35,yin,,0,0,0,,这说得通\N{\fs12}which kind of makes sense
Dialogue: 0,0:40:55.35,0:40:58.08,yin,,0,0,0,,如果我这样拿起手机 显示内容应该是向下的\N{\fs12}if I hold my phone up I kind of want things to go down,
Dialogue: 0,0:40:58.23,0:41:00.19,yin,,0,0,0,,但其实可以将其设为任意角度\N{\fs12}but really it can be set to any angle.
Dialogue: 0,0:41:00.19,0:41:02.06,yin,,0,0,0,,可以让重力方向向上或向左\N{\fs12}You can have the gravity up or to the left,
Dialogue: 0,0:41:02.06,0:41:04.56,yin,,0,0,0,,还可以从不同的方向\N{\fs12}you can have multiple gravity pulling on things
Dialogue: 0,0:41:04.61,0:41:05.67,yin,,0,0,0,,向物体添加多个重力\N{\fs12}from different directions.
Dialogue: 0,0:41:05.93,0:41:07.47,yin,,0,0,0,,实际上 如果向一个物体添加两个力\N{\fs12}In fact, if you had two things pulling,
Dialogue: 0,0:41:07.48,0:41:08.71,yin,,0,0,0,,一个向上 一个向下\N{\fs12}one from the top, one from the bottom,
Dialogue: 0,0:41:08.73,0:41:10.21,yin,,0,0,0,,这个物体就会飘在中间\N{\fs12}the thing would just float in the middle
Dialogue: 0,0:41:10.21,0:41:12.10,yin,,0,0,0,,如果两个重力大小相等的话\N{\fs12}if they have the same magnitude of gravity.
Dialogue: 0,0:41:12.36,0:41:13.74,yin,,0,0,0,,你可以设置重力大小\N{\fs12}And you can set the gravity.
Dialogue: 0,0:41:14.08,0:41:18.59,yin,,0,0,0,,重力大小magnitude为1 代表1000p/s/s\N{\fs12}Magnitude of 1 means a thousand points per second squared.
Dialogue: 0,0:41:18.81,0:41:20.62,yin,,0,0,0,,这是重力加速度\N{\fs12}That's the acceleration due to gravity.
Dialogue: 0,0:41:21.71,0:41:25.07,yin,,0,0,0,,很像9.8m/s^2\N{\fs12}That feels a lot like 9.8 meters per second squared
Dialogue: 0,0:41:25.07,0:41:27.60,yin,,0,0,0,,9.8m/s^2是实际重力加速度\N{\fs12}which is acceleration due to real gravity.
Dialogue: 0,0:41:27.60,0:41:28.83,yin,,0,0,0,,换句话说 如果你竖起手机\N{\fs12}So in other words, if you hold your phone up
Dialogue: 0,0:41:28.83,0:41:30.37,yin,,0,0,0,,让重力起作用\N{\fs12}and let the gravity work,
Dialogue: 0,0:41:30.44,0:41:32.72,yin,,0,0,0,,感觉上 手机上物体的坠落速度\N{\fs12}it kind of feels like it's falling about the same speed,
Dialogue: 0,0:41:32.73,0:41:33.96,yin,,0,0,0,,和现实物体的坠落速度一样\N{\fs12}something in real life would happen,
Dialogue: 0,0:41:34.18,0:41:35.81,yin,,0,0,0,,这也是个很好用的整数\N{\fs12}and it's also a very nice round number,
Dialogue: 0,0:41:35.87,0:41:37.41,yin,,0,0,0,,1000p/s^2\N{\fs12}a thousand points per second squared.
Dialogue: 0,0:41:38.39,0:41:40.90,yin,,0,0,0,,但是要知道它就像是重力\N{\fs12}Okay? But understand, it's just like gravity,
Dialogue: 0,0:41:40.91,0:41:43.24,yin,,0,0,0,,是某个方向上的重力加速度\N{\fs12}it's an acceleration in a certain direction.
Dialogue: 0,0:41:44.61,0:41:46.91,yin,,0,0,0,,collision碰撞非常酷\N{\fs12}Collision is really cool.
Dialogue: 0,0:41:47.11,0:41:51.93,yin,,0,0,0,,碰撞指的是 当碰撞行为中的动力项\N{\fs12}Collision just means the items inside of the collision behavior,
Dialogue: 0,0:41:51.98,0:41:54.84,yin,,0,0,0,,碰到一起的时候 会互相弹开\N{\fs12}if they bump into each other, they'll bounce off each other,
Dialogue: 0,0:41:55.31,0:41:56.57,yin,,0,0,0,,和现实中的碰撞效果类似\N{\fs12}like a real world collision,
Dialogue: 0,0:41:56.80,0:41:58.66,yin,,0,0,0,,你可以指定弹力大小\N{\fs12}and you can specify the elasticity
Dialogue: 0,0:41:58.66,0:42:00.24,yin,,0,0,0,,它们的弹性大小\N{\fs12}and how bouncy they are,
Dialogue: 0,0:42:00.64,0:42:03.57,yin,,0,0,0,,甚至可以为二者定义不同的密度\N{\fs12}and even you can define the density of one versus another,
Dialogue: 0,0:42:03.57,0:42:06.64,yin,,0,0,0,,密度大的一方可以把密度小的撞走\N{\fs12}so a really dense one will smash another one out of the way,
Dialogue: 0,0:42:07.39,0:42:08.39,yin,,0,0,0,,这些都是可以自定义的\N{\fs12}all definable.
Dialogue: 0,0:42:08.85,0:42:10.84,yin,,0,0,0,,还可以设置边界\N{\fs12}You can also set boundaries.
Dialogue: 0,0:42:11.06,0:42:14.42,yin,,0,0,0,,可以按需要 设置任意UIBezierPath\N{\fs12}So any UIBezierPath that you want to come up with,
Dialogue: 0,0:42:14.62,0:42:16.48,yin,,0,0,0,,将它添加到碰撞行为中\N{\fs12}you can put it in your collision behavior
Dialogue: 0,0:42:16.50,0:42:17.89,yin,,0,0,0,,物体碰到它会弹开\N{\fs12}and things will bounce off it.
Dialogue: 0,0:42:17.96,0:42:20.56,yin,,0,0,0,,可以是圆形 方形等等\N{\fs12}So it can be round, it can be square, whatever,
Dialogue: 0,0:42:20.57,0:42:22.95,yin,,0,0,0,,当物体碰到它时会弹开\N{\fs12}and things will bounce off it when they hit it.
Dialogue: 0,0:42:23.16,0:42:26.54,yin,,0,0,0,,你还可以将参考视图的边界\N{\fs12}Also you can set the boundaries of the reference view
Dialogue: 0,0:42:26.75,0:42:29.37,yin,,0,0,0,,也设置为有弹性的边界\N{\fs12}to be bouncy boundaries as well
Dialogue: 0,0:42:29.38,0:42:32.89,yin,,0,0,0,,方法是将translatesReferenceBoundsIntoBoundary设为YES\N{\fs12}by saying translatesReferenceBoundsIntoBoundary equals yes,
Dialogue: 0,0:42:33.05,0:42:35.62,yin,,0,0,0,,这样物体碰到参考视图的边缘就会弹开\N{\fs12}and then things will bounce off the edges of the reference view,
Dialogue: 0,0:42:35.62,0:42:38.56,yin,,0,0,0,,也就是动力动画者的顶级视图\N{\fs12}the top level view in the dynamic animator. Okay?
Dialogue: 0,0:42:39.94,0:42:44.00,yin,,0,0,0,,collisionMode决定了动力项\N{\fs12}So, the collisionMode determines whether the items
Dialogue: 0,0:42:44.16,0:42:46.51,yin,,0,0,0,,是相互碰撞弹开 还是只从边界碰撞弹开\N{\fs12}bounce off each other or just off the boundaries.
Dialogue: 0,0:42:49.75,0:42:50.42,yin,,0,0,0,,明白吗\N{\fs12}Alright?
Dialogue: 0,0:42:50.79,0:42:51.90,yin,,0,0,0,,吸附行为\N{\fs12}Attachment behaviors.
Dialogue: 0,0:42:51.90,0:42:54.78,yin,,0,0,0,,通过它 可以将一个动力项\N{\fs12}Okay, this is the way to attach an item
Dialogue: 0,0:42:55.14,0:42:58.32,yin,,0,0,0,,吸附到一个固定锚点或另外一个动力项上\N{\fs12}to a fixed point or to another item.
Dialogue: 0,0:42:58.83,0:43:00.27,yin,,0,0,0,,这里有一点要记住\N{\fs12}Now one thing to remember about this,
Dialogue: 0,0:43:00.28,0:43:03.24,yin,,0,0,0,,如果我将一个动力项连接到一个锚点上\N{\fs12}if I hook an item up to a point,
Dialogue: 0,0:43:03.37,0:43:05.49,yin,,0,0,0,,并不意味着这个动力项就不会移动了\N{\fs12}that does not mean that item is not going to move.
Dialogue: 0,0:43:05.94,0:43:09.03,yin,,0,0,0,,如果我将一个动力项连接到这个锚点上 动力项在这里\N{\fs12}Okay? If I hook it up to this point and I have an item here,
Dialogue: 0,0:43:09.39,0:43:11.58,yin,,0,0,0,,这时重力起作用了会怎样\N{\fs12}right, and gravity happens?
Dialogue: 0,0:43:12.22,0:43:15.04,yin,,0,0,0,,动力项会这样摆动\N{\fs12}My item is going to go like this...it's going to swing.
Dialogue: 0,0:43:15.99,0:43:19.04,yin,,0,0,0,,因为吸附行为只是将两个对象连接起来\N{\fs12}Because the attachment is just attaching the two things,
Dialogue: 0,0:43:19.04,0:43:20.40,yin,,0,0,0,,锚点和动力项\N{\fs12}the point and the item.
Dialogue: 0,0:43:20.40,0:43:22.99,yin,,0,0,0,,并没有吸附到背景上 对吧\N{\fs12}It's not attaching to the background, okay?
Dialogue: 0,0:43:23.20,0:43:26.78,yin,,0,0,0,,如果我移动了这个锚点 动力项也会随之移动\N{\fs12}And also if I move the point, the thing will stay with it
Dialogue: 0,0:43:26.86,0:43:28.79,yin,,0,0,0,,会在后面摆动之类的\N{\fs12}and it will kind of swing around behind it.
Dialogue: 0,0:43:28.79,0:43:30.87,yin,,0,0,0,,演示中会看到这部分\N{\fs12}And we'll see this in the demo, okay?
Dialogue: 0,0:43:30.90,0:43:33.14,yin,,0,0,0,,吸附行为是将动力项吸附到锚点上\N{\fs12}So attachment is attaching the thing to a point.
Dialogue: 0,0:43:33.54,0:43:35.12,yin,,0,0,0,,还可以吸附两个动力项\N{\fs12}You can also attach two items.
Dialogue: 0,0:43:35.30,0:43:38.60,yin,,0,0,0,,如果这样吸附了两个动力项 然后重力作用向下\N{\fs12}If I attach two items like this and I gravity down,
Dialogue: 0,0:43:38.74,0:43:40.33,yin,,0,0,0,,它们就会撞到\N{\fs12}they're going to go bam!
Dialogue: 0,0:43:40.69,0:43:42.03,yin,,0,0,0,,它们会保持同样的距离\N{\fs12}They'll stay the same distance apart,
Dialogue: 0,0:43:42.05,0:43:43.01,yin,,0,0,0,,但是会直接掉下来\N{\fs12}but they're just going to go straight down
Dialogue: 0,0:43:43.02,0:43:45.69,yin,,0,0,0,,因为重力依旧会作用于它们\N{\fs12}because gravity will still be applying to them as well.
Dialogue: 0,0:43:46.23,0:43:48.27,yin,,0,0,0,,连接只是能够让它们在一起\N{\fs12}Right? And the connection just keeps them together.
Dialogue: 0,0:43:50.40,0:43:51.99,yin,,0,0,0,,吸附行为有点不同\N{\fs12}The attachment behavior is a little different
Dialogue: 0,0:43:52.00,0:43:53.33,yin,,0,0,0,,不用alloc/init\N{\fs12}in that you don't alloc init,
Dialogue: 0,0:43:53.34,0:43:55.93,yin,,0,0,0,,而是在初始化时指定吸附对象\N{\fs12}you actually specify the attachment at init time.
Dialogue: 0,0:43:56.05,0:43:59.18,yin,,0,0,0,,所以用alloc/initWithItem与另一个动力项吸附\N{\fs12}So alloc initWithItem, alloc init with other item,
Dialogue: 0,0:43:59.30,0:44:01.92,yin,,0,0,0,,还有一种也是吸附动力项\N{\fs12}there's also some versions where you can attach items,
Dialogue: 0,0:44:01.98,0:44:03.11,yin,,0,0,0,,但吸附点不是中心\N{\fs12}where the attachment point
Dialogue: 0,0:44:03.13,0:44:05.32,yin,,0,0,0,,而是一个偏移量\N{\fs12}instead of being the center is offset.
Dialogue: 0,0:44:05.79,0:44:07.40,yin,,0,0,0,,这样动力项是悬着的\N{\fs12}And that will make things kind of hang
Dialogue: 0,0:44:07.54,0:44:10.57,yin,,0,0,0,,动力项在旋转时是倾斜的\N{\fs12}if the items rotate, they'll kind of tilt,
Dialogue: 0,0:44:10.87,0:44:12.31,yin,,0,0,0,,因为它的吸附点不是中心\N{\fs12}okay, because you're not grabbing them in the middle,
Dialogue: 0,0:44:12.32,0:44:13.18,yin,,0,0,0,,而是偏向一侧的\N{\fs12}you're grabbing them on the side,
Dialogue: 0,0:44:13.19,0:44:15.26,yin,,0,0,0,,这样你可以做出很酷的效果\N{\fs12}so you can make some pretty cool effects.
Dialogue: 0,0:44:15.85,0:44:18.50,yin,,0,0,0,,要注意 吸附行为还有一点很棒\N{\fs12}The other thing to notice about attachments that's cool
Dialogue: 0,0:44:18.50,0:44:22.30,yin,,0,0,0,,就是两个动力项之间的长度是可写的\N{\fs12}is that the length between the two items is writeable.
Dialogue: 0,0:44:23.16,0:44:25.06,yin,,0,0,0,,比如说 你要捏合缩放\N{\fs12}So for example, let's say you were pinching.
Dialogue: 0,0:44:26.20,0:44:28.03,yin,,0,0,0,,可以改变它们之间的长度\N{\fs12}You could change the length
Dialogue: 0,0:44:28.24,0:44:30.58,yin,,0,0,0,,这两个吸附的动力项会靠近在一起\N{\fs12}and those two attached items would move closer together.
Dialogue: 0,0:44:31.47,0:44:33.18,yin,,0,0,0,,即便你设置了\N{\fs12}Okay? So even though you set it up
Dialogue: 0,0:44:33.19,0:44:35.76,yin,,0,0,0,,让这个动力项吸附到这个锚点上\N{\fs12}as this item attach to this point
Dialogue: 0,0:44:35.76,0:44:37.70,yin,,0,0,0,,或者让两个动力项互相吸附\N{\fs12}or these items attach to each other,
Dialogue: 0,0:44:37.83,0:44:39.87,yin,,0,0,0,,如果你将二者间长度缩小\N{\fs12}if you change the length to be smaller,
Dialogue: 0,0:44:39.87,0:44:43.04,yin,,0,0,0,,它们就会互相靠近 这很棒\N{\fs12}they'll move toward each other, okay, that which is cool,
Dialogue: 0,0:44:43.19,0:44:44.32,yin,,0,0,0,,锚点也是一样的\N{\fs12}and the same thing with the anchor point.
Dialogue: 0,0:44:44.33,0:44:45.71,yin,,0,0,0,,如果你移动了锚点\N{\fs12}If you move the anchor point around,
Dialogue: 0,0:44:45.99,0:44:47.31,yin,,0,0,0,,它的吸附项也会移动\N{\fs12}the attachment is still there
Dialogue: 0,0:44:47.31,0:44:49.37,yin,,0,0,0,,跟在锚点的后面\N{\fs12}and the thing will follow around, right?
Dialogue: 0,0:44:49.66,0:44:51.40,yin,,0,0,0,,再加上应用的其他行为\N{\fs12}With other behaviors applying to it.
Dialogue: 0,0:44:51.41,0:44:51.84,yin,,0,0,0,,有问题吗\N{\fs12}Question?
Dialogue: 0,0:44:51.96,0:44:54.41,yin,,0,0,0,,这个吸附长度是一个确定值吗\N{\fs12}Is that attachment length, is that an exact value,
Dialogue: 0,0:44:54.41,0:44:57.81,yin,,0,0,0,,还是像是...\N{\fs12}like it would be with like when they're attached or--
Dialogue: 0,0:44:57.83,0:44:59.40,yin,,0,0,0,,你的意思是像铁棒吗\N{\fs12}Iron, like an iron bar you mean?
Dialogue: 0,0:44:59.40,0:45:00.94,yin,,0,0,0,,对 是像铁棒呢 还是像线绳呢\N{\fs12}Yeah, like iron bar or string?
Dialogue: 0,0:45:01.11,0:45:03.20,yin,,0,0,0,,问题是 这个连接是像铁棒呢\N{\fs12}Okay, so the question is, is it like an iron bar
Dialogue: 0,0:45:03.20,0:45:04.27,yin,,0,0,0,,还是像线绳呢\N{\fs12}or is it more like a string?
Dialogue: 0,0:45:04.44,0:45:07.71,yin,,0,0,0,,实际上 它像是一个弹簧\N{\fs12}And actually what it is, it's like a spring, okay?
Dialogue: 0,0:45:07.92,0:45:09.79,yin,,0,0,0,,你移动它的时候\N{\fs12}So it actually as you move it around,
Dialogue: 0,0:45:09.79,0:45:11.33,yin,,0,0,0,,比如向上移动 它会弹上来\N{\fs12}like if I move it up, it will "Whoom!"
Dialogue: 0,0:45:11.35,0:45:12.07,yin,,0,0,0,,弹起来\N{\fs12}spring up.
Dialogue: 0,0:45:12.35,0:45:15.42,yin,,0,0,0,,你可以控制它的阻尼大小和震荡频率\N{\fs12}And you can control the damping and oscillation of that.
Dialogue: 0,0:45:15.68,0:45:17.49,yin,,0,0,0,,默认情况下 是像一个铁棒\N{\fs12}By default, it's an iron bar.
Dialogue: 0,0:45:17.81,0:45:19.76,yin,,0,0,0,,阻尼大小和振荡频率的默认值\N{\fs12}Okay? So the damping and oscillation are set
Dialogue: 0,0:45:19.76,0:45:21.20,yin,,0,0,0,,让它不会发生振荡\N{\fs12}so that it does not oscillate,
Dialogue: 0,0:45:21.22,0:45:23.98,yin,,0,0,0,,但是你可以自己设置 让它跟着振荡\N{\fs12}but you can set it so as you follow it around it kind of--
Dialogue: 0,0:45:23.99,0:45:25.72,yin,,0,0,0,,非常酷\N{\fs12}It's very, very cool.
Dialogue: 0,0:45:25.72,0:45:26.91,yin,,0,0,0,,做作业的时候\N{\fs12}So you can play with all of those
Dialogue: 0,0:45:27.13,0:45:28.26,yin,,0,0,0,,大家可以都试一下\N{\fs12}when you are doing your homework.
Dialogue: 0,0:45:29.08,0:45:32.31,yin,,0,0,0,,速甩行为是将一个动力项甩到一个位置\N{\fs12}Snap behavior snaps an item to a location,
Dialogue: 0,0:45:32.38,0:45:34.43,yin,,0,0,0,,不只是让它飞过去\N{\fs12}but it does more than just have it fly there.
Dialogue: 0,0:45:34.43,0:45:36.73,yin,,0,0,0,,确实是飞过去 速度很快\N{\fs12}It does fly there, rather rapidly I might add.
Dialogue: 0,0:45:36.81,0:45:38.95,yin,,0,0,0,,达到目标位置之后 可以想象成\N{\fs12}When it gets there, though, you can imagine that
Dialogue: 0,0:45:38.96,0:45:42.39,yin,,0,0,0,,动力项四角有四个弹簧\N{\fs12}there's four springs attached to the item in the corners,
Dialogue: 0,0:45:42.40,0:45:43.30,yin,,0,0,0,,稍微离开一点\N{\fs12}a little ways out,
Dialogue: 0,0:45:43.43,0:45:45.23,yin,,0,0,0,,动力项到达目标位置时会来回振动\N{\fs12}so the thing gets there and it goes "Doinggg",
Dialogue: 0,0:45:45.35,0:45:46.89,yin,,0,0,0,,就像弹簧振动 像这样\N{\fs12}kind of springs, like this.
Dialogue: 0,0:45:46.94,0:45:48.70,yin,,0,0,0,,你可以指定振动的大小\N{\fs12}And you can specify how much it does that.
Dialogue: 0,0:45:48.74,0:45:49.97,yin,,0,0,0,,为什么要这样做呢\N{\fs12}Why does it do that?
Dialogue: 0,0:45:50.11,0:45:52.27,yin,,0,0,0,,因为你要给用户反馈\N{\fs12}That's because you want to give feedback to the user,
Dialogue: 0,0:45:52.27,0:45:53.56,yin,,0,0,0,,让他们知道自己刚移动了它\N{\fs12}oh, I just moved this.
Dialogue: 0,0:45:53.97,0:45:55.24,yin,,0,0,0,,我们并不想让它到了位置立马停住\N{\fs12}So you don't want it to just go "Blip!"
Dialogue: 0,0:45:55.62,0:45:56.93,yin,,0,0,0,,而是让它晃动一下\N{\fs12}You want it to go "Hmmmm," you know,
Dialogue: 0,0:45:56.93,0:45:59.55,yin,,0,0,0,,让动力项弹跳一下\N{\fs12}and it kind of gives them just a moment's springiness,
Dialogue: 0,0:45:59.56,0:46:00.59,yin,,0,0,0,,让用户明白\N{\fs12}so it's like "Oh, okay."
Dialogue: 0,0:46:00.72,0:46:01.81,yin,,0,0,0,,这是个很好的动画\N{\fs12}So that's good animation,
Dialogue: 0,0:46:01.81,0:46:03.27,yin,,0,0,0,,速甩行为很常用\N{\fs12}the snap behavior very common.
Dialogue: 0,0:46:03.69,0:46:05.16,yin,,0,0,0,,还有推动行为\N{\fs12}Also you have push behavior,
Dialogue: 0,0:46:05.17,0:46:06.49,yin,,0,0,0,,你可以推一下\N{\fs12}which is you can push,
Dialogue: 0,0:46:06.69,0:46:08.34,yin,,0,0,0,,推一下对象 它就开始移动了\N{\fs12}push an object and it will start moving.
Dialogue: 0,0:46:08.34,0:46:09.87,yin,,0,0,0,,尤其是 如果你没有添加重力\N{\fs12}So especially if you don't have gravity,
Dialogue: 0,0:46:09.92,0:46:12.22,yin,,0,0,0,,推动可能就是让物体移动的原因\N{\fs12}this might be what causes things to move, you push it
Dialogue: 0,0:46:12.23,0:46:15.36,yin,,0,0,0,,它移动过去 动力项有摩擦力\N{\fs12}and it moves across and then these items have friction,
Dialogue: 0,0:46:15.45,0:46:17.60,yin,,0,0,0,,相互碰撞的时候 密度不同\N{\fs12}they have density when they collide with each other,
Dialogue: 0,0:46:17.94,0:46:20.29,yin,,0,0,0,,大家可以回去看看推动行为的文档\N{\fs12}so push, you can read about push
Dialogue: 0,0:46:20.31,0:46:24.80,yin,,0,0,0,,看一下如何指定角度和推力大小等等\N{\fs12}and how you specify the angle and the magnitude and all that.
Dialogue: 0,0:46:25.42,0:46:30.65,yin,,0,0,0,,关于行为 还有一件事是\N{\fs12}Okay? So another thing about behaviors is you want to be able
Dialogue: 0,0:46:30.65,0:46:33.60,yin,,0,0,0,,在设置摩擦力 弹力和密度等\N{\fs12}to set this friction, elasticity, the density,
Dialogue: 0,0:46:33.60,0:46:35.22,yin,,0,0,0,,设置我们刚才说过的这些属性时\N{\fs12}all these things that we're talking about,
Dialogue: 0,0:46:35.46,0:46:37.48,yin,,0,0,0,,我们想要将其设置到动力项上\N{\fs12}you want to set them on the items
Dialogue: 0,0:46:37.61,0:46:40.31,yin,,0,0,0,,与行为无关\N{\fs12}independent of the other behaviors, okay?
Dialogue: 0,0:46:40.64,0:46:43.79,yin,,0,0,0,,如果我设置了摩擦力\N{\fs12}So if I have friction, I want it to apply,
Dialogue: 0,0:46:43.81,0:46:46.43,yin,,0,0,0,,不管动力项移动是因为重力还是碰撞\N{\fs12}whether it's gravity that's causing the thing to move,
Dialogue: 0,0:46:46.43,0:46:48.39,yin,,0,0,0,,摩擦力应该是一致的\N{\fs12}or whether a collision caused it to move.
Dialogue: 0,0:46:48.72,0:46:52.27,yin,,0,0,0,,所以摩擦力 密度等属性\N{\fs12}So we don't put the friction and the density and stuff like that
Dialogue: 0,0:46:52.27,0:46:55.09,yin,,0,0,0,,不是在碰撞行为或者重力行为中进行设置\N{\fs12}in collision behaviors or gravity behaviors,
Dialogue: 0,0:46:55.16,0:46:58.17,yin,,0,0,0,,而是放在它自己的行为中 叫做动力项行为\N{\fs12}we put it in its own behavior called the items behavior.
Dialogue: 0,0:46:58.77,0:47:03.43,yin,,0,0,0,,对应的行为类叫做UIDynamicItemBehavior\N{\fs12}So there's a class of behavior called UIDynamicItemBehavior.
Dialogue: 0,0:47:03.76,0:47:07.18,yin,,0,0,0,,如果你想要设置这些属性\N{\fs12}Okay? And so if you want any of these things,
Dialogue: 0,0:47:07.18,0:47:09.43,yin,,0,0,0,,比如不允许它旋转\N{\fs12}like you don't want to allow it to rotate,
Dialogue: 0,0:47:09.45,0:47:11.08,yin,,0,0,0,,不想让视图旋转\N{\fs12}you don't want the view to be able to rotate,
Dialogue: 0,0:47:12.18,0:47:13.64,yin,,0,0,0,,不知道作业中是怎样的\N{\fs12}which I don't know if you're doing homework
Dialogue: 0,0:47:13.65,0:47:15.23,yin,,0,0,0,,有时需要 有时不需要\N{\fs12}sometimes you might want that, sometimes not,
Dialogue: 0,0:47:15.44,0:47:19.19,yin,,0,0,0,,或者是想要指定对象的摩擦力或弹力\N{\fs12}or you want to specify the friction or the bounciness of this object,
Dialogue: 0,0:47:19.26,0:47:22.27,yin,,0,0,0,,新建一个UIDynamicItemBehavior\N{\fs12}you create a UIDynamicItemBehavior
Dialogue: 0,0:47:22.41,0:47:24.43,yin,,0,0,0,,将动力项也添加到其中\N{\fs12}and add the items to that as well.
Dialogue: 0,0:47:24.60,0:47:27.36,yin,,0,0,0,,所以动力项既是重力行为的一员\N{\fs12}So the item would be a member of the gravity behavior,
Dialogue: 0,0:47:27.36,0:47:29.03,yin,,0,0,0,,又是碰撞行为的一员\N{\fs12}it might be of the collision behavior,
Dialogue: 0,0:47:29.05,0:47:32.30,yin,,0,0,0,,还是UIDynamicItemBehavior的一员\N{\fs12}and it's also a member of a UIDynamicItemBehavior.
Dialogue: 0,0:47:32.92,0:47:34.86,yin,,0,0,0,,它控制着全部选项\N{\fs12}Okay? And this controls all its options.
Dialogue: 0,0:47:34.86,0:47:36.92,yin,,0,0,0,,你可以把这看做是动画选项\N{\fs12}So you can think of this as kind of like the animation options,
Dialogue: 0,0:47:36.92,0:47:39.05,yin,,0,0,0,,但其实更像是\N{\fs12}but really it's more like the behavior of the--
Dialogue: 0,0:47:39.06,0:47:40.99,yin,,0,0,0,,动力项的内在行为\N{\fs12}the intrinsic behavior of that item.
Dialogue: 0,0:47:41.42,0:47:42.96,yin,,0,0,0,,它的密度是多少\N{\fs12}Okay? What is its density?
Dialogue: 0,0:47:43.25,0:47:44.37,yin,,0,0,0,,不管起作用的是哪个行为\N{\fs12}You want that to be the same
Dialogue: 0,0:47:44.38,0:47:46.39,yin,,0,0,0,,密度都是一样的\N{\fs12}no matter what behavior is acting on it.
Dialogue: 0,0:47:47.18,0:47:49.00,yin,,0,0,0,,还可以用UIDynamicItemBehavior\N{\fs12}You can also find out information about
Dialogue: 0,0:47:49.02,0:47:52.79,yin,,0,0,0,,获取动力项的信息\N{\fs12}what's going on with the item using UIDynamicItemBehavior.
Dialogue: 0,0:47:53.33,0:47:56.35,yin,,0,0,0,,比如linearVelocityForItem方法\N{\fs12}It has methods like linearVelocityForItem.
Dialogue: 0,0:47:56.36,0:47:58.28,yin,,0,0,0,,会告诉你这个动力项\N{\fs12}It will tell you the velocity of this item
Dialogue: 0,0:47:58.35,0:47:59.35,yin,,0,0,0,,在不同方向上的速度\N{\fs12}in different directions.
Dialogue: 0,0:47:59.62,0:48:02.63,yin,,0,0,0,,在接管动画时很好用\N{\fs12}Which is really cool for if you want to take over animation,
Dialogue: 0,0:48:02.76,0:48:06.92,yin,,0,0,0,,动力动画系统让动力项开始移动\N{\fs12}the dynamic animation system started this thing moving,
Dialogue: 0,0:48:06.97,0:48:09.11,yin,,0,0,0,,现在你想接管 让它继续移动\N{\fs12}and now you want to take over and keep it moving,
Dialogue: 0,0:48:09.41,0:48:11.19,yin,,0,0,0,,换一个方向移动之类的\N{\fs12}maybe in some other direction or something like that.
Dialogue: 0,0:48:11.19,0:48:13.14,yin,,0,0,0,,可以获取当前移动速度\N{\fs12}You can find out how fast is it moving right now,
Dialogue: 0,0:48:13.14,0:48:14.91,yin,,0,0,0,,然后以该速度继续移动\N{\fs12}and then continue having it move at that speed.
Dialogue: 0,0:48:15.59,0:48:16.97,yin,,0,0,0,,角速度也是一样的\N{\fs12}Same thing with angular velocity.
Dialogue: 0,0:48:16.98,0:48:20.19,yin,,0,0,0,,每秒旋转的弧度是多少\N{\fs12}How fast it's rotating in radians per second. Okay?
Dialogue: 0,0:48:21.92,0:48:23.95,yin,,0,0,0,,动力行为...\N{\fs12}Dynamic behaviors also--
Dialogue: 0,0:48:24.00,0:48:26.21,yin,,0,0,0,,UIDynamicBehavior\N{\fs12}the UIDynamicBehavior is the base class
Dialogue: 0,0:48:26.22,0:48:28.18,yin,,0,0,0,,是重力行为 碰撞行为等的基类\N{\fs12}for gravity behavior, collision behavior, all these,
Dialogue: 0,0:48:28.29,0:48:30.14,yin,,0,0,0,,你也可以自己创建子类\N{\fs12}you can also create your own subclass,
Dialogue: 0,0:48:30.23,0:48:32.56,yin,,0,0,0,,通常情况下 只要在实现文件中\N{\fs12}and usually when you do your implementation,
Dialogue: 0,0:48:32.57,0:48:35.62,yin,,0,0,0,,将其他行为添加为子行为\N{\fs12}just adds other behaviors as child behaviors.
Dialogue: 0,0:48:35.99,0:48:38.06,yin,,0,0,0,,UIDynamicBehavior有一个方法\N{\fs12}So there's a method in UIDynamicBehavior
Dialogue: 0,0:48:38.19,0:48:39.63,yin,,0,0,0,,叫做addChildBehavior\N{\fs12}called addChildBehavior,
Dialogue: 0,0:48:39.89,0:48:43.71,yin,,0,0,0,,你可以添加重力行为 碰撞行为 UIDynamicItemBehavior\N{\fs12}and you can add a gravity, collision, UIDynamicItemBehavior,
Dialogue: 0,0:48:43.76,0:48:44.98,yin,,0,0,0,,将其作为子行为\N{\fs12}as sub-behaviors.
Dialogue: 0,0:48:45.14,0:48:48.55,yin,,0,0,0,,这很常见 只是为了整理API\N{\fs12}And this is very common to do, just to clean up your API,
Dialogue: 0,0:48:48.56,0:48:52.74,yin,,0,0,0,,将一起使用的行为放到它们自己的类中\N{\fs12}to group behaviors that go together, into their own class.
Dialogue: 0,0:48:53.12,0:48:55.53,yin,,0,0,0,,它们自己的UIDynamicBehavior子类中\N{\fs12}Okay? Their own UIDynamicBehavior subclass,
Dialogue: 0,0:48:55.95,0:48:58.45,yin,,0,0,0,,里面通常都是子行为\N{\fs12}and all that thing usually has is child behaviors
Dialogue: 0,0:48:58.45,0:49:00.48,yin,,0,0,0,,也许还有几个API\N{\fs12}and then maybe a little bit of API
Dialogue: 0,0:49:00.68,0:49:03.11,yin,,0,0,0,,用来以某种方法添加项\N{\fs12}to add the items in a certain way
Dialogue: 0,0:49:03.13,0:49:05.46,yin,,0,0,0,,或用其他方法将它们关联起来\N{\fs12}or have them interrelate in some other way.
Dialogue: 0,0:49:06.57,0:49:11.96,yin,,0,0,0,,此外 所有UIDynamicBehavior\N{\fs12}Okay? What is more, all behaviors, all UIDynamicBehaviors,
Dialogue: 0,0:49:11.97,0:49:14.23,yin,,0,0,0,,重力 碰撞 自定义行为等等\N{\fs12}gravity, collision, your own custom ones, whatever,
Dialogue: 0,0:49:14.35,0:49:16.79,yin,,0,0,0,,都知道自己所在的动力动画者是什么\N{\fs12}they know what dynamic animator they are in.
Dialogue: 0,0:49:17.38,0:49:19.43,yin,,0,0,0,,它们有一个属性叫做dynamicAnimator\N{\fs12}They have a property called dynamicAnimator
Dialogue: 0,0:49:19.43,0:49:22.10,yin,,0,0,0,,可以返回它们所在的动力动画者的信息\N{\fs12}which will say what dynamic animator they're in,
Dialogue: 0,0:49:22.21,0:49:24.81,yin,,0,0,0,,UIDynamicBehavior有一个\N{\fs12}and there's kind of a view controller life cycle thing
Dialogue: 0,0:49:24.81,0:49:26.61,yin,,0,0,0,,类似于视图控制器生命周期的机制\N{\fs12}of UIDynamicBehaviors,
Dialogue: 0,0:49:26.81,0:49:28.61,yin,,0,0,0,,只有一个方法\N{\fs12}which only has one method in it,
Dialogue: 0,0:49:28.95,0:49:30.17,yin,,0,0,0,,willMoveToAnimator\N{\fs12}willMoveToAnimator.
Dialogue: 0,0:49:30.70,0:49:33.97,yin,,0,0,0,,当行为移动到动画者中\N{\fs12}So that gets called every time it gets moved to an animator
Dialogue: 0,0:49:33.97,0:49:35.22,yin,,0,0,0,,或从动画者中移除时\N{\fs12}or out of an animator.
Dialogue: 0,0:49:35.22,0:49:36.51,yin,,0,0,0,,这个方法会被调用 参数为nil\N{\fs12}So this would be called with nil.
Dialogue: 0,0:49:37.27,0:49:39.18,yin,,0,0,0,,可以通过这个方法知道\N{\fs12}Okay? So that way you can find out
Dialogue: 0,0:49:39.19,0:49:42.05,yin,,0,0,0,,你的行为当前是否正在执行动画\N{\fs12}whether your behavior is currently being animated or not,
Dialogue: 0,0:49:42.50,0:49:44.93,yin,,0,0,0,,是由哪个动画者执行\N{\fs12}and by which animator. Okay?
Dialogue: 0,0:49:45.72,0:49:48.10,yin,,0,0,0,,关于行为 我还要讲最后一点\N{\fs12}And the last thing I'm going to tell you about behaviors,
Dialogue: 0,0:49:48.11,0:49:52.68,yin,,0,0,0,,非常棒的属性 是一个block 叫做action\N{\fs12}really cool property is a block called action,
Dialogue: 0,0:49:53.62,0:49:55.77,yin,,0,0,0,,这个block没有返回值 也没有参数\N{\fs12}this block returns nothing and takes no arguments,
Dialogue: 0,0:49:55.79,0:49:57.02,yin,,0,0,0,,是基本的block\N{\fs12}so it's basic block.
Dialogue: 0,0:49:57.41,0:50:02.09,yin,,0,0,0,,要用这个block 只要先说行为名称\N{\fs12}This block you provide, you just say my whatever behavior,
Dialogue: 0,0:50:02.26,0:50:04.07,yin,,0,0,0,,重力行为 碰撞行为等等\N{\fs12}gravity behavior, collision behavior, whatever,
Dialogue: 0,0:50:04.27,0:50:07.26,yin,,0,0,0,,然后是.action 等于一个block\N{\fs12}dot action equals a block
Dialogue: 0,0:50:07.56,0:50:09.37,yin,,0,0,0,,每次这个行为引发动画变化时\N{\fs12}it will execute that block every time
Dialogue: 0,0:50:09.38,0:50:12.01,yin,,0,0,0,,都会执行那个block\N{\fs12}this behavior causes animation change.
Dialogue: 0,0:50:13.03,0:50:14.79,yin,,0,0,0,,这个block会被调用很多次\N{\fs12}Okay? So this is called a lot,
Dialogue: 0,0:50:15.22,0:50:17.36,yin,,0,0,0,,比如 重力作用下 物体向下时\N{\fs12}as gravity pulls the thing down,
Dialogue: 0,0:50:17.38,0:50:20.58,yin,,0,0,0,,每次移动 哪怕只移动了1像素 它也会被调用\N{\fs12}every time it moves, even a pixel, this thing gets called.
Dialogue: 0,0:50:21.07,0:50:22.70,yin,,0,0,0,,如果发生碰撞\N{\fs12}Okay? If a collision happens,
Dialogue: 0,0:50:22.84,0:50:25.42,yin,,0,0,0,,物体移动了 这个block就会被调用\N{\fs12}and it moves that causes it to move, this will get called.
Dialogue: 0,0:50:26.07,0:50:29.07,yin,,0,0,0,,可以通过这个方法参与到动画中\N{\fs12}Okay? So this is a way to get in there and get involved.
Dialogue: 0,0:50:29.11,0:50:31.81,yin,,0,0,0,,使用它的时候要负起责任\N{\fs12}Now, you have a responsibility when you get in there,
Dialogue: 0,0:50:31.90,0:50:34.32,yin,,0,0,0,,不要在action中执行资源消耗过大的操作\N{\fs12}don't do anything really expensive in action
Dialogue: 0,0:50:34.37,0:50:36.19,yin,,0,0,0,,否则动画会变得磕磕绊绊的\N{\fs12}or your animation will get all jerky.
Dialogue: 0,0:50:36.70,0:50:38.51,yin,,0,0,0,,不要做资源消耗过大的操作\N{\fs12}Okay? You do not want to do something expensive
Dialogue: 0,0:50:38.51,0:50:39.81,yin,,0,0,0,,比如绘制很多内容\N{\fs12}like draw too much,
Dialogue: 0,0:50:40.00,0:50:41.13,yin,,0,0,0,,可以绘制少量内容\N{\fs12}but you can draw a little bit.
Dialogue: 0,0:50:41.23,0:50:44.58,yin,,0,0,0,,我会在周三的演示中讲到的\N{\fs12}And we'll show in the demo on Wednesday, we'll get to the part
Dialogue: 0,0:50:44.68,0:50:46.88,yin,,0,0,0,,我会设置一个action 绘制少量内容\N{\fs12}where I'll set an action that draws a little bit,
Dialogue: 0,0:50:47.05,0:50:49.04,yin,,0,0,0,,让大家看得更清楚\N{\fs12}so that we can see things a little better,
Dialogue: 0,0:50:49.52,0:50:52.01,yin,,0,0,0,,可以看到这个action 非常好用\N{\fs12}and you can see this, really nice to be able to set this.
Dialogue: 0,0:50:52.29,0:50:55.23,yin,,0,0,0,,这是一个简单的连接方法\N{\fs12}Okay? So this is a simple little hook to get involved
Dialogue: 0,0:50:55.43,0:50:58.29,yin,,0,0,0,,用来参与到行为引发的动画中\N{\fs12}with the animation that these behaviors are causing to happen.
Dialogue: 0,0:50:59.41,0:50:59.94,yin,,0,0,0,,懂了吗\N{\fs12}Okay?
Dialogue: 0,0:51:01.08,0:51:02.88,yin,,0,0,0,,好了 我们进入演示部分\N{\fs12}Alright. So let's do this demo.
Dialogue: 0,0:51:03.82,0:51:06.98,yin,,0,0,0,,下面这个列表中的内容 稍后都会演示\N{\fs12}All that what to look for, you can look on later,
Dialogue: 0,0:51:07.09,0:51:08.83,yin,,0,0,0,,放这里只是为了让大家看到\N{\fs12}just to make sure you actually saw this.
Dialogue: 0,0:51:09.76,0:51:11.33,yin,,0,0,0,,这个示例叫做Dropit\N{\fs12}This demo is called "Dropit."
Dialogue: 0,0:51:11.91,0:51:17.13,yin,,0,0,0,,基本上 就是让方块视图掉下来\N{\fs12}And basically going to drop views, squares, down,
Dialogue: 0,0:51:17.25,0:51:18.77,yin,,0,0,0,,堆积在底部\N{\fs12}and they're going to collect at the bottom,
Dialogue: 0,0:51:18.78,0:51:21.62,yin,,0,0,0,,集满一行之后 就会炸掉这一行\N{\fs12}and when a whole row collects, I'm going to blow them up.
Dialogue: 0,0:51:21.81,0:51:22.53,yin,,0,0,0,,有点像俄罗斯方块\N{\fs12}Kind of like Tetris.
Dialogue: 0,0:51:22.53,0:51:23.11,yin,,0,0,0,,知道俄罗斯方块吗\N{\fs12}You know Tetris?
Dialogue: 0,0:51:23.11,0:51:25.32,yin,,0,0,0,,将各种方块放到一起 拼成一行后\N{\fs12}You put the blocks in and when they fit and you get a row,
Dialogue: 0,0:51:25.49,0:51:27.07,yin,,0,0,0,,这一行就消掉了\N{\fs12}boom, the row disappears.
Dialogue: 0,0:51:27.29,0:51:28.80,yin,,0,0,0,,我们要做的就是这个\N{\fs12}We're going to do that. Okay?
Dialogue: 0,0:51:28.83,0:51:30.90,yin,,0,0,0,,我们不会用俄罗斯方块之类的\N{\fs12}We're not going to use Tetris squares and stuff like that,
Dialogue: 0,0:51:30.93,0:51:34.04,yin,,0,0,0,,这只是一个演示 只有45分钟\N{\fs12}this is a demo, I only have like 45 minutes to do,
Dialogue: 0,0:51:34.04,0:51:36.11,yin,,0,0,0,,我们就用方块来代替\N{\fs12}but we'll do blocks instead.
Dialogue: 0,0:51:36.47,0:51:38.95,yin,,0,0,0,,但在这段时间内\N{\fs12}But the main thing I just want to show you everything I can
Dialogue: 0,0:51:39.10,0:51:42.21,yin,,0,0,0,,我想演示的主要是动画的各种相关内容\N{\fs12}in that amount of time, about animation.
Dialogue: 0,0:51:42.21,0:51:45.55,yin,,0,0,0,,我们要新建一个应用 关掉这个\N{\fs12}So we're going to make a new app here, let's get rid of that.
Dialogue: 0,0:51:46.83,0:51:47.70,yin,,0,0,0,,不需要这个\N{\fs12}Don't need that.
Dialogue: 0,0:51:48.79,0:51:50.05,yin,,0,0,0,,新建一个项目\N{\fs12}We're going to create a new project.
Dialogue: 0,0:51:50.06,0:51:51.22,yin,,0,0,0,,我要叫它...\N{\fs12}I'm going to call this project--
Dialogue: 0,0:51:51.23,0:51:52.56,yin,,0,0,0,,这里我就快速带过了\N{\fs12}I'm going to go quite fast now
Dialogue: 0,0:51:52.56,0:51:54.70,yin,,0,0,0,,这部分大家都已经知道了\N{\fs12}through most of this stuff that you already know how to do.
Dialogue: 0,0:51:54.88,0:51:55.90,yin,,0,0,0,,我要叫它Dropit\N{\fs12}So I'm going to do Dropit,
Dialogue: 0,0:51:55.90,0:51:58.63,yin,,0,0,0,,视图控制器也叫Dropit\N{\fs12}I'm going to call the view controller also Dropit.
Dialogue: 0,0:51:59.20,0:52:01.69,yin,,0,0,0,,保存在主目录Developer下\N{\fs12}Okay? We'll put it in home directory Developer.
Dialogue: 0,0:52:02.19,0:52:03.43,yin,,0,0,0,,这就是我们的Dropit\N{\fs12}Here's our Dropit.
Dialogue: 0,0:52:03.80,0:52:05.84,yin,,0,0,0,,你们知道的 我喜欢把这些移走\N{\fs12}You know me, I always like to move these out of the way.
Dialogue: 0,0:52:06.47,0:52:08.50,yin,,0,0,0,,好了 这是我的storyboard\N{\fs12}Alright. So here's my storyboard.
Dialogue: 0,0:52:09.17,0:52:15.66,yin,,0,0,0,,我要用一个通用UIView来包含这个游戏\N{\fs12}I'm going to use a generic UIView to contain my game.
Dialogue: 0,0:52:15.96,0:52:17.35,yin,,0,0,0,,这个小的掉落游戏\N{\fs12}Okay? My little dropping game.
Dialogue: 0,0:52:17.47,0:52:20.38,yin,,0,0,0,,可以在self.view中做这个掉落游戏\N{\fs12}I could do all this dropping in self dot view here,
Dialogue: 0,0:52:20.51,0:52:21.78,yin,,0,0,0,,但并不是个好主意\N{\fs12}but it's usually a bad idea,
Dialogue: 0,0:52:21.79,0:52:23.25,yin,,0,0,0,,如果我想加一个分数\N{\fs12}because what if I ever want to add a score
Dialogue: 0,0:52:23.26,0:52:25.22,yin,,0,0,0,,或者加一个按钮之类的呢\N{\fs12}or another button or something like that,
Dialogue: 0,0:52:25.23,0:52:27.76,yin,,0,0,0,,我希望游戏是在一个稍小的空间中\N{\fs12}I want my game then to be in a little smaller space,
Dialogue: 0,0:52:27.94,0:52:30.50,yin,,0,0,0,,大家的作业中也要这样做\N{\fs12}and you're going to want to do that for your homework as well.
Dialogue: 0,0:52:30.54,0:52:33.66,yin,,0,0,0,,我只要直接拖出一个通用UIView\N{\fs12}So I'm just going to drag out a generic UIView.
Dialogue: 0,0:52:33.96,0:52:35.20,yin,,0,0,0,,我总是找不到它\N{\fs12}I always have trouble finding it.
Dialogue: 0,0:52:35.22,0:52:36.05,yin,,0,0,0,,在这呢\N{\fs12}Yep, there it is.
Dialogue: 0,0:52:36.16,0:52:38.83,yin,,0,0,0,,我只要把这个通用UIView拖到这里\N{\fs12}So I'm just going to drag this generic UIView in here,
Dialogue: 0,0:52:38.94,0:52:40.38,yin,,0,0,0,,创建一个指向它的输出口\N{\fs12}and I'm going to create an outlet to it,
Dialogue: 0,0:52:40.38,0:52:41.89,yin,,0,0,0,,我要加它gameView\N{\fs12}I'm going to call it my gameView.
Dialogue: 0,0:52:41.98,0:52:46.11,yin,,0,0,0,,只要按住control键拖到这里 叫做gameView\N{\fs12}So just control, drag, out here and call it gameView.
Dialogue: 0,0:52:46.11,0:52:47.63,yin,,0,0,0,,它是一个通用UIView\N{\fs12}And it's a generic UIView.
Dialogue: 0,0:52:48.51,0:52:49.53,yin,,0,0,0,,不是自定义的\N{\fs12}It's no custom thing.
Dialogue: 0,0:52:49.53,0:52:51.36,yin,,0,0,0,,我只是想让它成为边界\N{\fs12}But I just want it to be the bounds,
Dialogue: 0,0:52:51.72,0:52:53.95,yin,,0,0,0,,这样如果我想在里面增加UI之类的话\N{\fs12}and I can move these bounds in from the edge
Dialogue: 0,0:52:53.96,0:52:56.39,yin,,0,0,0,,就可以将边界从边缘移进来\N{\fs12}if I wanted to put some other UI in there or whatever.
Dialogue: 0,0:52:56.74,0:52:59.13,yin,,0,0,0,,游戏视图有了\N{\fs12}So now I have my game view.
Dialogue: 0,0:52:59.30,0:53:01.47,yin,,0,0,0,,我还要再加一个点击手势\N{\fs12}And I'm also going to have a tap gesture,
Dialogue: 0,0:53:01.47,0:53:03.13,yin,,0,0,0,,拖出一个点击手势\N{\fs12}so let's drag out a tap gesture.
Dialogue: 0,0:53:03.27,0:53:04.76,yin,,0,0,0,,每次点击屏幕时\N{\fs12}So that every time I tap on this,
Dialogue: 0,0:53:04.76,0:53:06.80,yin,,0,0,0,,就会有一个方块掉落下来\N{\fs12}I'm going to add another square to drop.
Dialogue: 0,0:53:07.03,0:53:09.37,yin,,0,0,0,,将它放到游戏视图中\N{\fs12}Okay? So I'm going to put this on my game view.
Dialogue: 0,0:53:09.56,0:53:11.21,yin,,0,0,0,,这是我的点击手势\N{\fs12}Here's my tap gesture right here.
Dialogue: 0,0:53:11.51,0:53:14.72,yin,,0,0,0,,control拖动到右边这里 我要叫它tap\N{\fs12}Control drag this out, I'll call it tap.
Dialogue: 0,0:53:19.51,0:53:21.56,yin,,0,0,0,,增大点空间\N{\fs12}Get some more space here for us.
Dialogue: 0,0:53:22.58,0:53:25.61,yin,,0,0,0,,每次点击游戏视图时\N{\fs12}So every time that you tap on my game view,
Dialogue: 0,0:53:25.71,0:53:31.81,yin,,0,0,0,,就会掉下一个正方形\N{\fs12}I'm going to drop another, drop another full square
Dialogue: 0,0:53:32.26,0:53:34.97,yin,,0,0,0,,就像俄罗斯方块那样\N{\fs12}that falls down like a Tetris kind of thing.
Dialogue: 0,0:53:36.02,0:53:37.43,yin,,0,0,0,,打错了\N{\fs12}Oops. Oops.
Dialogue: 0,0:53:37.85,0:53:39.70,yin,,0,0,0,,drop 好了\N{\fs12}Drop. Okay?
Dialogue: 0,0:53:39.70,0:53:41.15,yin,,0,0,0,,这就是这个方法的作用\N{\fs12}So that's what this method is going to do,
Dialogue: 0,0:53:41.15,0:53:42.39,yin,,0,0,0,,添加一个视图\N{\fs12}it's just going to add a view.
Dialogue: 0,0:53:42.39,0:53:44.68,yin,,0,0,0,,正好我可以演示一下\N{\fs12}So this is also a chance for me to show you
Dialogue: 0,0:53:44.81,0:53:47.27,yin,,0,0,0,,如何用代码创建UIView\N{\fs12}how to create a UIView in code,
Dialogue: 0,0:53:47.28,0:53:48.48,yin,,0,0,0,,希望大家都做过了\N{\fs12}which hopefully you've all done that
Dialogue: 0,0:53:48.49,0:53:49.70,yin,,0,0,0,,因为作业中有一部分\N{\fs12}because you've done the part of the homework
Dialogue: 0,0:53:49.71,0:53:50.59,yin,,0,0,0,,就是要完成自定义视图\N{\fs12}that's the custom view,
Dialogue: 0,0:53:50.59,0:53:52.18,yin,,0,0,0,,但是如果你没做过 正好学一下\N{\fs12}but if you haven't, here you go.
Dialogue: 0,0:53:52.82,0:53:55.17,yin,,0,0,0,,我要先创建frame\N{\fs12}I'm going to actually create the frame first.
Dialogue: 0,0:53:55.18,0:53:56.47,yin,,0,0,0,,所以我要设置frame\N{\fs12}So I'm gonna do this frame.
Dialogue: 0,0:53:56.69,0:54:02.35,yin,,0,0,0,,我要将frame的原点设为CGPointZero\N{\fs12}I'm going to have the frame origin start out at CGPointZero,
Dialogue: 0,0:54:02.37,0:54:04.09,yin,,0,0,0,,然后我会改变x轴原点\N{\fs12}but then I'm going to change the x origin.
Dialogue: 0,0:54:04.20,0:54:06.44,yin,,0,0,0,,掉落是从顶部开始的\N{\fs12}So I'm going to have that drop start out at the top
Dialogue: 0,0:54:06.59,0:54:10.05,yin,,0,0,0,,然后我会选取x轴上的任意一点\N{\fs12}and then I'm just gonna put in a random spot across the x.
Dialogue: 0,0:54:11.02,0:54:13.84,yin,,0,0,0,,大小呢 我要定义一个小的...\N{\fs12}The size, I'm going to define a nice little--
Dialogue: 0,0:54:15.00,0:54:16.46,yin,,0,0,0,,添加一个static值\N{\fs12}let's do a static.
Dialogue: 0,0:54:18.17,0:54:25.02,yin,,0,0,0,,static const CGSize 叫它DROP_SIZE 等于\N{\fs12}Static, const, CGSize, we'll call this DROP_SIZE equals
Dialogue: 0,0:54:25.67,0:54:27.59,yin,,0,0,0,,我要将大小设为40*40\N{\fs12}and I'll make it like 40 by 40,
Dialogue: 0,0:54:27.60,0:54:30.76,yin,,0,0,0,,我将它设为静态常量\N{\fs12}but I'm going to make this be static const
Dialogue: 0,0:54:30.77,0:54:32.74,yin,,0,0,0,,而不是设为属性之类的\N{\fs12}as opposed to making it be a property or something
Dialogue: 0,0:54:32.75,0:54:34.65,yin,,0,0,0,,因为我现在不想添加代码\N{\fs12}because I don't want to write the code right now
Dialogue: 0,0:54:34.66,0:54:36.57,yin,,0,0,0,,来处理其他对象修改大小的情况\N{\fs12}to deal with the fact that someone changes this,
Dialogue: 0,0:54:36.68,0:54:38.90,yin,,0,0,0,,那样我可能就要重绘整个视图\N{\fs12}because I probably have to re-draw my whole thing
Dialogue: 0,0:54:38.91,0:54:40.46,yin,,0,0,0,,显示更小的方块\N{\fs12}to have smaller squares, right?
Dialogue: 0,0:54:40.46,0:54:41.13,yin,,0,0,0,,或者类似的效果\N{\fs12}Or something like that.
Dialogue: 0,0:54:41.45,0:54:42.96,yin,,0,0,0,,很棒 值得实现\N{\fs12}Which is cool, be great to do,
Dialogue: 0,0:54:42.96,0:54:45.09,yin,,0,0,0,,但是时间有限 我就不做了\N{\fs12}but just with time constraints I'm not going to do that.
Dialogue: 0,0:54:45.51,0:54:48.51,yin,,0,0,0,,让frame的大小等于这个DROP_SIZE\N{\fs12}So I'm going to have the frame size be this drop size.
Dialogue: 0,0:54:48.52,0:54:51.02,yin,,0,0,0,,我是在创建一个小的掉落视图\N{\fs12}So I'm creating a little drop view, okay,
Dialogue: 0,0:54:51.02,0:54:52.42,yin,,0,0,0,,我想让它的大小是这样的\N{\fs12}and that's the size I want it to be.
Dialogue: 0,0:54:52.67,0:54:54.79,yin,,0,0,0,,然后设置随机...\N{\fs12}So here I'll do my random--
Dialogue: 0,0:54:54.80,0:54:57.03,yin,,0,0,0,,我们这样做吧\N{\fs12}actually let's go ahead and do this...
Dialogue: 0,0:54:58.06,0:55:01.04,yin,,0,0,0,,转到这里\N{\fs12}let's go to here.
Dialogue: 0,0:55:02.04,0:55:06.64,yin,,0,0,0,,在x轴上随机选取一点\N{\fs12}Let's go just pick a random place along the x axis,
Dialogue: 0,0:55:06.64,0:55:11.81,yin,,0,0,0,,用arc4random 然后取模于\N{\fs12}so I'm going to do arc4random, and we're going to mod
Dialogue: 0,0:55:11.81,0:55:18.09,yin,,0,0,0,,self.gameView.bounds.size.width\N{\fs12}that by the self dot gameView dot bounds dot size dot width,
Dialogue: 0,0:55:18.23,0:55:22.44,yin,,0,0,0,,得到x轴上的随机一点\N{\fs12}so somewhere along some random spot along there.
Dialogue: 0,0:55:23.09,0:55:27.26,yin,,0,0,0,,我还要让它们排列起来\N{\fs12}And I'm also going to make it be lined up
Dialogue: 0,0:55:27.47,0:55:29.84,yin,,0,0,0,,这样掉落的方块就是在格子里\N{\fs12}so the drops are, you know, in a grid.
Dialogue: 0,0:55:30.20,0:55:32.98,yin,,0,0,0,,直接除以DROP_SIZE.width\N{\fs12}So I'm just going to divide by the DROP_SIZE dot width,
Dialogue: 0,0:55:33.34,0:55:36.11,yin,,0,0,0,,然后做乘法\N{\fs12}and then I'm going to multiply by saying
Dialogue: 0,0:55:37.04,0:55:43.24,yin,,0,0,0,,frame.origin.x=x*DROP_SIZE.width\N{\fs12}frame dot origin dot x equals x times DROP_SIZE dot width,
Dialogue: 0,0:55:43.24,0:55:46.80,yin,,0,0,0,,我这里用了除法 这是一个整数\N{\fs12}so you see here, I've divided it here, this is an int,
Dialogue: 0,0:55:46.82,0:55:49.06,yin,,0,0,0,,这样就会排列在一行上\N{\fs12}so it's basically going to do a floor, right?
Dialogue: 0,0:55:49.08,0:55:52.61,yin,,0,0,0,,我选择了一个整数 然后乘回去\N{\fs12}I've picked an int and just multiply it back,
Dialogue: 0,0:55:52.62,0:55:55.24,yin,,0,0,0,,将它放在了一个随机点上\N{\fs12}that puts it at a random spot across,
Dialogue: 0,0:55:55.68,0:55:58.59,yin,,0,0,0,,然后创建一个视图 方法是\N{\fs12}and then I create a view just by saying
Dialogue: 0,0:55:58.67,0:56:05.73,yin,,0,0,0,,dropView=[UIView alloc] initWithFrame\N{\fs12}dropView equals UIView alloc initWithFrame,
Dialogue: 0,0:56:06.10,0:56:08.92,yin,,0,0,0,,这是视图的指定初始化方法\N{\fs12}which is the designated initializer for view,
Dialogue: 0,0:56:08.95,0:56:12.53,yin,,0,0,0,,指定这个frame 然后...\N{\fs12}and I'll specify this frame, and then I'm just going--
Dialogue: 0,0:56:12.55,0:56:16.24,yin,,0,0,0,,我要将dropView的背景色\N{\fs12}I'm going to set the dropView's background color
Dialogue: 0,0:56:16.25,0:56:18.09,yin,,0,0,0,,设为随机色\N{\fs12}to be a random color.
Dialogue: 0,0:56:20.05,0:56:23.91,yin,,0,0,0,,我正好有randomColor方法的代码\N{\fs12}Okay, I happen to have a little snippet for that, randomColor.
Dialogue: 0,0:56:24.53,0:56:27.36,yin,,0,0,0,,randomColor是从这五个颜色中随机选择一个\N{\fs12}Okay, so randomColor just picks one of five random colors,
Dialogue: 0,0:56:27.56,0:56:28.98,yin,,0,0,0,,这五个\N{\fs12}okay, right here.
Dialogue: 0,0:56:31.10,0:56:32.71,yin,,0,0,0,,然后再加上\N{\fs12}And then let's just go ahead
Dialogue: 0,0:56:32.72,0:56:36.43,yin,,0,0,0,,self.gameView addSubview:dropView\N{\fs12}and self dot gameView, addSubview, dropView.
Dialogue: 0,0:56:38.76,0:56:42.26,yin,,0,0,0,,想要实现掉落方块就是这么简单\N{\fs12}Okay? So it's as simple as that to drop something on here,
Dialogue: 0,0:56:42.26,0:56:44.84,yin,,0,0,0,,如果我没忘记步骤 都做对了的话\N{\fs12}so unless I've forgotten something or doing something wrong,
Dialogue: 0,0:56:44.85,0:56:46.26,yin,,0,0,0,,我们运行一下\N{\fs12}let's go ahead and run.
Dialogue: 0,0:56:47.11,0:56:50.47,yin,,0,0,0,,每点击一下 就会出现一个方块 很好\N{\fs12}Every time I tap, we get another one, so that's great.
Dialogue: 0,0:56:50.59,0:56:52.75,yin,,0,0,0,,都堆积在顶部 不错\N{\fs12}They're collecting at the top. That's nice.
Dialogue: 0,0:56:52.93,0:56:55.52,yin,,0,0,0,,现在我们添加重力 让它们掉下来\N{\fs12}Now we're going to add some gravity so that they fall down.
Dialogue: 0,0:56:56.53,0:56:58.86,yin,,0,0,0,,为它们添加动画 让它们掉落下来\N{\fs12}Okay? Animated, so they fall down.
Dialogue: 0,0:56:59.48,0:57:00.86,yin,,0,0,0,,怎么做呢\N{\fs12}So how do we do that?
Dialogue: 0,0:57:00.86,0:57:03.47,yin,,0,0,0,,非常简单 只要新建一个动画者\N{\fs12}Very simple, we're just going to create an animator,
Dialogue: 0,0:57:04.49,0:57:08.85,yin,,0,0,0,,添加一个属性 strong nonatomic\N{\fs12}have a property which is strong nonatomic,
Dialogue: 0,0:57:08.93,0:57:11.27,yin,,0,0,0,,是一个UIDynamicAnimator\N{\fs12}which is a UIDynamicAnimator,
Dialogue: 0,0:57:12.34,0:57:16.45,yin,,0,0,0,,再添加一个属性 strong nonatomic\N{\fs12}and I'm also gonna have a property which is strong, nonatomic,
Dialogue: 0,0:57:16.45,0:57:20.08,yin,,0,0,0,,是一个UIGravityBehavior 叫做gravity\N{\fs12}which is a gravity behavior, I'll call it gravity.
Dialogue: 0,0:57:20.50,0:57:22.42,yin,,0,0,0,,出于某些原因 名字尽量短小\N{\fs12}Keeping these names short kind of for a reason,
Dialogue: 0,0:57:22.42,0:57:24.46,yin,,0,0,0,,但你也可以叫它gravityBehavior\N{\fs12}but you might want to call it gravity behavior.
Dialogue: 0,0:57:25.33,0:57:29.62,yin,,0,0,0,,我要在这里加一些延迟实例化\N{\fs12}I'm going to go ahead and do some lazy instantiation here,
Dialogue: 0,0:57:29.62,0:57:32.65,yin,,0,0,0,,先获取一个动力动画者\N{\fs12}so let's get our dynamic animator,
Dialogue: 0,0:57:34.39,0:57:37.79,yin,,0,0,0,,如果没有动画者 就创建一个\N{\fs12}if not animator, then I want to create one,
Dialogue: 0,0:57:38.01,0:57:40.79,yin,,0,0,0,,否则就直接返回它\N{\fs12}otherwise I'm going to return it.
Dialogue: 0,0:57:42.00,0:57:44.70,yin,,0,0,0,,创建动画者的方法 我刚才讲了\N{\fs12}Okay? So as I said when we create the animator,
Dialogue: 0,0:57:44.70,0:57:51.21,yin,,0,0,0,,[UIDynamicAnimator alloc] initWithReferenceView\N{\fs12}it's just UIDynamicAnimator alloc initWithReferenceView
Dialogue: 0,0:57:51.21,0:57:53.74,yin,,0,0,0,,参考视图就是gameView\N{\fs12}and the reference view is just our gameView, right?
Dialogue: 0,0:57:53.74,0:57:55.82,yin,,0,0,0,,我刚才拖出的那个通用视图\N{\fs12}That view that I dragged out, that generic view,
Dialogue: 0,0:57:55.82,0:57:57.96,yin,,0,0,0,,参考视图可以是通用视图\N{\fs12}it's perfectly fine for that reference view
Dialogue: 0,0:57:57.96,0:57:59.08,yin,,0,0,0,,完全没问题\N{\fs12}to be a generic view.
Dialogue: 0,0:57:59.40,0:58:03.08,yin,,0,0,0,,重力行为这里也类似\N{\fs12}And then the gravity one similar kind of deal,
Dialogue: 0,0:58:03.33,0:58:07.01,yin,,0,0,0,,如果没有动力行为 就创建一个\N{\fs12}if the gravity is not set, then we'll create it
Dialogue: 0,0:58:07.74,0:58:08.91,yin,,0,0,0,,有的话就直接返回\N{\fs12}and we'll return it,
Dialogue: 0,0:58:09.74,0:58:12.30,yin,,0,0,0,,创建重力行为的方法非常简单\N{\fs12}and creating a gravity thing is very simple,
Dialogue: 0,0:58:12.30,0:58:16.50,yin,,0,0,0,,_gravity=[[UIGravityBehavior alloc] init]\N{\fs12}we just say gravity equals UIGravityBehavior alloc init.
Dialogue: 0,0:58:17.30,0:58:19.23,yin,,0,0,0,,这里我还要做一个操作\N{\fs12}Okay? I'm going to do one other thing here too
Dialogue: 0,0:58:19.25,0:58:22.63,yin,,0,0,0,,self.animator addBehavior\N{\fs12}is I'm going to say self dot animator addBehavior.
Dialogue: 0,0:58:24.87,0:58:27.55,yin,,0,0,0,,只要有人请求重力行为\N{\fs12}Okay? So any time someone asks me for the gravity thing,
Dialogue: 0,0:58:27.56,0:58:29.23,yin,,0,0,0,,我就会将它加到动画者中\N{\fs12}I'm going to add it to my animator.
Dialogue: 0,0:58:29.25,0:58:31.18,yin,,0,0,0,,这部分只会执行一次\N{\fs12}This is going to only happen once, right?
Dialogue: 0,0:58:31.20,0:58:32.69,yin,,0,0,0,,因为这是延迟实例化\N{\fs12}Because this is my lazy instantiator,
Dialogue: 0,0:58:32.70,0:58:34.12,yin,,0,0,0,,很好 我想要的就是这样\N{\fs12}so that's good, that's exactly what I want.
Dialogue: 0,0:58:34.51,0:58:36.32,yin,,0,0,0,,还可以在这里面设置其他内容\N{\fs12}I could also in here set things
Dialogue: 0,0:58:36.32,0:58:39.36,yin,,0,0,0,,比如重力大小magnitude\N{\fs12}like the gravity's magnitude, right?
Dialogue: 0,0:58:39.36,0:58:43.16,yin,,0,0,0,,我可以不用1.0 设一个小点的重力大小\N{\fs12}So I could say light gravity instead of 1.0,
Dialogue: 0,0:58:43.18,0:58:45.62,yin,,0,0,0,,稍微轻一点\N{\fs12}a little lighter or whatever. Okay?
Dialogue: 0,0:58:46.76,0:58:50.55,yin,,0,0,0,,现在我有了动画者和重力行为\N{\fs12}So now I have an animator, I have a gravity behavior,
Dialogue: 0,0:58:50.68,0:58:53.95,yin,,0,0,0,,现在我只要将我刚才创建的dropView\N{\fs12}all I need to do now is add this dropView,
Dialogue: 0,0:58:54.08,0:58:56.12,yin,,0,0,0,,添加进来就可以了\N{\fs12}okay, that I created to that,
Dialogue: 0,0:58:56.15,0:59:01.34,yin,,0,0,0,,self.gravity addItem:dropView\N{\fs12}so I'm just going to say self dot gravity addItem, my dropView.
Dialogue: 0,0:59:02.77,0:59:05.96,yin,,0,0,0,,做完这一步之后\N{\fs12}Okay? So now that the instant I do that
Dialogue: 0,0:59:05.98,0:59:07.05,yin,,0,0,0,,动画立刻就会开始\N{\fs12}it's going to start animating.
Dialogue: 0,0:59:07.18,0:59:08.34,yin,,0,0,0,,我们来看一下\N{\fs12}So let's take a look at that.
Dialogue: 0,0:59:09.57,0:59:13.26,yin,,0,0,0,,可以看到 随着我的点击 动画马上开始运行\N{\fs12}So you can see as I click they immediately start animating.
Dialogue: 0,0:59:15.09,0:59:15.53,yin,,0,0,0,,看到了吗\N{\fs12}Okay?
Dialogue: 0,0:59:16.92,0:59:18.63,yin,,0,0,0,,抱歉 跑掉了\N{\fs12}And sorry,
Dialogue: 0,0:59:20.15,0:59:23.53,yin,,0,0,0,,现在它们直接掉出屏幕了 是吧\N{\fs12}but they're falling off the bottom, okay?
Dialogue: 0,0:59:23.72,0:59:25.92,yin,,0,0,0,,这可不好 我希望它们堆积在底部\N{\fs12}So that's not so good, I want them to stop at the bottom.
Dialogue: 0,0:59:25.92,0:59:30.15,yin,,0,0,0,,为此我只需要一个碰撞行为 非常简单\N{\fs12}So to do that, I just need a collision behavior, very easy,
Dialogue: 0,0:59:30.15,0:59:35.04,yin,,0,0,0,,在上面这里加上property (strong, nonatomic)\N{\fs12}just go up here, property, strong, nonatomic,
Dialogue: 0,0:59:35.04,0:59:39.42,yin,,0,0,0,,UICollisionBehavior 我要叫它collider\N{\fs12}UICollisionBehavior, collider, I'm going to call it.
Dialogue: 0,0:59:40.23,0:59:41.70,yin,,0,0,0,,在collider里\N{\fs12}And my collider,
Dialogue: 0,0:59:45.94,0:59:51.09,yin,,0,0,0,,如果没有设置collider 我就会创建一个\N{\fs12}if my collider is not set, then I'll set it,
Dialogue: 0,0:59:52.18,0:59:53.70,yin,,0,0,0,,如果有就直接返回\N{\fs12}return the collider,
Dialogue: 0,0:59:53.81,0:59:56.02,yin,,0,0,0,,这段代码我真应该提前敲好\N{\fs12}I really should have a snippet for that kind of thing.
Dialogue: 0,0:59:56.35,0:59:58.53,yin,,0,0,0,,周五讲座的时候约翰应该演示过了吧\N{\fs12}I think Johan showed that in the Friday section.
Dialogue: 0,0:59:59.63,1:00:04.12,yin,,0,0,0,,_collider=[[UICollisionBehavior alloc] init]\N{\fs12}So that equals UICollisionBehavior alloc init,
Dialogue: 0,1:00:04.50,1:00:12.07,yin,,0,0,0,,这里我还要将bounds设为YES\N{\fs12}and here I'm also going to set the bounds to yes.
Dialogue: 0,1:00:12.07,1:00:15.16,yin,,0,0,0,,我要让这个collider用参考视图的bounds\N{\fs12}So I'm going to have this collider use the bounds
Dialogue: 0,1:00:15.16,1:00:17.75,yin,,0,0,0,,作为自己的bounds\N{\fs12}of the reference view as its bounds, okay,
Dialogue: 0,1:00:17.77,1:00:19.66,yin,,0,0,0,,一行代码就够了\N{\fs12}so it's a one line thing to get that in there,
Dialogue: 0,1:00:19.67,1:00:22.65,yin,,0,0,0,,但是我还可以加上一个UIBezierPath\N{\fs12}but I could make, you know, a nice UIBezierPath,
Dialogue: 0,1:00:23.00,1:00:25.88,yin,,0,0,0,,沿着底部放置\N{\fs12}you know, like down along the bottom, whatever I want,
Dialogue: 0,1:00:25.88,1:00:27.63,yin,,0,0,0,,但是这里用这个translation\N{\fs12}but it suits my purposes here
Dialogue: 0,1:00:27.65,1:00:30.64,yin,,0,0,0,,就可以满足我的需求了\N{\fs12}just to use the whole translation,
Dialogue: 0,1:00:30.65,1:00:32.23,yin,,0,0,0,,这里也是一样的\N{\fs12}and I'm going to do the same thing here,
Dialogue: 0,1:00:32.42,1:00:36.01,yin,,0,0,0,,self.animator addBehavior: _collider\N{\fs12}self dot animator addBehavior, this collider.
Dialogue: 0,1:00:36.70,1:00:38.73,yin,,0,0,0,,这样它就添加到了动画者中\N{\fs12}Okay, so it gets added to the animator.
Dialogue: 0,1:00:39.39,1:00:43.51,yin,,0,0,0,,这里也需要将\N{\fs12}So again, I need to add any items
Dialogue: 0,1:00:43.52,1:00:45.87,yin,,0,0,0,,受collider影响的动力项\N{\fs12}that I want to be affected by the collider
Dialogue: 0,1:00:48.52,1:00:50.09,yin,,0,0,0,,添加到collider中\N{\fs12}to the collider, and now it's going to--
Dialogue: 0,1:00:50.16,1:00:51.36,yin,,0,0,0,,这样做之后\N{\fs12}as soon as I do that,
Dialogue: 0,1:00:51.57,1:00:53.73,yin,,0,0,0,,如果有东西撞到了它 就会运行碰撞动画\N{\fs12}if something hit it, it would start colliding.
Dialogue: 0,1:00:54.36,1:00:55.77,yin,,0,0,0,,我们看一下\N{\fs12}Alright? So let's take a look at that.
Dialogue: 0,1:00:57.23,1:00:58.32,yin,,0,0,0,,它们掉到底部停下来了\N{\fs12}Okay, so hopefully the drop,
Dialogue: 0,1:00:58.33,1:01:00.74,yin,,0,0,0,,注意 它们反跳了一下\N{\fs12}notice they have a little bounce to them,
Dialogue: 0,1:01:00.76,1:01:01.80,yin,,0,0,0,,稍微跳起来了一点\N{\fs12}a little bounce in their step.
Dialogue: 0,1:01:04.74,1:01:06.61,yin,,0,0,0,,注意 它们斜了一点\N{\fs12}Now notice that they tilt a little.
Dialogue: 0,1:01:07.03,1:01:08.00,yin,,0,0,0,,为什么会这样\N{\fs12}Okay. Why does that happen?
Dialogue: 0,1:01:08.00,1:01:10.78,yin,,0,0,0,,两个方块落到下面的时候\N{\fs12}Well, on the way down, the two they landed,
Dialogue: 0,1:01:10.79,1:01:12.52,yin,,0,0,0,,一个弹起来 另一个撞到了它\N{\fs12}one was bouncing and the next one hit it,
Dialogue: 0,1:01:12.54,1:01:15.46,yin,,0,0,0,,就会有一点现实的反作用力\N{\fs12}and there was a little bit of real world bounce to it.
Dialogue: 0,1:01:15.76,1:01:18.51,yin,,0,0,0,,如果我们做的是俄罗斯方块\N{\fs12}Now, probably if we're building a Tetris game,
Dialogue: 0,1:01:18.52,1:01:21.60,yin,,0,0,0,,我们并不想让它旋转 偏离中心\N{\fs12}we don't want them to rotate and get off center like that,
Dialogue: 0,1:01:21.79,1:01:25.85,yin,,0,0,0,,所以我们可以禁用旋转\N{\fs12}so we would have to A, not allow rotation probably
Dialogue: 0,1:01:26.22,1:01:28.18,yin,,0,0,0,,或者用对它们进行网格排列\N{\fs12}and B, we might want to grid them up.
Dialogue: 0,1:01:28.19,1:01:30.41,yin,,0,0,0,,示例中可能讲不到了\N{\fs12}I don't think we're going to get that in the demo,
Dialogue: 0,1:01:30.59,1:01:32.26,yin,,0,0,0,,周三我可能会讲一下\N{\fs12}but maybe on Wednesday I'll get to that,
Dialogue: 0,1:01:32.26,1:01:34.47,yin,,0,0,0,,我会告诉大家实际上要怎么做\N{\fs12}I'll post how you would actually do that.
Dialogue: 0,1:01:34.56,1:01:37.10,yin,,0,0,0,,我们要做的就是 当它们碰撞时\N{\fs12}Okay? And all we're going to do is when they collide,
Dialogue: 0,1:01:37.12,1:01:39.20,yin,,0,0,0,,让它们排列对齐\N{\fs12}we're going to have them line themselves up.
Dialogue: 0,1:01:39.74,1:01:41.80,yin,,0,0,0,,我们会在周三讲到这部分\N{\fs12}Okay? So we'll do that later on Wednesday.
Dialogue: 0,1:01:42.97,1:01:47.99,yin,,0,0,0,,注意 这两个行为关系紧密\N{\fs12}Okay, notice that I have these two very related behaviors,
Dialogue: 0,1:01:48.22,1:01:49.29,yin,,0,0,0,,重力和碰撞行为\N{\fs12}gravity and collider.
Dialogue: 0,1:01:49.29,1:01:50.44,yin,,0,0,0,,它们常一同出现\N{\fs12}They really go together.
Dialogue: 0,1:01:50.72,1:01:52.93,yin,,0,0,0,,这里我们要\N{\fs12}Okay? So this is where I might want
Dialogue: 0,1:01:52.93,1:01:55.52,yin,,0,0,0,,创建一个自定义行为\N{\fs12}to create a custom UI behavior.
Dialogue: 0,1:01:55.52,1:01:56.61,yin,,0,0,0,,我们来快速做一下\N{\fs12}So let's do that real quick.
Dialogue: 0,1:01:56.62,1:02:00.53,yin,,0,0,0,,在文件菜单下选择新建文件 新建一个类\N{\fs12}I'm just going to go file, new file, okay, new class,
Dialogue: 0,1:02:00.67,1:02:04.44,yin,,0,0,0,,这个类是一个UIDynamicBehavior\N{\fs12}and this class is going to be a UIDynamicBehavior.
Dialogue: 0,1:02:07.76,1:02:09.65,yin,,0,0,0,,我要叫它DropitBehavior\N{\fs12}And I'm going to call it the DropitBehavior.
Dialogue: 0,1:02:10.42,1:02:13.71,yin,,0,0,0,,这是我新建的一个行为\N{\fs12}Okay? And that is going to be a new behavior I'm creating
Dialogue: 0,1:02:13.72,1:02:15.57,yin,,0,0,0,,包括重力行为和碰撞行为\N{\fs12}that's going to have the gravity and the collider
Dialogue: 0,1:02:15.58,1:02:18.67,yin,,0,0,0,,以及其他行为等子行为\N{\fs12}and eventually some more things as child behaviors.
Dialogue: 0,1:02:18.95,1:02:21.87,yin,,0,0,0,,点击下一步 选择保存位置\N{\fs12}Okay? So let's hit next, where we want to put it,
Dialogue: 0,1:02:21.89,1:02:24.68,yin,,0,0,0,,很好 出来了\N{\fs12}this is all good, here it is.
Dialogue: 0,1:02:24.69,1:02:26.39,yin,,0,0,0,,这就是我的DropitBehavior\N{\fs12}Okay? Here's my DropitBehavior,
Dialogue: 0,1:02:26.91,1:02:29.96,yin,,0,0,0,,在这个DropitBehavior中\N{\fs12}and all I'm going to do in this DropitBehavior
Dialogue: 0,1:02:29.98,1:02:32.08,yin,,0,0,0,,我要定义两个方法\N{\fs12}is I'm going to define a couple of methods here,
Dialogue: 0,1:02:32.09,1:02:35.91,yin,,0,0,0,,addItem方法允许添加UIDynamicItem\N{\fs12}addItem, which allows you to add UIDynamicItem,
Dialogue: 0,1:02:37.70,1:02:40.71,yin,,0,0,0,,注意这里我用了协议的语法\N{\fs12}notice I'm using this protocol syntax,
Dialogue: 0,1:02:41.11,1:02:43.10,yin,,0,0,0,,还要添加一个移除动力项的方法\N{\fs12}and then I'm also going to let you remove an item.
Dialogue: 0,1:02:45.58,1:02:47.72,yin,,0,0,0,,在DropitBehavior中 我就要实现这些方法\N{\fs12}And that's all I'm gonna implement in my DropitBehavior
Dialogue: 0,1:02:47.73,1:02:49.95,yin,,0,0,0,,但我要重写它的初始化方法\N{\fs12}except for I'm going to override its init.
Dialogue: 0,1:02:50.52,1:02:52.98,yin,,0,0,0,,我要在init中做什么呢\N{\fs12}Okay, so what am I going to do in its init?
Dialogue: 0,1:02:52.98,1:02:56.10,yin,,0,0,0,,instancetype init\N{\fs12}So instancetype, init,
Dialogue: 0,1:02:56.71,1:02:58.65,yin,,0,0,0,,self=[super init]\N{\fs12}I'm going to do self equals super init,
Dialogue: 0,1:02:58.66,1:03:02.03,yin,,0,0,0,,这是UIDynamicBehavior的init方法\N{\fs12}so that's UIDynamicBehavior's init.
Dialogue: 0,1:03:03.64,1:03:08.23,yin,,0,0,0,,然后是return self\N{\fs12}Alright? And then return self,
Dialogue: 0,1:03:09.69,1:03:10.84,yin,,0,0,0,,在中间这里\N{\fs12}and then in between here
Dialogue: 0,1:03:10.86,1:03:15.36,yin,,0,0,0,,我只要添加子行为\N{\fs12}all I'm gonna do is add child behaviors
Dialogue: 0,1:03:16.46,1:03:17.99,yin,,0,0,0,,重力行为gravity和碰撞行为collider\N{\fs12}for the gravity and the collider,
Dialogue: 0,1:03:17.99,1:03:19.64,yin,,0,0,0,,我就直接复制粘贴了\N{\fs12}which I'm actually going to copy and paste.
Dialogue: 0,1:03:20.05,1:03:21.10,yin,,0,0,0,,省点时间\N{\fs12}Save ourselves a little time,
Dialogue: 0,1:03:21.10,1:03:26.83,yin,,0,0,0,,这是它们的延迟实例化\N{\fs12}here's nice little lazy instantiation of these,
Dialogue: 0,1:03:27.18,1:03:30.21,yin,,0,0,0,,我们... 点错了\N{\fs12}and let's go grab the-- oops,
Dialogue: 0,1:03:30.98,1:03:36.49,yin,,0,0,0,,复制它们的输出口 加到这里\N{\fs12}let's grab the outlets for these, add those.
Dialogue: 0,1:03:37.17,1:03:39.62,yin,,0,0,0,,抱歉 我一直点错\N{\fs12}Oops, sorry, I keep clicking on the wrong button.
Dialogue: 0,1:03:39.62,1:03:43.75,yin,,0,0,0,,这里加上@interface DropitBehavior()\N{\fs12}Okay, so this is at sign interface, DropitBehavior,
Dialogue: 0,1:03:44.57,1:03:46.64,yin,,0,0,0,,粘贴到这里\N{\fs12}oops, paste, hello, paste.
Dialogue: 0,1:03:47.38,1:03:49.24,yin,,0,0,0,,粘贴好了 很好\N{\fs12}And okay so we've got those, that's good.
Dialogue: 0,1:03:49.32,1:03:51.59,yin,,0,0,0,,至于这行代码 我们不用再将它添加到动画者中了\N{\fs12}These lines, we're not going to add it to the animator
Dialogue: 0,1:03:51.70,1:03:54.12,yin,,0,0,0,,因为我们要把整个行为添加到动画者中\N{\fs12}because we're going to add this whole behavior to the animator,
Dialogue: 0,1:03:54.12,1:03:55.21,yin,,0,0,0,,所以我们可以删掉这两行代码\N{\fs12}so we can get rid of those.
Dialogue: 0,1:03:56.30,1:03:59.67,yin,,0,0,0,,把addItem放到这里\N{\fs12}And in addItem, which we'll put right here.
Dialogue: 0,1:03:59.79,1:04:02.07,yin,,0,0,0,,我们就直接复制粘贴\N{\fs12}Actually let's go ahead and copy and paste
Dialogue: 0,1:04:02.08,1:04:03.39,yin,,0,0,0,,这两个方法\N{\fs12}these two things that we want.
Dialogue: 0,1:04:04.09,1:04:05.61,yin,,0,0,0,,addItem和removeItem\N{\fs12}AddItem and removeItem.
Dialogue: 0,1:04:07.53,1:04:09.06,yin,,0,0,0,,这里我要做的就是\N{\fs12}Okay, all I need to do here
Dialogue: 0,1:04:09.23,1:04:12.56,yin,,0,0,0,,将它们添加到子行为中\N{\fs12}is add them to each of my sub behaviors,
Dialogue: 0,1:04:12.77,1:04:15.36,yin,,0,0,0,,用addItem将动力项添加到gravity中\N{\fs12}so I'll do addItem to my gravity
Dialogue: 0,1:04:15.44,1:04:18.71,yin,,0,0,0,,添加到collider中\N{\fs12}and addItem to my collider.
Dialogue: 0,1:04:19.80,1:04:21.67,yin,,0,0,0,,移除动力项也是一样的\N{\fs12}And I'll do the same thing for remove.
Dialogue: 0,1:04:24.95,1:04:27.34,yin,,0,0,0,,但是这里要改成remove\N{\fs12}Okay, except we want this to be remove.
Dialogue: 0,1:04:28.75,1:04:31.94,yin,,0,0,0,,这是一个常见的模式\N{\fs12}Okay. So this s a common pattern here, you know,
Dialogue: 0,1:04:31.94,1:04:36.64,yin,,0,0,0,,你创建一个动力行为\N{\fs12}you create basically a dynamic behavior
Dialogue: 0,1:04:36.72,1:04:39.35,yin,,0,0,0,,添加子行为等等\N{\fs12}that has child behaviors and in the add,
Dialogue: 0,1:04:39.37,1:04:41.27,yin,,0,0,0,,可以用addItem\N{\fs12}I mean you also have addItems,
Dialogue: 0,1:04:41.29,1:04:43.17,yin,,0,0,0,,或者initWithItem等等\N{\fs12}you might have initWithItem, whatever,
Dialogue: 0,1:04:43.43,1:04:46.33,yin,,0,0,0,,然后在这里 添加子行为\N{\fs12}and then here, we're going to add child behaviors,
Dialogue: 0,1:04:46.94,1:04:52.85,yin,,0,0,0,,gravity和collider\N{\fs12}the gravity and the collider.
Dialogue: 0,1:04:53.55,1:04:56.26,yin,,0,0,0,,我们新建了一个类\N{\fs12}Okay? So we've created a new class here,
Dialogue: 0,1:04:56.50,1:04:58.87,yin,,0,0,0,,它是UIDynamicBehavior的一个子类\N{\fs12}it's a sub-class of UIDynamicBehavior.
Dialogue: 0,1:04:58.95,1:05:00.40,yin,,0,0,0,,我们可以向其添加动力项\N{\fs12}We can add items to it,
Dialogue: 0,1:05:00.46,1:05:03.21,yin,,0,0,0,,与向gravity和collider添加动力项是一样的\N{\fs12}just like we added items to our gravity and our collider,
Dialogue: 0,1:05:03.43,1:05:07.03,yin,,0,0,0,,它的实现就是添加子行为\N{\fs12}and its implementation is merely to have a sub,
Dialogue: 0,1:05:07.07,1:05:10.61,yin,,0,0,0,,这些子行为\N{\fs12}these little sub behaviors.
Dialogue: 0,1:05:11.39,1:05:12.68,yin,,0,0,0,,非常简单\N{\fs12}Okay? Very, very simple.
Dialogue: 0,1:05:12.69,1:05:14.52,yin,,0,0,0,,回到控制器\N{\fs12}And we go back to our controller here,
Dialogue: 0,1:05:14.64,1:05:17.66,yin,,0,0,0,,这里不再需要用单独的行为\N{\fs12}we need to, instead of having the individual ones,
Dialogue: 0,1:05:17.67,1:05:19.96,yin,,0,0,0,,只要添加一个自定义行为就可以了\N{\fs12}now we're just going to have a drop it--
Dialogue: 0,1:05:21.61,1:05:25.25,yin,,0,0,0,,#import DropitBehavior\N{\fs12}sorry, pound sign import, DropitBehavior.
Dialogue: 0,1:05:26.60,1:05:28.31,yin,,0,0,0,,添加一个DropitBehavior\N{\fs12}It's going to have a DropitBehavior,
Dialogue: 0,1:05:32.60,1:05:35.92,yin,,0,0,0,,这里也用延迟实例化\N{\fs12}okay, we'll put a little lazy instantiation for this one too.
Dialogue: 0,1:05:48.90,1:05:49.88,yin,,0,0,0,,这里的alloc/init\N{\fs12}so there's alloc init,
Dialogue: 0,1:05:49.90,1:05:52.12,yin,,0,0,0,,会调用我们刚才编写的那个init方法\N{\fs12}that's going to call that other init that we just did.
Dialogue: 0,1:05:52.43,1:05:57.11,yin,,0,0,0,,self.animator addBehavior:_dropitBehavior\N{\fs12}We'll do self dot animator addBehavior our dropitBehavior,
Dialogue: 0,1:05:58.56,1:06:01.54,yin,,0,0,0,,然后只要返回_dropitBehavior\N{\fs12}alright, and then we'll just return our dropitBehavior
Dialogue: 0,1:06:01.54,1:06:02.28,yin,,0,0,0,,就像这样\N{\fs12}like that.
Dialogue: 0,1:06:02.66,1:06:06.24,yin,,0,0,0,,这里不用再两次添加动力项了\N{\fs12}And now, down here, we don't have to add these separately,
Dialogue: 0,1:06:06.24,1:06:10.46,yin,,0,0,0,,直接像这样用dropitBehavior addItem就可以了\N{\fs12}we're just gonna say dropitBehavior addItem like that.
Dialogue: 0,1:06:11.17,1:06:12.39,yin,,0,0,0,,大家明白了吗\N{\fs12}Okay? So everyone understand how we kind of
Dialogue: 0,1:06:12.41,1:06:13.83,yin,,0,0,0,,我们是如何组合行为的\N{\fs12}grouped all that stuff over there?
Dialogue: 0,1:06:13.96,1:06:17.42,yin,,0,0,0,,随着演示的进行 我们还会向这个dropitBehavior中\N{\fs12}And we're going to add more things as this demo goes on
Dialogue: 0,1:06:17.60,1:06:20.24,yin,,0,0,0,,添加更多内容\N{\fs12}to this kind of general dropitBehavior,
Dialogue: 0,1:06:20.32,1:06:22.51,yin,,0,0,0,,现在我们会将它们都加到另一个类中\N{\fs12}and we're going to add them over in that other class now.
Dialogue: 0,1:06:22.61,1:06:24.87,yin,,0,0,0,,我们还会添加这里的其他行为\N{\fs12}We're still going to add other behaviors that we add here,
Dialogue: 0,1:06:24.88,1:06:26.47,yin,,0,0,0,,并不是另一个类的内容\N{\fs12}that really aren't part of that other thing,
Dialogue: 0,1:06:26.80,1:06:29.88,yin,,0,0,0,,但是现在我们把它们都放到一起了\N{\fs12}but now we collected that into a nice space over there.
Dialogue: 0,1:06:30.41,1:06:32.79,yin,,0,0,0,,希望没出什么问题\N{\fs12}So hopefully that didn't break anything,
Dialogue: 0,1:06:34.17,1:06:35.45,yin,,0,0,0,,试一下 没有\N{\fs12}let's see, it didn't.
Dialogue: 0,1:06:35.47,1:06:37.87,yin,,0,0,0,,运行正常 很好\N{\fs12}Okay, it's all still working, which is awesome.
Dialogue: 0,1:06:38.13,1:06:40.88,yin,,0,0,0,,现在我想做的是\N{\fs12}Okay, so now what I want to do is,
Dialogue: 0,1:06:40.89,1:06:42.85,yin,,0,0,0,,如果像这样填满一行\N{\fs12}when I get a full row like that,
Dialogue: 0,1:06:42.85,1:06:44.98,yin,,0,0,0,,就炸掉这一行\N{\fs12}I want it to blow up, okay?
Dialogue: 0,1:06:45.16,1:06:48.59,yin,,0,0,0,,我不会用动力动画者来实现这个效果\N{\fs12}And I'm going to do the blow up not using a dynamic animator.
Dialogue: 0,1:06:48.99,1:06:51.82,yin,,0,0,0,,我要用UIView动画来实现\N{\fs12}Okay? I'm going to do that with that UIView animation business.
Dialogue: 0,1:06:51.82,1:06:55.08,yin,,0,0,0,,因为我想演示一下 这二者可以混合使用\N{\fs12}Because I want to show you how you can mix the two together
Dialogue: 0,1:06:55.09,1:06:56.68,yin,,0,0,0,,运行正常\N{\fs12}and they'll work fine, okay?
Dialogue: 0,1:06:56.69,1:06:57.52,yin,,0,0,0,,我们来做一下\N{\fs12}So let's do that.
Dialogue: 0,1:06:58.39,1:06:59.99,yin,,0,0,0,,我们要怎么做呢\N{\fs12}So how are we going to do that?
Dialogue: 0,1:07:00.29,1:07:03.94,yin,,0,0,0,,一个问题是 什么时候\N{\fs12}Well, one question is when can I start thinking
Dialogue: 0,1:07:03.94,1:07:05.06,yin,,0,0,0,,可以开始考虑执行其他动画\N{\fs12}about doing other animation
Dialogue: 0,1:07:05.06,1:07:07.13,yin,,0,0,0,,现在动力动画者正在运行\N{\fs12}when I've got this dynamic animator going off
Dialogue: 0,1:07:07.13,1:07:08.23,yin,,0,0,0,,掌管一切动画\N{\fs12}and doing all these things
Dialogue: 0,1:07:08.24,1:07:09.98,yin,,0,0,0,,弹跳 碰撞等等\N{\fs12}bouncing and colliding and all this stuff.
Dialogue: 0,1:07:10.18,1:07:12.39,yin,,0,0,0,,答案是 可以找到\N{\fs12}The answer is you can find out
Dialogue: 0,1:07:12.59,1:07:16.27,yin,,0,0,0,,动画者处于静止状态的时刻\N{\fs12}when an animator reaches quiescent state,
Dialogue: 0,1:07:16.29,1:07:19.11,yin,,0,0,0,,没有弹跳 一切动画都完成了\N{\fs12}when nothing is bouncing, everything is resolved.
Dialogue: 0,1:07:19.11,1:07:20.82,yin,,0,0,0,,一切安静下来的时候\N{\fs12}Okay? When everything is quiet. Okay?
Dialogue: 0,1:07:21.12,1:07:24.86,yin,,0,0,0,,方法是使用动画者的委托属性\N{\fs12}And you do that using a delegate for the animator.
Dialogue: 0,1:07:25.43,1:07:27.06,yin,,0,0,0,,如果我转到动画者\N{\fs12}So if I go to animator here,
Dialogue: 0,1:07:27.15,1:07:29.78,yin,,0,0,0,,它有一个属性叫做delegate委托\N{\fs12}there is a property on animator called delegate.
Dialogue: 0,1:07:30.36,1:07:33.09,yin,,0,0,0,,delegate可以发现\N{\fs12}And the delegate is an object that's going to find out
Dialogue: 0,1:07:33.20,1:07:36.40,yin,,0,0,0,,动画者何时停止 何时再次开始\N{\fs12}when the animator stops and when it starts up again.
Dialogue: 0,1:07:36.91,1:07:38.54,yin,,0,0,0,,我要将它设为self\N{\fs12}And I'm going to set that to be self.
Dialogue: 0,1:07:39.13,1:07:40.34,yin,,0,0,0,,这样做之后\N{\fs12}Now when I do that,
Dialogue: 0,1:07:40.35,1:07:42.11,yin,,0,0,0,,编译器会在这里发出一个警告\N{\fs12}I'm going to get a warning from the compiler here.
Dialogue: 0,1:07:42.27,1:07:42.96,yin,,0,0,0,,为什么会这样\N{\fs12}Why is that?
Dialogue: 0,1:07:43.36,1:07:46.23,yin,,0,0,0,,警告说 你将self\N{\fs12}It says "You are assigning self,"
Dialogue: 0,1:07:46.39,1:07:48.06,yin,,0,0,0,,也就是dropit视图控制器\N{\fs12}which is a dropit view controller,
Dialogue: 0,1:07:48.13,1:07:49.11,yin,,0,0,0,,赋值给了\N{\fs12}"To something that's supposed
Dialogue: 0,1:07:49.12,1:07:52.02,yin,,0,0,0,,一个id类型UIDynamicAnimatorDelegate\N{\fs12}to be an ID UIDynamicAnimatorDelegate",
Dialogue: 0,1:07:52.28,1:07:53.50,yin,,0,0,0,,换句话说\N{\fs12}in other words, you're supposed
Dialogue: 0,1:07:53.50,1:07:56.08,yin,,0,0,0,,你应该实现这个动画者委托\N{\fs12}to be implementing this UI animator delegate.
Dialogue: 0,1:07:56.08,1:07:59.01,yin,,0,0,0,,所以我们要在上面这里说\N{\fs12}So we have to go up here and say
Dialogue: 0,1:07:59.08,1:08:03.04,yin,,0,0,0,,我们实现了这个UIDynamicAnimatorDelegate\N{\fs12}that we implement this UIDynamicAnimatorDelegate.
Dialogue: 0,1:08:03.09,1:08:04.69,yin,,0,0,0,,这是我们刚才讲过的协议\N{\fs12}This is what we're talking about, protocols
Dialogue: 0,1:08:04.86,1:08:06.50,yin,,0,0,0,,表示我们保证做什么\N{\fs12}saying that we promised to do something.
Dialogue: 0,1:08:07.04,1:08:08.97,yin,,0,0,0,,现在没有警告了\N{\fs12}Okay? Now, I'm not getting any more warnings,
Dialogue: 0,1:08:08.97,1:08:11.63,yin,,0,0,0,,说明这里没有必须实现的方法\N{\fs12}so there must not be any required methods in this,
Dialogue: 0,1:08:11.74,1:08:12.91,yin,,0,0,0,,肯定都是可选的\N{\fs12}they must all be optional.
Dialogue: 0,1:08:13.25,1:08:14.86,yin,,0,0,0,,实际上 它们确实是可选的\N{\fs12}And in fact they are all optional,
Dialogue: 0,1:08:14.90,1:08:16.20,yin,,0,0,0,,有两个方法\N{\fs12}and there's only two of them,
Dialogue: 0,1:08:16.23,1:08:20.05,yin,,0,0,0,,我需要的那个叫做dynamicAnimatorDidPause\N{\fs12}and the one I want is called dynamicAnimatorDidPause,
Dialogue: 0,1:08:20.06,1:08:25.76,yin,,0,0,0,,可以看到 有两个动力动画者委托方法\N{\fs12}you can see there's the two dynamic animator delegate methods,
Dialogue: 0,1:08:25.79,1:08:29.76,yin,,0,0,0,,dynamicAnimatorDidPause和dynamicAnimatorWillResume\N{\fs12}dynamicAnimatorDidPause and dynamicAnimatorWillResume.
Dialogue: 0,1:08:30.24,1:08:32.95,yin,,0,0,0,,分别告诉你动画者什么时候停止\N{\fs12}Okay, so that's telling you when it reaches a settle state
Dialogue: 0,1:08:32.96,1:08:36.23,yin,,0,0,0,,什么时候又出现变化 增加了行为或动力项\N{\fs12}and when something changed, a behavior or an item got added,
Dialogue: 0,1:08:36.23,1:08:38.34,yin,,0,0,0,,这时动画者又重新开始\N{\fs12}and now it's going back active again.
Dialogue: 0,1:08:38.80,1:08:41.59,yin,,0,0,0,,在这个例子中 我们想要知道它何时暂停\N{\fs12}Okay? So in this case, we want to know the pause.
Dialogue: 0,1:08:41.84,1:08:43.79,yin,,0,0,0,,当出现暂停时\N{\fs12}Okay? When the pause happens,
Dialogue: 0,1:08:43.82,1:08:47.35,yin,,0,0,0,,我会检查最底下一行是否被填满\N{\fs12}I'm gonna look at that bottom row and see if it's complete.
Dialogue: 0,1:08:47.36,1:08:48.59,yin,,0,0,0,,实际上 我要检查所有行\N{\fs12}Actually I'm going to look at all the rows
Dialogue: 0,1:08:48.59,1:08:49.75,yin,,0,0,0,,看是否有哪行被填满\N{\fs12}and see if any of them are complete.
Dialogue: 0,1:08:50.15,1:08:52.42,yin,,0,0,0,,如果填满一行 就炸掉这行\N{\fs12}Okay? And if they are, I'm gonna blast them out of there.
Dialogue: 0,1:08:53.08,1:08:56.03,yin,,0,0,0,,方法是调用一个方法\N{\fs12}So I'm gonna do that by calling a method
Dialogue: 0,1:08:56.04,1:08:59.34,yin,,0,0,0,,叫做removeCompletedRows\N{\fs12}called removeCompletedRows,
Dialogue: 0,1:08:59.93,1:09:02.75,yin,,0,0,0,,我提前做好了 节省点时间\N{\fs12}and I have a little snippet for that to speed us up here.
Dialogue: 0,1:09:05.11,1:09:07.51,yin,,0,0,0,,就是这个方法\N{\fs12}Okay. Here it is right here.
Dialogue: 0,1:09:07.72,1:09:09.11,yin,,0,0,0,,我没有全加进来\N{\fs12}Okay? I didn't put it all in here.
Dialogue: 0,1:09:09.19,1:09:10.96,yin,,0,0,0,,这里写成了removeCompletedRow\N{\fs12}Actually removeCompletedRow, I call it,
Dialogue: 0,1:09:10.97,1:09:12.06,yin,,0,0,0,,应该是removeCompletedRows\N{\fs12}but really should be rows.
Dialogue: 0,1:09:13.65,1:09:15.60,yin,,0,0,0,,它是如何工作的呢\N{\fs12}And so how does this work?
Dialogue: 0,1:09:15.61,1:09:17.51,yin,,0,0,0,,你们可以先听我的\N{\fs12}Well, you can take my word for it
Dialogue: 0,1:09:17.51,1:09:19.48,yin,,0,0,0,,课下再仔细看\N{\fs12}that this little snippet of code,
Dialogue: 0,1:09:19.49,1:09:20.65,yin,,0,0,0,,这段代码\N{\fs12}and you can go look at it later,
Dialogue: 0,1:09:20.75,1:09:24.14,yin,,0,0,0,,基本上是填充了这个可变数组dropsToRemove\N{\fs12}it basically just fills this mutable array, dropsToRemove
Dialogue: 0,1:09:24.37,1:09:27.64,yin,,0,0,0,,填充的是完整的一行中掉落的方块\N{\fs12}with all the drops that are in a completed row,
Dialogue: 0,1:09:28.28,1:09:30.11,yin,,0,0,0,,即便有多行\N{\fs12}even if there's multiple rows, okay?
Dialogue: 0,1:09:30.26,1:09:32.48,yin,,0,0,0,,用的是这个方法hitTest\N{\fs12}It does this using this method hitTest.
Dialogue: 0,1:09:32.57,1:09:35.84,yin,,0,0,0,,我先检测全部对象\N{\fs12}I'm actually looking at all these things
Dialogue: 0,1:09:35.85,1:09:38.20,yin,,0,0,0,,看是否有视图 如果有就抓住\N{\fs12}and seeing if there's a view there, and if it is, I'm okay.
Dialogue: 0,1:09:38.25,1:09:40.30,yin,,0,0,0,,如果得到一整行\N{\fs12}And if I get all the way across a row I'm like, okay,
Dialogue: 0,1:09:40.31,1:09:42.01,yin,,0,0,0,,就要把这一整行都保存下来\N{\fs12}I've got a whole row and I'll keep them all.
Dialogue: 0,1:09:42.28,1:09:43.83,yin,,0,0,0,,这就是要移除的方块\N{\fs12}So that's what drops to remove.
Dialogue: 0,1:09:43.95,1:09:46.42,yin,,0,0,0,,这段代码会用这些信息\N{\fs12}This code right here is going to fill in
Dialogue: 0,1:09:46.43,1:09:48.08,yin,,0,0,0,,填写dropsToRemove数组\N{\fs12}dropsToRemove with all the things.
Dialogue: 0,1:09:48.08,1:09:50.95,yin,,0,0,0,,现在我们有了这个数组\N{\fs12}Okay, so now we have an array
Dialogue: 0,1:09:50.96,1:09:52.62,yin,,0,0,0,,里面是我们想要移除的方块\N{\fs12}of the drops that we want to remove.
Dialogue: 0,1:09:52.74,1:09:54.32,yin,,0,0,0,,接下来是我们要学习的内容\N{\fs12}Now, let's talk about what we're trying to learn here,
Dialogue: 0,1:09:54.32,1:09:56.28,yin,,0,0,0,,也就是动画 要怎样移除它们呢\N{\fs12}which is animation, how do I remove them?
Dialogue: 0,1:09:57.00,1:09:59.50,yin,,0,0,0,,这里我要做的\N{\fs12}And what I'm going to do, to do that,
Dialogue: 0,1:09:59.52,1:10:02.44,yin,,0,0,0,,分为两步\N{\fs12}it's kind of a two-part deal here,
Dialogue: 0,1:10:02.62,1:10:06.23,yin,,0,0,0,,首先判断是否有要移除的方块\N{\fs12}the first thing I'm gonna say if I have any drops to remove,
Dialogue: 0,1:10:08.21,1:10:12.11,yin,,0,0,0,,如果有 就移除全部方块\N{\fs12}okay, then I am going to remove all of the drops
Dialogue: 0,1:10:12.12,1:10:18.41,yin,,0,0,0,,我要将视图从动画者中移除\N{\fs12}that I'm gonna be taking out of this view from the animator,
Dialogue: 0,1:10:18.67,1:10:20.40,yin,,0,0,0,,从动力动画者中移除\N{\fs12}from the dynamic animator,
Dialogue: 0,1:10:20.40,1:10:23.31,yin,,0,0,0,,因为我不希望动力动画者阻挡我的操作\N{\fs12}because I don't want the dynamic animator fighting me.
Dialogue: 0,1:10:23.95,1:10:27.55,yin,,0,0,0,,我要用UIView动画移除它们\N{\fs12}Okay? I'm gonna remove these things using UIView animation,
Dialogue: 0,1:10:27.55,1:10:29.49,yin,,0,0,0,,我不希望动画者把它们拉回去\N{\fs12}I don't want it trying to pull them back
Dialogue: 0,1:10:29.49,1:10:31.10,yin,,0,0,0,,或者重力拉动它\N{\fs12}or the gravity pulling on it,
Dialogue: 0,1:10:31.38,1:10:32.48,yin,,0,0,0,,我要移除它们\N{\fs12}so I'm going to take them out,
Dialogue: 0,1:10:32.49,1:10:33.63,yin,,0,0,0,,非常简单\N{\fs12}and I'm going to do that very simply
Dialogue: 0,1:10:33.64,1:10:38.92,yin,,0,0,0,,self.dropitBehavior removeItem:drop\N{\fs12}by just saying self dot dropitBehavior, removeItem, drop.
Dialogue: 0,1:10:39.03,1:10:41.07,yin,,0,0,0,,遍历dropsToRemove\N{\fs12}Okay? So I'm going through all the drops to remove,
Dialogue: 0,1:10:41.18,1:10:43.49,yin,,0,0,0,,将它们逐个从dropitBehavior中移除\N{\fs12}and I'm removing them from my dropitBehavior.
Dialogue: 0,1:10:43.66,1:10:45.46,yin,,0,0,0,,现在它们不在任何行为中\N{\fs12}Now they're not in any behavior,
Dialogue: 0,1:10:45.63,1:10:47.50,yin,,0,0,0,,就不会受到动画者的影响\N{\fs12}so they're not going to be affected by the animator.
Dialogue: 0,1:10:48.50,1:10:51.77,yin,,0,0,0,,现在... 就是这样了\N{\fs12}Okay? Now, I'm going to-- so that's that.
Dialogue: 0,1:10:51.95,1:10:54.50,yin,,0,0,0,,现在我要添加动画将它们炸掉\N{\fs12}Now I'm going to animate the blowing them up.
Dialogue: 0,1:10:54.51,1:10:55.38,yin,,0,0,0,,方法是\N{\fs12}Okay? And let me do that
Dialogue: 0,1:10:55.39,1:11:00.00,yin,,0,0,0,,animateRemovingDrops dropsToRemove\N{\fs12}with animateRemovingDrops, dropsToRemove.
Dialogue: 0,1:11:00.75,1:11:01.98,yin,,0,0,0,,这是一个新方法\N{\fs12}Okay? So this is a new method
Dialogue: 0,1:11:02.09,1:11:03.49,yin,,0,0,0,,放到这里 写在一起\N{\fs12}that we're going to write together here,
Dialogue: 0,1:11:04.05,1:11:07.85,yin,,0,0,0,,animateRemovingDrops\N{\fs12}animateRemovingDrops,
Dialogue: 0,1:11:08.22,1:11:11.78,yin,,0,0,0,,参数是数组dropsToRemove\N{\fs12}it takes an array of drops to remove,
Dialogue: 0,1:11:12.49,1:11:14.02,yin,,0,0,0,,要怎么做呢\N{\fs12}okay, how are we going to do this?
Dialogue: 0,1:11:15.04,1:11:20.58,yin,,0,0,0,,UIView animateWithDuration\N{\fs12}Well, I'm just going to do UIView, animateWithDuration.
Dialogue: 0,1:11:21.16,1:11:23.27,yin,,0,0,0,,它有好几个版本\N{\fs12}Okay? So I want-- there's a few versions of this,
Dialogue: 0,1:11:23.27,1:11:25.64,yin,,0,0,0,,有些有delay 有些没有\N{\fs12}some of them have delay, some don't have delay,
Dialogue: 0,1:11:26.26,1:11:28.02,yin,,0,0,0,,我想要哪个呢\N{\fs12}so I want the one-- which one do I want?
Dialogue: 0,1:11:28.31,1:11:32.45,yin,,0,0,0,,只要completion就够了 就是这个\N{\fs12}I think I want the one with just completion, so that's this one.
Dialogue: 0,1:11:32.93,1:11:34.79,yin,,0,0,0,,我需要的是这个\N{\fs12}Okay? So I want this one right here.
Dialogue: 0,1:11:34.80,1:11:36.12,yin,,0,0,0,,要多长时间呢\N{\fs12}How long is this going to take?
Dialogue: 0,1:11:36.32,1:11:39.30,yin,,0,0,0,,我要用一秒钟炸掉它们\N{\fs12}I'm going to take about a second to blow those things up.
Dialogue: 0,1:11:39.47,1:11:41.40,yin,,0,0,0,,这最好是一个常量\N{\fs12}This probably wants to be a constant,
Dialogue: 0,1:11:41.41,1:11:43.54,yin,,0,0,0,,你可以调整数值以达到最好效果\N{\fs12}and you want to tweak it to look good, right?
Dialogue: 0,1:11:43.67,1:11:46.07,yin,,0,0,0,,如果消除得太慢 看起来会很可笑\N{\fs12}If it blows up too slowly it looks ridiculous,
Dialogue: 0,1:11:46.14,1:11:47.83,yin,,0,0,0,,如果太快 用户会看不清楚\N{\fs12}if it blows up too fast, people can't tell
Dialogue: 0,1:11:48.06,1:11:49.75,yin,,0,0,0,,所以我们设为一秒钟\N{\fs12}that it did it, so we'll do that.
Dialogue: 0,1:11:49.86,1:11:52.25,yin,,0,0,0,,然后是animations 就是一个block\N{\fs12}And then here's the animations, which is just a block,
Dialogue: 0,1:11:52.53,1:11:54.08,yin,,0,0,0,,然后是completion\N{\fs12}and here's the completion,
Dialogue: 0,1:11:54.16,1:11:55.63,yin,,0,0,0,,我不会在completion中做任何操作\N{\fs12}which I'm not going to do anything on completion
Dialogue: 0,1:11:55.86,1:11:57.35,yin,,0,0,0,,实际上 我还是做点什么吧\N{\fs12}actually I am going to do something on completion,
Dialogue: 0,1:11:57.37,1:11:59.79,yin,,0,0,0,,我们加些内容 演示一下\N{\fs12}let's do something on completion just to show here.
Dialogue: 0,1:12:00.01,1:12:02.14,yin,,0,0,0,,加一个finished\N{\fs12}So finished, okay?
Dialogue: 0,1:12:02.42,1:12:03.16,yin,,0,0,0,,就是这样\N{\fs12}And that's it.
Dialogue: 0,1:12:03.17,1:12:04.95,yin,,0,0,0,,这就是animateWithDuration\N{\fs12}So that's this entire animateWithDuration,
Dialogue: 0,1:12:04.95,1:12:07.62,yin,,0,0,0,,我们只要加上这两个block就行了\N{\fs12}all we need to do is fill in these two blocks, right?
Dialogue: 0,1:12:07.62,1:12:08.97,yin,,0,0,0,,先来做这个block\N{\fs12}So let's do this block first.
Dialogue: 0,1:12:08.97,1:12:10.14,yin,,0,0,0,,这个animations\N{\fs12}This is the animations.
Dialogue: 0,1:12:10.38,1:12:11.85,yin,,0,0,0,,这里是实际移动操作\N{\fs12}This is the actual moving.
Dialogue: 0,1:12:11.87,1:12:15.00,yin,,0,0,0,,我只要将这些方块移走\N{\fs12}So all I need to do here is move these things out of the way.
Dialogue: 0,1:12:15.26,1:12:17.16,yin,,0,0,0,,我要让它们炸飞\N{\fs12}So I'm going to have them kind of explode up
Dialogue: 0,1:12:17.44,1:12:18.93,yin,,0,0,0,,从视图顶部出去\N{\fs12}and off the top of my view.
Dialogue: 0,1:12:19.09,1:12:21.82,yin,,0,0,0,,所以我要将它们移动到我的视图上面\N{\fs12}So I'm going to move each one to a random location
Dialogue: 0,1:12:21.84,1:12:24.74,yin,,0,0,0,,外部的某个随机位置\N{\fs12}somewhere off screen above my view, okay,
Dialogue: 0,1:12:24.76,1:12:26.35,yin,,0,0,0,,让它们从上面出去\N{\fs12}kind of just out there somewhere.
Dialogue: 0,1:12:26.74,1:12:28.76,yin,,0,0,0,,怎么做呢\N{\fs12}And so how am I going to do that,
Dialogue: 0,1:12:28.77,1:12:34.90,yin,,0,0,0,,for (UIView *drop in dropsToRemove)\N{\fs12}by saying for, UIView drop in dropsToRemove,
Dialogue: 0,1:12:35.89,1:12:40.27,yin,,0,0,0,,随机选取一个x轴坐标\N{\fs12}I'm gonna have the x be some random location
Dialogue: 0,1:12:40.89,1:12:45.36,yin,,0,0,0,,范围是从向左宽度大小的两倍\N{\fs12}that is between two times my width to the left
Dialogue: 0,1:12:45.82,1:12:47.57,yin,,0,0,0,,到向右宽度大小的两倍\N{\fs12}to two times above my width.
Dialogue: 0,1:12:47.71,1:12:50.18,yin,,0,0,0,,像一个漏斗\N{\fs12}So it's gonna be kind of going out like this in a funnel.
Dialogue: 0,1:12:50.32,1:12:53.74,yin,,0,0,0,,x的范围是从向左两倍宽度\N{\fs12}Okay? So the x has to be from two times my width to the left
Dialogue: 0,1:12:53.74,1:12:55.24,yin,,0,0,0,,到向右两倍宽度\N{\fs12}to two times my width to the right,
Dialogue: 0,1:12:55.50,1:12:56.81,yin,,0,0,0,,这里也就是\N{\fs12}so I'm going to make that be
Dialogue: 0,1:12:56.82,1:13:01.34,yin,,0,0,0,,self.gameView.bounds.size.width*5\N{\fs12}self dot gameView dot bounds dot size dot width times five,
Dialogue: 0,1:13:02.11,1:13:04.82,yin,,0,0,0,,这样可以得到随机x轴点\N{\fs12}okay, so that's going to get me there,
Dialogue: 0,1:13:05.18,1:13:12.25,yin,,0,0,0,,减去self.gameView.bounds.size.width*2\N{\fs12}minus self dot gameView dot bounds dot size dot width times two.
Dialogue: 0,1:13:14.56,1:13:18.05,yin,,0,0,0,,把这段代码移到前面来\N{\fs12}Okay. And actually I'm going to move this all back here
Dialogue: 0,1:13:18.05,1:13:19.63,yin,,0,0,0,,看得更清楚\N{\fs12}so we can see it better,
Dialogue: 0,1:13:20.55,1:13:21.91,yin,,0,0,0,,这个也移到前面来\N{\fs12}move this back too.
Dialogue: 0,1:13:23.29,1:13:26.55,yin,,0,0,0,,增大点空间\N{\fs12}Okay. So let's do that, okay,
Dialogue: 0,1:13:26.89,1:13:29.35,yin,,0,0,0,,可以看到 我将五倍宽度\N{\fs12}so you see I'm just going five wide
Dialogue: 0,1:13:29.36,1:13:30.62,yin,,0,0,0,,转变为了两倍\N{\fs12}and I'm shifting it over two.
Dialogue: 0,1:13:30.98,1:13:32.65,yin,,0,0,0,,在上面创建它\N{\fs12}So I'm just creating this thing above.
Dialogue: 0,1:13:32.91,1:13:35.60,yin,,0,0,0,,y轴坐标就简单了\N{\fs12}And then the y, I'm going to make y easy,
Dialogue: 0,1:13:35.61,1:13:36.42,yin,,0,0,0,,让它等于\N{\fs12}I'm just going to have it
Dialogue: 0,1:13:36.43,1:13:40.80,yin,,0,0,0,,self.gameView.bounds.size.height\N{\fs12}be self dot gameView dot bounds dot size dot height,
Dialogue: 0,1:13:41.00,1:13:43.76,yin,,0,0,0,,移动方块的时候 让y轴坐标为负\N{\fs12}and then when I move it there, I'm going to make it negative,
Dialogue: 0,1:13:43.76,1:13:46.92,yin,,0,0,0,,所以我要让drop.center等于\N{\fs12}so I'm gonna say drop dot center equals
Dialogue: 0,1:13:46.93,1:13:51.80,yin,,0,0,0,,CGPoint(x, -y)\N{\fs12}CGPoint x comma minus y. Alright?
Dialogue: 0,1:13:51.82,1:13:55.99,yin,,0,0,0,,在这个duration block中 如果我修改了center\N{\fs12}So inside this duration block, if I change the center,
Dialogue: 0,1:13:55.99,1:13:57.70,yin,,0,0,0,,它是神奇的触发点之一\N{\fs12}it's one of the magic things.
Dialogue: 0,1:13:57.75,1:13:58.76,yin,,0,0,0,,它就会运行动画\N{\fs12}This will get animated.
Dialogue: 0,1:13:59.90,1:14:03.40,yin,,0,0,0,,center frame alpha和transform\N{\fs12}Okay? Center, and frame, and alpha, and transform,
Dialogue: 0,1:14:03.40,1:14:08.07,yin,,0,0,0,,都能够触发自动动画\N{\fs12}those are all the magic things that automatically will animate,
Dialogue: 0,1:14:08.49,1:14:11.21,yin,,0,0,0,,我打错了什么吗\N{\fs12}and what did I type wrong here?
Dialogue: 0,1:14:12.92,1:14:14.17,yin,,0,0,0,,CGPointMake 对\N{\fs12}Oh CGPointMake, yeah.
Dialogue: 0,1:14:14.94,1:14:16.97,yin,,0,0,0,,忘了Make 好样的\N{\fs12}Make. Good job.
Dialogue: 0,1:14:16.99,1:14:18.08,yin,,0,0,0,,就是这样\N{\fs12}Okay, so that's it.
Dialogue: 0,1:14:18.08,1:14:19.95,yin,,0,0,0,,现在方块们就会炸飞了\N{\fs12}So now they're all going to blow up.
Dialogue: 0,1:14:20.21,1:14:21.61,yin,,0,0,0,,completion中做什么呢\N{\fs12}What am I going to do on completion?
Dialogue: 0,1:14:21.62,1:14:25.22,yin,,0,0,0,,当它们成功炸飞之后\N{\fs12}Well, after they blow up, if they successfully blow up,
Dialogue: 0,1:14:26.52,1:14:29.90,yin,,0,0,0,,我就要将它们从父视图中移除\N{\fs12}I'm going to remove them all from the super view, right?
Dialogue: 0,1:14:29.93,1:14:30.84,yin,,0,0,0,,因为我不需要它们了\N{\fs12}Because I don't want them anymore,
Dialogue: 0,1:14:30.84,1:14:32.22,yin,,0,0,0,,我炸掉了它们 它们没有了\N{\fs12}I just blew them up, they're gone.
Dialogue: 0,1:14:32.48,1:14:34.01,yin,,0,0,0,,有什么好办法来实现呢\N{\fs12}So what's a cool way to do that?
Dialogue: 0,1:14:34.02,1:14:34.79,yin,,0,0,0,,看这个\N{\fs12}Watch this.
Dialogue: 0,1:14:34.92,1:14:39.54,yin,,0,0,0,,dropsToRemove makeObjectsPerformSelector:\N{\fs12}Let's go dropsToRemove, makeObjectsPerformSelector,
Dialogue: 0,1:14:39.65,1:14:42.74,yin,,0,0,0,,@selector(removeRromSuperview)\N{\fs12}at sign selector, removeRromSuperview.
Dialogue: 0,1:14:44.02,1:14:46.39,yin,,0,0,0,,我说了 这类方法\N{\fs12}Okay, I told you that methods like this
Dialogue: 0,1:14:46.41,1:14:49.35,yin,,0,0,0,,会很好用 确实很好用\N{\fs12}would come in familiar, come in handy, and they are,
Dialogue: 0,1:14:49.37,1:14:52.29,yin,,0,0,0,,这比用for-in循环好多了\N{\fs12}it's better than having to do for, in, you know, all that stuff.
Dialogue: 0,1:14:52.30,1:14:53.06,yin,,0,0,0,,这要用这个方法\N{\fs12}Boom, just do this,
Dialogue: 0,1:14:53.14,1:14:55.31,yin,,0,0,0,,它就会向所有目标视图发送removeFromSuperview\N{\fs12}it's gonna send removeFromSuperview to all of them.
Dialogue: 0,1:14:56.08,1:14:58.22,yin,,0,0,0,,明白吗\N{\fs12}Okay? Make sense?
Dialogue: 0,1:14:59.01,1:15:00.47,yin,,0,0,0,,我们来看看是否运行正常\N{\fs12}Alright, let's see if this works.
Dialogue: 0,1:15:02.72,1:15:04.70,yin,,0,0,0,,我们加一些方块\N{\fs12}Alright, so let's add some of these guys
Dialogue: 0,1:15:04.85,1:15:08.95,yin,,0,0,0,,等它凑满一行 还差一个\N{\fs12}until we get a whole row, almost there, almost there.
Dialogue: 0,1:15:09.65,1:15:11.54,yin,,0,0,0,,快出来 来了\N{\fs12}Oh, come on, oh, there it is!
Dialogue: 0,1:15:13.34,1:15:15.11,yin,,0,0,0,,这里要注意两件事\N{\fs12}Okay, now, two things there.
Dialogue: 0,1:15:15.40,1:15:18.10,yin,,0,0,0,,炸飞动画执行了\N{\fs12}Notice that we got the animation of the thing happening,
Dialogue: 0,1:15:18.11,1:15:19.71,yin,,0,0,0,,其他方块怎样了\N{\fs12}but what happened to all the other blocks?
Dialogue: 0,1:15:19.97,1:15:22.36,yin,,0,0,0,,它们向下移了\N{\fs12}They moved down, because they're all still
Dialogue: 0,1:15:22.36,1:15:23.65,yin,,0,0,0,,因为它们依旧受动画者的影响\N{\fs12}under the influence of the animator.
Dialogue: 0,1:15:23.88,1:15:25.41,yin,,0,0,0,,重力依旧作用于它们\N{\fs12}Gravity is still pulling on them,
Dialogue: 0,1:15:25.41,1:15:26.94,yin,,0,0,0,,碰撞依旧起作用\N{\fs12}the collider is still working.
Dialogue: 0,1:15:27.30,1:15:29.62,yin,,0,0,0,,如果我再增加一些方块\N{\fs12}So if I put a whole bunch of things in here, okay,
Dialogue: 0,1:15:29.62,1:15:32.44,yin,,0,0,0,,它们有点倾斜了 再看一遍\N{\fs12}and also okay they're kind of tilting, watch this again.
Dialogue: 0,1:15:33.43,1:15:34.05,yin,,0,0,0,,糟糕\N{\fs12}Oop...
Dialogue: 0,1:15:35.50,1:15:36.42,yin,,0,0,0,,没错\N{\fs12}Yeah, I did.
Dialogue: 0,1:15:36.42,1:15:37.91,yin,,0,0,0,,hitTest确实不太靠谱\N{\fs12}I did get unlucky with the hitTest there,
Dialogue: 0,1:15:37.91,1:15:39.35,yin,,0,0,0,,再重新运行一下吧\N{\fs12}here let me show you a different way.
Dialogue: 0,1:15:39.87,1:15:41.47,yin,,0,0,0,,用hitTest来实现这个效果\N{\fs12}The hitTest is kind of a questionable way
Dialogue: 0,1:15:41.47,1:15:42.50,yin,,0,0,0,,不是一个可靠的方法\N{\fs12}to do that, by the way.
Dialogue: 0,1:15:43.50,1:15:45.28,yin,,0,0,0,,我来演示一下\N{\fs12}But, here, let's show you.
Dialogue: 0,1:15:45.28,1:15:47.16,yin,,0,0,0,,再重新看一遍\N{\fs12}I'll just show you this again.
Dialogue: 0,1:15:48.22,1:15:50.77,yin,,0,0,0,,而且 我应该让它们不这样倾斜\N{\fs12}Also, I should make it so that they're not tilting like that.
Dialogue: 0,1:15:50.77,1:15:52.05,yin,,0,0,0,,我们下次再做\N{\fs12}We'll do that next time.
Dialogue: 0,1:15:52.05,1:15:54.05,yin,,0,0,0,,又不出来吗 来了\N{\fs12}But...wow, I'm getting-- There we go.
Dialogue: 0,1:15:54.55,1:15:57.00,yin,,0,0,0,,喂 怎么回事\N{\fs12}Okay. Hello.
Dialogue: 0,1:15:58.31,1:15:59.15,yin,,0,0,0,,动一下 动一下\N{\fs12}Knock, knock, knock.
Dialogue: 0,1:15:59.45,1:16:01.59,yin,,0,0,0,,我不知道为什么不行\N{\fs12}Well, I don't know why it's not working now,
Dialogue: 0,1:16:01.60,1:16:03.85,yin,,0,0,0,,但好歹你们刚才看到了 该下课了\N{\fs12}but anyway you got to see it work and time's up,
Dialogue: 0,1:16:03.87,1:16:05.83,yin,,0,0,0,,我们会再看一下\N{\fs12}but we'll look at that,
Dialogue: 0,1:16:05.83,1:16:06.58,yin,,0,0,0,,后面会再看一下\N{\fs12}we'll look at that later
Dialogue: 0,1:16:06.60,1:16:08.11,yin,,0,0,0,,看看问题出在哪\N{\fs12}and try and find out what our problem was.
Dialogue: 0,1:16:08.28,1:16:12.09,yin,,0,0,0,,但是 这里主要要注意 我们让方块飞走了\N{\fs12}But anyway, the main thing there to notice, we did the fly away,
Dialogue: 0,1:16:12.17,1:16:15.40,yin,,0,0,0,,但是动画者依旧作用于其他对象\N{\fs12}but we also had the animator still working on the other things,
Dialogue: 0,1:16:15.41,1:16:16.37,yin,,0,0,0,,要知道这一点很重要\N{\fs12}and that's important to know,
Dialogue: 0,1:16:16.37,1:16:18.10,yin,,0,0,0,,这二者可以这样互相作用\N{\fs12}that the two things can interact like that.
Dialogue: 0,1:16:18.10,1:16:19.55,yin,,0,0,0,,如果你将某些元素移走\N{\fs12}If you move things out of the way,
Dialogue: 0,1:16:19.75,1:16:21.97,yin,,0,0,0,,动画者会重新开始\N{\fs12}the animator is going to go back to life
Dialogue: 0,1:16:22.02,1:16:24.42,yin,,0,0,0,,继续拉动物体\N{\fs12}and start pulling down on things, okay?
Dialogue: 0,1:16:24.50,1:16:26.36,yin,,0,0,0,,下次我们会继续完成这个动画\N{\fs12}So next time, we'll continue to do the animation,
Dialogue: 0,1:16:26.37,1:16:28.55,yin,,0,0,0,,我们不会再让它这么摇晃了\N{\fs12}we'll make it so it's not so rickety, okay,
Dialogue: 0,1:16:28.56,1:16:29.91,yin,,0,0,0,,避免出现\N{\fs12}so we don't have this problem
Dialogue: 0,1:16:29.91,1:16:31.79,yin,,0,0,0,,底部无法对齐的问题\N{\fs12}where the bottom load doesn't line up,
Dialogue: 0,1:16:32.34,1:16:33.83,yin,,0,0,0,,我们还会增加一个吸附行为\N{\fs12}and we'll also do an attachment,
Dialogue: 0,1:16:33.91,1:16:36.81,yin,,0,0,0,,吸附到某个元素上\N{\fs12}where we attach to something and, you know,
Dialogue: 0,1:16:36.82,1:16:39.13,yin,,0,0,0,,用吸附行为\N{\fs12}have it swing from an attachment,
Dialogue: 0,1:16:39.84,1:16:42.52,yin,,0,0,0,,让它挂到某个吸附对象上\N{\fs12}with a little attachment behavior.
Dialogue: 0,1:16:43.01,1:16:44.10,yin,,0,0,0,,好了 下次见\N{\fs12}Alright, we'll see you next time.
Dialogue: 0,1:16:45.24,1:16:48.74,yin,,0,0,0,,更多内容 请访问斯坦福网站\N{\fs12}For more, please visit us at Stanford.edu.
