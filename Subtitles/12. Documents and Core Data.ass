[Script Info]
; Script generated by Aegisub 3.2.0
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: None

[Aegisub Project Garbage]
Active Line: 2

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: yin,冬青黑体简体中文 W3,20,&H00FFFFFF,&HF0000000,&H00000000,&H32000000,0,0,0,0,100,100,0,0,1,1,0,2,5,5,5,134

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:05.34,0:00:08.80,yin,,0,0,0,,斯坦福大学\N{\fs12}Stanford University.
Dialogue: 0,0:00:08.80,0:00:15.84,yin,,0,0,0,,欢迎来到CS193P课程 2013-14秋季第12讲\N{\fs12}Okay, well welcome to CS193p, Lecture 12 of fall 2013 and 14,
Dialogue: 0,0:00:15.84,0:00:19.61,yin,,0,0,0,,今天我们只有一个主题 也就是Core Data\N{\fs12}and today we have one topic and one topic only, which is core data.
Dialogue: 0,0:00:19.61,0:00:25.11,yin,,0,0,0,,之前有人问过 第五次作业周三交\N{\fs12}And, as someone was asking earlier, assignment 5 is due on Wednesday
Dialogue: 0,0:00:25.11,0:00:29.36,yin,,0,0,0,,而最后一次作业 作业六 到时也会布置 一周后交\N{\fs12}and then your last assignment, assignment 6, will go out then and be due a week later.
Dialogue: 0,0:00:29.36,0:00:34.42,yin,,0,0,0,,周三 我将讲到期末项目要求\N{\fs12}On Wednesday, I'm going to be going over the final project requirements
Dialogue: 0,0:00:34.42,0:00:37.15,yin,,0,0,0,,我们还会继续讲一点Core Data\N{\fs12}and we're going to continue with core data a little bit,
Dialogue: 0,0:00:37.15,0:00:40.75,yin,,0,0,0,,讨论Core Data和UITableView\N{\fs12}talk about core data with table, UI table view.
Dialogue: 0,0:00:40.75,0:00:42.37,yin,,0,0,0,,然后我要做一个大的演示\N{\fs12}And then I'm going to do a big demo.
Dialogue: 0,0:00:42.37,0:00:44.99,yin,,0,0,0,,今天的课将都是幻灯片讲解\N{\fs12}So today's lecture is going to be all slides.
Dialogue: 0,0:00:44.99,0:00:48.55,yin,,0,0,0,,一般我不喜欢这样做 一次讲太多幻灯片并不好\N{\fs12}I don't usually like to do that just because it's an awful lot of slides all at once,
Dialogue: 0,0:00:48.55,0:00:50.39,yin,,0,0,0,,不过这次我打算这样做\N{\fs12}but it makes sense in this case
Dialogue: 0,0:00:50.39,0:00:52.78,yin,,0,0,0,,今天内容的演示都将放到周三\N{\fs12}and I'll be doing the demo for today's stuff on Wednesday,
Dialogue: 0,0:00:52.78,0:00:56.64,yin,,0,0,0,,然后下周 我们会谈到高级segue\N{\fs12}and then next week we'll start talking about advanced segueing
Dialogue: 0,0:00:56.64,0:00:58.91,yin,,0,0,0,,或许我们还会讨论MapKit 多任务处理\N{\fs12}and maybe we'll do some map kit, multitasking,
Dialogue: 0,0:00:58.91,0:01:01.03,yin,,0,0,0,,下周会讲什么我不确定\N{\fs12}I'm not quite sure what I'm going to cover next week
Dialogue: 0,0:01:01.03,0:01:03.44,yin,,0,0,0,,因为这方面 你们将没有作业\N{\fs12}because you won't have a homework assignment on that.
Dialogue: 0,0:01:03.44,0:01:06.69,yin,,0,0,0,,今天和周三我要讲的Core Data内容\N{\fs12}This core data stuff that we're covering today and Wednesday,
Dialogue: 0,0:01:06.69,0:01:09.69,yin,,0,0,0,,将是你们最后一次作业的主题\N{\fs12}that's going to be the topic of your last homework assignment
Dialogue: 0,0:01:09.69,0:01:12.07,yin,,0,0,0,,这次作业将在周三布置\N{\fs12}that goes out on Wednesday.
Dialogue: 0,0:01:12.07,0:01:15.09,yin,,0,0,0,,Core Data 什么是Core Data\N{\fs12}So, core data, what is core data?
Dialogue: 0,0:01:15.09,0:01:17.22,yin,,0,0,0,,Core Data是一个面向对象的数据库\N{\fs12}Core data is an object-oriented database.
Dialogue: 0,0:01:17.22,0:01:18.52,yin,,0,0,0,,我们为什么需要它呢\N{\fs12}Why do we need it?
Dialogue: 0,0:01:18.52,0:01:21.22,yin,,0,0,0,,原因在于 在大型应用程序中\N{\fs12}Because in any kind of significant application
Dialogue: 0,0:01:21.22,0:01:23.20,yin,,0,0,0,,我们需要处理很多数据\N{\fs12}where we have a lot of data to crunch on,
Dialogue: 0,0:01:23.20,0:01:27.50,yin,,0,0,0,,我们不能将其存储于NSUserDefault或是完全不存储\N{\fs12}we can't be storing it in NS user defaults or not storing it at all,
Dialogue: 0,0:01:27.52,0:01:30.22,yin,,0,0,0,,完全从Flickr上进行下载 对吧\N{\fs12}or always fetching it down from Flickr, right?
Dialogue: 0,0:01:30.22,0:01:34.08,yin,,0,0,0,,你们当前的作业 以及上周的Shutterbug演示\N{\fs12}So your current assignment, or the Shutterbug demo that we did last week,
Dialogue: 0,0:01:34.08,0:01:37.30,yin,,0,0,0,,我们一直是在取回整个模型\N{\fs12}we're just always fetching our entire model,
Dialogue: 0,0:01:37.30,0:01:40.15,yin,,0,0,0,,每次都要从Flickr取回\N{\fs12}basically, every time we want it from Flickr,
Dialogue: 0,0:01:40.15,0:01:43.54,yin,,0,0,0,,但如果照片数据库很大呢\N{\fs12}but what if we had a very large database of photos, thousands
Dialogue: 0,0:01:43.54,0:01:46.87,yin,,0,0,0,,包含成千上万的照片信息\N{\fs12}or tens of thousands of little pieces of information
Dialogue: 0,0:01:46.87,0:01:49.88,yin,,0,0,0,,这时我们就不能每次都从Flickr取回了\N{\fs12}about photos, we couldn't be fetching that down every time
Dialogue: 0,0:01:49.88,0:01:52.91,yin,,0,0,0,,也不能存到NSUserDefault 我们需要一个数据库\N{\fs12}and we couldn't store it in NS user default so we need a real database.
Dialogue: 0,0:01:52.91,0:01:56.58,yin,,0,0,0,,而且真正的数据库还让我们能够进行聪明的查询\N{\fs12}Plus, a read database allows us to make really smart queries
Dialogue: 0,0:01:56.58,0:01:58.75,yin,,0,0,0,,关于现在我们的数据是什么\N{\fs12}about what's, our data is right now.
Dialogue: 0,0:01:58.75,0:02:01.85,yin,,0,0,0,,如果只是显示在表格中 我们就很难查询了\N{\fs12}We can't really query it at all, or almost not at all,
Dialogue: 0,0:02:01.85,0:02:03.63,yin,,0,0,0,,如果只是显示在表格中 我们就很难查询了\N{\fs12}we're just kind of displaying it all in tables,
Dialogue: 0,0:02:03.63,0:02:07.98,yin,,0,0,0,,因此 下面我们需要让app的精密程度上升一个层次\N{\fs12}so to take the next level of sophistication in our app, we need to do that.
Dialogue: 0,0:02:07.98,0:02:12.18,yin,,0,0,0,,Core Data是iOS7中一个非常强大的框架\N{\fs12}So, core data is a very, very powerful framework in iOS7,
Dialogue: 0,0:02:12.18,0:02:15.90,yin,,0,0,0,,就它的作用而言 它绝对是最强大的之一\N{\fs12}one of the most powerful in terms of what it can do.
Dialogue: 0,0:02:15.90,0:02:21.84,yin,,0,0,0,,一堂课多一点的时间 我只能讲到一些皮毛\N{\fs12}I can only just barely scratch the surface in a lecture, in a little bit.
Dialogue: 0,0:02:21.84,0:02:24.33,yin,,0,0,0,,这周 我打算让你们理解基本知识\N{\fs12}This week, I'm just going to try and get you the basics
Dialogue: 0,0:02:24.33,0:02:25.73,yin,,0,0,0,,你们之后需要…\N{\fs12}and you're going to have to, you know,
Dialogue: 0,0:02:25.73,0:02:28.48,yin,,0,0,0,,如果未来你想做一个严谨的数据库app\N{\fs12}if you want to do a serious database app in your future,
Dialogue: 0,0:02:28.48,0:02:30.67,yin,,0,0,0,,也许是期末项目或是以后的项目\N{\fs12}maybe for your final project or beyond,
Dialogue: 0,0:02:30.67,0:02:32.96,yin,,0,0,0,,你需要额外去阅读相关内容\N{\fs12}you'll need to do a little bit of extra reading up
Dialogue: 0,0:02:32.96,0:02:35.37,yin,,0,0,0,,因为Core Data内容太多了\N{\fs12}because core data is massive.
Dialogue: 0,0:02:35.76,0:02:40.82,yin,,0,0,0,,就基础而言 它是一种创建对象的方式\N{\fs12}But fundamentally, it's a base, it's a way of creating objects,
Dialogue: 0,0:02:40.82,0:02:43.72,yin,,0,0,0,,创建你要处理的Objective-C对象\N{\fs12}objective C objects that you are going to deal with
Dialogue: 0,0:02:43.73,0:02:50.98,yin,,0,0,0,,并映射到 连接到SQL或XML数据库\N{\fs12}that are mapped, or linked, to SQL, or XML, databases.
Dialogue: 0,0:02:50.98,0:02:56.35,yin,,0,0,0,,它是面向对象领域同数据库领域之间的桥梁\N{\fs12}So, it's kind of a bridge between object-oriented land and database land,
Dialogue: 0,0:02:56.35,0:02:59.36,yin,,0,0,0,,数据库领域主要是SQL这些\N{\fs12}and database land is dominated by things like sequel.
Dialogue: 0,0:02:59.36,0:03:01.97,yin,,0,0,0,,多少人知道SQL是什么\N{\fs12}How many people here know what SQL is?
Dialogue: 0,0:03:01.97,0:03:04.39,yin,,0,0,0,,不是如何对其编程 知道它是什么就行了\N{\fs12}Not know how to program SQL, but know what it is?
Dialogue: 0,0:03:04.39,0:03:05.81,yin,,0,0,0,,几乎所有人都知道\N{\fs12}Yeah, so everyone, pretty much.
Dialogue: 0,0:03:05.81,0:03:10.38,yin,,0,0,0,,Core Data主要连接的就是SQL后台\N{\fs12}So that's mostly what core data is hooked up is, is sequel backend.
Dialogue: 0,0:03:10.38,0:03:12.93,yin,,0,0,0,,Core Data是如何工作的呢\N{\fs12}So how does core data work?
Dialogue: 0,0:03:12.93,0:03:16.64,yin,,0,0,0,,首先 你用Xcode中的工具创建一个可视映射\N{\fs12}First, you create a visual map using a tool in Xcode.
Dialogue: 0,0:03:16.64,0:03:19.22,yin,,0,0,0,,拖放这类东西\N{\fs12}So dragging and dropping and all that stuff,
Dialogue: 0,0:03:19.22,0:03:23.59,yin,,0,0,0,,在你的数据的面向对象的视图\N{\fs12}so creating a mapping between an object-oriented view of your data
Dialogue: 0,0:03:23.59,0:03:29.49,yin,,0,0,0,,同SQL 或是数据的表格和行之间创建映射\N{\fs12}and the sequel or tables and rows version of your data.
Dialogue: 0,0:03:29.49,0:03:32.87,yin,,0,0,0,,Core Data在创建这个映射之后\N{\fs12}And core data allows really
Dialogue: 0,0:03:32.87,0:03:35.81,yin,,0,0,0,,能够很好进行无缝结合\N{\fs12}that to be pretty seamless once you've created this mapping,
Dialogue: 0,0:03:35.81,0:03:37.93,yin,,0,0,0,,以后我会更进一步讲到这个\N{\fs12}and we'll talk all about that and how it does that,
Dialogue: 0,0:03:37.93,0:03:43.40,yin,,0,0,0,,不过首先 我们来看看如何在Xcode中创建这个可视映射\N{\fs12}but let's start by looking how we create this visual map in Xcode.
Dialogue: 0,0:03:43.40,0:03:46.77,yin,,0,0,0,,首先 创建映射我们需要选新文件\N{\fs12}So, first, we create the map by doing new file,
Dialogue: 0,0:03:46.77,0:03:49.34,yin,,0,0,0,,往项目中加新东西\N{\fs12}anytime we want to add something new to our project,
Dialogue: 0,0:03:49.34,0:03:52.86,yin,,0,0,0,,总需要点新文件 但在新文件中\N{\fs12}we're going to do new file, but in new file, instead of doing
Dialogue: 0,0:03:52.86,0:03:56.46,yin,,0,0,0,,这里不再是Cocoa Touch或Objective-C类\N{\fs12}like Cocoa Touch, objective C class, we're going to go down to
Dialogue: 0,0:03:56.46,0:03:58.84,yin,,0,0,0,,而是下面这里的Core Data\N{\fs12}where it says core data, see that?
Dialogue: 0,0:03:58.84,0:04:01.88,yin,,0,0,0,,选择数据模型 不要错选映射模型\N{\fs12}And pick data model, don't accidentally pick mapping model,
Dialogue: 0,0:04:01.88,0:04:05.11,yin,,0,0,0,,这里要的是数据模型 数据模型就是\N{\fs12}its data model that you want here, okay, the data model is the mapping
Dialogue: 0,0:04:05.11,0:04:08.39,yin,,0,0,0,,面向对象的世界同数据库世界之间的映射\N{\fs12}between the object-oriented world and the database world.
Dialogue: 0,0:04:08.39,0:04:09.40,yin,,0,0,0,,点这个\N{\fs12}So you click that,
Dialogue: 0,0:04:09.40,0:04:12.49,yin,,0,0,0,,它会问你 叫什么名称 放到哪里\N{\fs12}it's going to ask you what you want to call it and where you want to put it.
Dialogue: 0,0:04:12.49,0:04:17.22,yin,,0,0,0,,如果只有一个 有些人喜欢把模型文件叫Model\N{\fs12}Some people like to call their model file, model, if they only have one.
Dialogue: 0,0:04:17.22,0:04:20.37,yin,,0,0,0,,有些人则喜欢用应用程序的名字\N{\fs12}Some people like to name it the name of the application.
Dialogue: 0,0:04:20.37,0:04:22.54,yin,,0,0,0,,就像上周 如果我们要用Core Data\N{\fs12}So like of last week, if we were doing core data we might have
Dialogue: 0,0:04:22.54,0:04:24.69,yin,,0,0,0,,我们可以叫它Shutterbug\N{\fs12}called Shutterbug, the name.
Dialogue: 0,0:04:24.69,0:04:28.99,yin,,0,0,0,,有时 映射会有多个 这完全有可能\N{\fs12}Sometimes you might have multiple mappings, and it is totally possible
Dialogue: 0,0:04:28.99,0:04:33.35,yin,,0,0,0,,在大程序中 很有可能存在多数据库 多映射\N{\fs12}and in a big application you might well have multiple databases, multiple mappings,
Dialogue: 0,0:04:33.35,0:04:36.53,yin,,0,0,0,,你将有多个文件 因此 你取名称的时候\N{\fs12}and so you would have multiple files, so you want to pick names
Dialogue: 0,0:04:36.53,0:04:39.02,yin,,0,0,0,,应该让映射对应于\N{\fs12}for your mappings that kind of correspond
Dialogue: 0,0:04:39.02,0:04:40.81,yin,,0,0,0,,它们在程序中的用途\N{\fs12}to what their purpose is inside your application,
Dialogue: 0,0:04:40.81,0:04:43.70,yin,,0,0,0,,这里我们使用默认值 也就是Model\N{\fs12}so here we're going to take the default, which is just model,
Dialogue: 0,0:04:43.70,0:04:46.05,yin,,0,0,0,,可以看到这里 新文件得以创建\N{\fs12}and you can see there, it creates this new file.
Dialogue: 0,0:04:46.05,0:04:51.89,yin,,0,0,0,,看导航器中 Model.xcdatamodeld\N{\fs12}If you look over in the navigator over there, model dot xc data model d.
Dialogue: 0,0:04:51.89,0:04:55.59,yin,,0,0,0,,这是我们的映射 可视映射文件\N{\fs12}And this is our mapping, our visual mapping file,
Dialogue: 0,0:04:55.59,0:04:59.05,yin,,0,0,0,,可以看到这里 它有一些组成部分\N{\fs12}and you can see here that it has some components,
Dialogue: 0,0:04:59.06,0:05:01.10,yin,,0,0,0,,大多数我都会讲到\N{\fs12}and we're going to talk about most of them.
Dialogue: 0,0:05:01.10,0:05:05.87,yin,,0,0,0,,分别是实体 属性 关系和取回属性\N{\fs12}The components are entities, attributes, relationships, and fetch properties.
Dialogue: 0,0:05:06.47,0:05:10.60,yin,,0,0,0,,实体就像是对象 它们会映射到我们的对象\N{\fs12}So entities are kind of like objects, they're going to map to our objects.
Dialogue: 0,0:05:10.60,0:05:14.18,yin,,0,0,0,,在数据库世界中 它们是表格\N{\fs12}In the database world, they are tables.
Dialogue: 0,0:05:14.18,0:05:18.05,yin,,0,0,0,,属性就像是数据库中的列\N{\fs12}Attributes are kind of like the columns in a table in database.
Dialogue: 0,0:05:18.05,0:05:21.99,yin,,0,0,0,,在面向对象的世界中 它们相当于对象的属性\N{\fs12}In our object-oriented world, they're going to be properties on objects.
Dialogue: 0,0:05:21.99,0:05:24.92,yin,,0,0,0,,关系也是对象上的属性\N{\fs12}Relationships are also properties on objects,
Dialogue: 0,0:05:24.92,0:05:28.17,yin,,0,0,0,,但它们是指针 指向数据库中的其它对象\N{\fs12}but they are pointers to other objects in the database, okay,
Dialogue: 0,0:05:28.17,0:05:30.98,yin,,0,0,0,,或是指向一些别的对象\N{\fs12}or pointers to a bunch of other objects, okay,
Dialogue: 0,0:05:30.98,0:05:36.26,yin,,0,0,0,,在数据库意义上 这就像是将不同表格连在一起\N{\fs12}so this would be kind of like joins between tables in the database sense.
Dialogue: 0,0:05:36.26,0:05:37.95,yin,,0,0,0,,取回属性是一种\N{\fs12}Fetch properties are kind of a
Dialogue: 0,0:05:37.95,0:05:41.71,yin,,0,0,0,,精密筹划的方式 得到一个指针指向其它属性\N{\fs12}calculated way to have a pointer to some other properties.
Dialogue: 0,0:05:41.73,0:05:45.69,yin,,0,0,0,,这里出于时间考虑 我就不详细讲解取回属性了\N{\fs12}I just have to cut something for time, so we're not going to talk about fetch properties,
Dialogue: 0,0:05:45.70,0:05:48.76,yin,,0,0,0,,理解了取回的工作方式后 它们就会很好理解\N{\fs12}they're really not that complicated once you understand how fetching works,
Dialogue: 0,0:05:48.76,0:05:53.04,yin,,0,0,0,,这堂课比较靠后的时候我会讲到 到时候你们就懂了\N{\fs12}much later in this lecture then you'll kind of get the idea.
Dialogue: 0,0:05:53.04,0:05:55.17,yin,,0,0,0,,你们会知道取回属性是怎么回事\N{\fs12}Oh, I can see how maybe fetch properties would work
Dialogue: 0,0:05:55.17,0:05:56.87,yin,,0,0,0,,你们也可以去读说明文档\N{\fs12}and then you can read the documentation and figure it out.
Dialogue: 0,0:05:56.87,0:06:01.30,yin,,0,0,0,,数据模型就包含这些 实体 属性 关系\N{\fs12}So, that's what the data model consists of, entities, attributes, relationships.
Dialogue: 0,0:06:01.30,0:06:03.13,yin,,0,0,0,,这就是我们要讲的\N{\fs12}That's what we're going to talk about.
Dialogue: 0,0:06:03.13,0:06:05.77,yin,,0,0,0,,就今天的例子而言\N{\fs12}Let's, for our example today,
Dialogue: 0,0:06:05.77,0:06:09.51,yin,,0,0,0,,假设我们有一个类似于Shutterbug的程序\N{\fs12}let's say we had a Shutterbug-like application
Dialogue: 0,0:06:09.51,0:06:13.02,yin,,0,0,0,,它有照片和拍照者\N{\fs12}that had photos and photographers.
Dialogue: 0,0:06:13.02,0:06:16.72,yin,,0,0,0,,你们的作业是地点和照片\N{\fs12}So your homework is going to be more places and photos.
Dialogue: 0,0:06:16.72,0:06:20.09,yin,,0,0,0,,而我周三的演示和这里的幻灯片\N{\fs12}Our demo here, and the demo I do on Wednesday, and the slides,
Dialogue: 0,0:06:20.09,0:06:21.87,yin,,0,0,0,,则是照片和拍照者\N{\fs12}are going to be photos and photographers.
Dialogue: 0,0:06:21.87,0:06:23.78,yin,,0,0,0,,这就是数据库中的两个东西\N{\fs12}So those are the two things that are going to be in our database,
Dialogue: 0,0:06:23.78,0:06:25.17,yin,,0,0,0,,照片和拍照者\N{\fs12}photos and photographers.
Dialogue: 0,0:06:25.17,0:06:28.59,yin,,0,0,0,,让我们为照片创建一个实体\N{\fs12}So, let's create an entity for the photos.
Dialogue: 0,0:06:28.59,0:06:31.84,yin,,0,0,0,,点下面的添加实体 我们得到实体\N{\fs12}So we click add entity down there at the bottom and we get this entity.
Dialogue: 0,0:06:31.84,0:06:34.83,yin,,0,0,0,,名称从Entity换成Photo\N{\fs12}I'm going to change the name from entity to photo,
Dialogue: 0,0:06:34.83,0:06:38.04,yin,,0,0,0,,这将是数据库中我的照片对象\N{\fs12}so this is going to be my photo object in the database.
Dialogue: 0,0:06:38.04,0:06:42.09,yin,,0,0,0,,然后我可以添加属性到照片对象\N{\fs12}And then I can add attributes to my photo object by clicking
Dialogue: 0,0:06:42.09,0:06:45.28,yin,,0,0,0,,点击属性下方的+号就行了\N{\fs12}on that little plus underneath where it says attributes there.
Dialogue: 0,0:06:45.28,0:06:47.41,yin,,0,0,0,,添加了一个 默认叫attribute\N{\fs12}And when I add one, it adds one called attribute,
Dialogue: 0,0:06:47.41,0:06:49.75,yin,,0,0,0,,我要把这个名称改成title\N{\fs12}I'm going to change the name of that to title,
Dialogue: 0,0:06:49.75,0:06:52.70,yin,,0,0,0,,照片都有标题 因此这里用title\N{\fs12}so photos have a title, so I'm going to put a title in there.
Dialogue: 0,0:06:52.70,0:06:57.80,yin,,0,0,0,,注意到 这时右上方出现了红色的错误警告\N{\fs12}And you notice as I do this, I get an error, a little red error warning up there.
Dialogue: 0,0:06:57.80,0:06:58.57,yin,,0,0,0,,为什么会这样\N{\fs12}Why is that?
Dialogue: 0,0:06:58.57,0:07:02.62,yin,,0,0,0,,这是因为 title的类型没有定义\N{\fs12}That's because the type of my title is undefined.
Dialogue: 0,0:07:02.62,0:07:06.14,yin,,0,0,0,,可以看到title旁边 它说类型未定义\N{\fs12}You see where it says type, undefined next to title there?
Dialogue: 0,0:07:06.14,0:07:07.25,yin,,0,0,0,,这是不允许的\N{\fs12}So that's not allowed.
Dialogue: 0,0:07:07.25,0:07:10.41,yin,,0,0,0,,你必须指定数据库中所有属性的类型\N{\fs12}You have to specify the type of all the properties
Dialogue: 0,0:07:10.41,0:07:13.82,yin,,0,0,0,,你可以点击这个未定义\N{\fs12}in your database, and so you just click on that undefined,
Dialogue: 0,0:07:13.82,0:07:17.28,yin,,0,0,0,,我选String 标题显然是字符串\N{\fs12}I'm going to set this one to be a string, the title, obviously, is a string.
Dialogue: 0,0:07:17.28,0:07:21.70,yin,,0,0,0,,看看除了字符串还可以是什么\N{\fs12}Now, what can some of these things be, besides strings?
Dialogue: 0,0:07:21.70,0:07:25.19,yin,,0,0,0,,还有数字 整数或是浮点数\N{\fs12}Well they can be numbers, either integers or floating point numbers,
Dialogue: 0,0:07:25.19,0:07:27.86,yin,,0,0,0,,这些都将数据库表示为…\N{\fs12}those are all representing the database as,
Dialogue: 0,0:07:27.86,0:07:30.54,yin,,0,0,0,,或者说在对象世界中 作为NSNumber\N{\fs12}in your object world rather, as NS numbers.
Dialogue: 0,0:07:30.54,0:07:35.42,yin,,0,0,0,,实际上 数据库中的所有属性\N{\fs12}All your properties, in fact, all the attributes in your objects in the database,
Dialogue: 0,0:07:35.42,0:07:38.04,yin,,0,0,0,,都是某种形式的对象\N{\fs12}all their properties are going to be objects of some sort.
Dialogue: 0,0:07:38.04,0:07:40.98,yin,,0,0,0,,如果是字符串 那就是NSString对象\N{\fs12}So NS string objects if their strings.
Dialogue: 0,0:07:40.98,0:07:43.72,yin,,0,0,0,,如果是整数 浮点数 双精度数字 布尔型数字\N{\fs12}NS numbers if they're integers, floats, or double,
Dialogue: 0,0:07:43.72,0:07:45.10,yin,,0,0,0,,那就是NSNumber\N{\fs12}or Booleans.
Dialogue: 0,0:07:45.10,0:07:47.42,yin,,0,0,0,,如果是日期 那就是NSDate\N{\fs12}NS date if they're dates.
Dialogue: 0,0:07:47.42,0:07:49.92,yin,,0,0,0,,如果是二进制数据 那就是NSData\N{\fs12}NS datas if they're binary data,
Dialogue: 0,0:07:49.92,0:07:51.24,yin,,0,0,0,,这是倒数第二个\N{\fs12}that's the second to the bottom.
Dialogue: 0,0:07:51.24,0:07:55.35,yin,,0,0,0,,Transformable这个很有趣 这些是NSData对象\N{\fs12}And then transformable is kind of an interesting one, those will be NS data objects,
Dialogue: 0,0:07:55.35,0:07:58.10,yin,,0,0,0,,它能提供一种可转换的对象\N{\fs12}which will provide a little transformable object
Dialogue: 0,0:07:58.10,0:08:00.34,yin,,0,0,0,,能将其转化为别的类型\N{\fs12}that will convert them to some other type,
Dialogue: 0,0:08:00.34,0:08:02.46,yin,,0,0,0,,甚至是struct这些\N{\fs12}like even a struct, or something like that,
Dialogue: 0,0:08:02.46,0:08:04.55,yin,,0,0,0,,我们不打算深究Transformable\N{\fs12}and we're not going to talk about transformables,
Dialogue: 0,0:08:04.55,0:08:07.96,yin,,0,0,0,,总之 可以在数据库中存储任何数据类型\N{\fs12}but it is possible to store really any data type in the database
Dialogue: 0,0:08:07.96,0:08:10.64,yin,,0,0,0,,只要提供的是Transformable对象\N{\fs12}as long as you provide a transformation object
Dialogue: 0,0:08:10.64,0:08:13.89,yin,,0,0,0,,它就能在NSData之间来回转换\N{\fs12}that will convert them back and forth between NS data.
Dialogue: 0,0:08:13.89,0:08:17.13,yin,,0,0,0,,这里title很简单 它是一个字符串\N{\fs12}So here, title is a simple one, it's a string,
Dialogue: 0,0:08:17.13,0:08:19.12,yin,,0,0,0,,这里我还要加其它一些属性\N{\fs12}I'm going to add a whole bunch of other attributes here
Dialogue: 0,0:08:19.12,0:08:21.94,yin,,0,0,0,,可以看到 现在这里没报错了\N{\fs12}that you kind of look, no more error there right now,
Dialogue: 0,0:08:21.94,0:08:23.82,yin,,0,0,0,,设成字符串后就没错误了\N{\fs12}that I set it as string there's no more error.
Dialogue: 0,0:08:23.82,0:08:25.27,yin,,0,0,0,,我再加一些\N{\fs12}If I add a whole bunch more,
Dialogue: 0,0:08:25.27,0:08:30.41,yin,,0,0,0,,我可以添加Flickr处获得的上传日期 这是日期\N{\fs12}you can see I've added an upload date that I got from Flickr, so that's a date.
Dialogue: 0,0:08:30.41,0:08:32.05,yin,,0,0,0,,甚至缩略图数据\N{\fs12}Even thumbnail data, so
Dialogue: 0,0:08:32.05,0:08:35.21,yin,,0,0,0,,假设我下载了缩略图数据\N{\fs12}let's say I downloaded the thumbnail
Dialogue: 0,0:08:35.21,0:08:38.66,yin,,0,0,0,,这是Flickr照片的缩略图的图像数据\N{\fs12}image data, the image data for a little thumbnail of my photo from Flickr,
Dialogue: 0,0:08:38.66,0:08:42.81,yin,,0,0,0,,我可以把这些数据存入数据库 作为NSData\N{\fs12}I can actually put that data in the database as an NS data.
Dialogue: 0,0:08:42.81,0:08:45.64,yin,,0,0,0,,有些人问 这里能放多大的NSData\N{\fs12}Some people ask, how big an NS data could I put in there?
Dialogue: 0,0:08:45.64,0:08:49.72,yin,,0,0,0,,我能放实际尺寸照片那么大的NSData吗\N{\fs12}For example, could I put an NS data that is the real photo, the big, you know,
Dialogue: 0,0:08:49.72,0:08:51.94,yin,,0,0,0,,例如上MB大的照片\N{\fs12}maybe a megabyte-size photo,
Dialogue: 0,0:08:51.94,0:08:54.99,yin,,0,0,0,,答案是 当然能\N{\fs12}and the answer is absolutely, you can put them in here,
Dialogue: 0,0:08:54.99,0:08:57.27,yin,,0,0,0,,其实 有个开关你可以开启\N{\fs12}in fact, there's a little switch that you can turn
Dialogue: 0,0:08:57.27,0:09:01.87,yin,,0,0,0,,明确你要存放大东西在这里 让其存到另一个文件\N{\fs12}on that says I'm going to put something big here, store it in another file.
Dialogue: 0,0:09:01.87,0:09:04.70,yin,,0,0,0,,就算是存储在SQL文件中\N{\fs12}But even if you store it in the sequel file,
Dialogue: 0,0:09:04.70,0:09:08.64,yin,,0,0,0,,通常也能处理 只是这不符合最佳实践 效率很低\N{\fs12}it can usually manage it, it's probably not the best, most efficient way to do it,
Dialogue: 0,0:09:08.64,0:09:13.31,yin,,0,0,0,,不过没错 你确实可以将很大的数据存到Core Data中\N{\fs12}but yes, you can store big data blobs in core data, as well.
Dialogue: 0,0:09:13.31,0:09:15.86,yin,,0,0,0,,这里是一些属性的例子\N{\fs12}So, there's some example attributes.
Dialogue: 0,0:09:15.86,0:09:17.99,yin,,0,0,0,,我们换种方式来看这个\N{\fs12}Let's look at this a different way.
Dialogue: 0,0:09:17.99,0:09:19.18,yin,,0,0,0,,看下面那里\N{\fs12}If you see down at the bottom there
Dialogue: 0,0:09:19.18,0:09:22.64,yin,,0,0,0,,那里有编辑样式 我点这个\N{\fs12}where it says editor style, right, I clicked on that
Dialogue: 0,0:09:22.64,0:09:26.43,yin,,0,0,0,,它展示的还是相同的东西 不过这次是以图像格式\N{\fs12}and it switched over to showing the same thing, but in a graphical format.
Dialogue: 0,0:09:26.43,0:09:28.05,yin,,0,0,0,,看 这里是我的照片实体\N{\fs12}So you see, here's my photo entity,
Dialogue: 0,0:09:28.05,0:09:30.99,yin,,0,0,0,,我可以看到属性 看到了吧 列在那里\N{\fs12}I can see the attributes, see them there, listed there?
Dialogue: 0,0:09:30.99,0:09:34.30,yin,,0,0,0,,我还是可以在这个视图中创建一个实体\N{\fs12}And I can still create an entity in this view, so I'm going
Dialogue: 0,0:09:34.30,0:09:36.72,yin,,0,0,0,,我来创建这个实体 也就是我的拍照者\N{\fs12}to create another entity, which is my photographer.
Dialogue: 0,0:09:36.72,0:09:42.07,yin,,0,0,0,,创建这个实体 名称改成Photographer\N{\fs12}I create that, entity, I'm going to change the name to photographer, it changes it.
Dialogue: 0,0:09:42.07,0:09:45.64,yin,,0,0,0,,我还可以在这个视图中添加属性\N{\fs12}I can also add attributes in this view.
Dialogue: 0,0:09:45.64,0:09:48.34,yin,,0,0,0,,我往下到这个按钮 添加属性\N{\fs12}So I just go down to this button here, add attribute,
Dialogue: 0,0:09:48.34,0:09:51.28,yin,,0,0,0,,这里添加属性 命名为name\N{\fs12}I'm going to add an attribute here and I'm going to call it name,
Dialogue: 0,0:09:51.29,0:09:53.77,yin,,0,0,0,,这是拍照者的名字\N{\fs12}so that's the name of the photographer.
Dialogue: 0,0:09:53.77,0:09:56.31,yin,,0,0,0,,你也可以编辑这些属性\N{\fs12}You can also edit these attributes,
Dialogue: 0,0:09:56.31,0:09:59.04,yin,,0,0,0,,在这个视图中 通过点击它们\N{\fs12}here in this view, by clicking on them.
Dialogue: 0,0:09:59.41,0:10:00.90,yin,,0,0,0,,点击名字\N{\fs12}Alright, by clicking on the name,
Dialogue: 0,0:10:00.91,0:10:04.70,yin,,0,0,0,,然后到上面这里的属性检查器来\N{\fs12}and then going up to this attributes inspector up here.
Dialogue: 0,0:10:04.70,0:10:09.23,yin,,0,0,0,,这就像是Xcode中另一个环境下的属性检查器\N{\fs12}So this is kind of like the attributes inspector in other environments inside of Xcode,
Dialogue: 0,0:10:09.23,0:10:10.57,yin,,0,0,0,,点击这个\N{\fs12}so if I click on that,
Dialogue: 0,0:10:10.57,0:10:14.30,yin,,0,0,0,,我就能够得到我的属性的一系列属性\N{\fs12}you can see I get a bunch of attributes of my attributes.
Dialogue: 0,0:10:14.30,0:10:17.88,yin,,0,0,0,,这是name这个 它有名称\N{\fs12}So here's the name one, and you can see there's the name of it
Dialogue: 0,0:10:17.88,0:10:20.68,yin,,0,0,0,,还有属性类型 这里是未定义\N{\fs12}and there's the attribute type, which you can see is undefined,
Dialogue: 0,0:10:20.68,0:10:22.70,yin,,0,0,0,,这就是上面显示有错误的原因\N{\fs12}that's why we have the error up there.
Dialogue: 0,0:10:22.70,0:10:24.12,yin,,0,0,0,,属性类型未定义\N{\fs12}It's the attribute type undefined.
Dialogue: 0,0:10:24.12,0:10:28.77,yin,,0,0,0,,点这个 在下拉列表中将未定义改为字符串\N{\fs12}So I'm going to click on that popup right there and change that undefined to be string.
Dialogue: 0,0:10:28.77,0:10:31.20,yin,,0,0,0,,拍照者的名字也是字符串\N{\fs12}The photographers name is also a string.
Dialogue: 0,0:10:31.20,0:10:32.60,yin,,0,0,0,,我们于是有了这个\N{\fs12}So we got that.
Dialogue: 0,0:10:32.60,0:10:35.62,yin,,0,0,0,,我还可以在这些对象之间创建关系\N{\fs12}I can also create relationships between these objects,
Dialogue: 0,0:10:35.62,0:10:39.44,yin,,0,0,0,,照片和拍照者 很明显这两者具有关系\N{\fs12}photos and photographers, clearly a photo and a photographer have a relationship.
Dialogue: 0,0:10:39.44,0:10:41.46,yin,,0,0,0,,拍照者拍出照片\N{\fs12}A photographer takes photos.
Dialogue: 0,0:10:41.46,0:10:43.17,yin,,0,0,0,,照片是拍照者拍的\N{\fs12}A photo is taken by a photographer.
Dialogue: 0,0:10:43.17,0:10:47.36,yin,,0,0,0,,要创建它们之间的关系 我可以control拖动\N{\fs12}So I can create relationships between them by control, dragging,
Dialogue: 0,0:10:47.36,0:10:50.47,yin,,0,0,0,,我们很喜欢在Xcode中这样做 control拖动\N{\fs12}that's how we like to do things in Xcode, we control, drag.
Dialogue: 0,0:10:50.47,0:10:53.66,yin,,0,0,0,,在照片和拍照者之间control拖动\N{\fs12}So I'm going to control, drag between the photo and the photographer.
Dialogue: 0,0:10:53.66,0:10:57.32,yin,,0,0,0,,这就能够在它们之间创造新的关系\N{\fs12}And it's going to create this new relationship between them.
Dialogue: 0,0:10:57.32,0:11:01.16,yin,,0,0,0,,这个关系将在两侧具有不同的名称\N{\fs12}Now, the relationship will have a different name on each side.
Dialogue: 0,0:11:01.16,0:11:03.56,yin,,0,0,0,,在照片这一侧 我们称这个关系为\N{\fs12}On the photo side, we're going to call this relationship
Dialogue: 0,0:11:03.56,0:11:08.60,yin,,0,0,0,,whoTook 意思是照片是谁拍的\N{\fs12}who took, because this relationship is for the photo, who took it.
Dialogue: 0,0:11:08.60,0:11:11.31,yin,,0,0,0,,而拍照者一侧 我们则称之为photos\N{\fs12}And on the photographer side, we're going to call it photos,
Dialogue: 0,0:11:11.31,0:11:16.08,yin,,0,0,0,,因为一个拍照者可能会拍多张照片 所以称之为photos\N{\fs12}because a photographer can take multiple photos, so we'll call it photos.
Dialogue: 0,0:11:16.08,0:11:18.03,yin,,0,0,0,,这是相同的关系\N{\fs12}So this is the same relationship,
Dialogue: 0,0:11:18.03,0:11:21.47,yin,,0,0,0,,不过它在这两个对象上各有一个属性\N{\fs12}but it's going to have a property on each of these two objects,
Dialogue: 0,0:11:21.47,0:11:23.91,yin,,0,0,0,,在照片和拍照者两侧有所不同\N{\fs12}photos and photographers, it's a little different.
Dialogue: 0,0:11:23.91,0:11:26.56,yin,,0,0,0,,注意 在拍照者这一侧看来\N{\fs12}Now, notice that from a photographer's standpoint,
Dialogue: 0,0:11:26.56,0:11:29.22,yin,,0,0,0,,这个关系不是一一对应的\N{\fs12}this relationship is not just a one-to-one,
Dialogue: 0,0:11:29.22,0:11:31.77,yin,,0,0,0,,因为拍照者可以照多张照片\N{\fs12}because a photographer can take multiple photos,
Dialogue: 0,0:11:31.77,0:11:35.04,yin,,0,0,0,,在照片的检查器中可以看到 对于拍照者\N{\fs12}and you can see them in the inspector for photos, on photographer,
Dialogue: 0,0:11:35.04,0:11:37.55,yin,,0,0,0,,这里有个类型说To One(对一)\N{\fs12}there's a type that says to 1.
Dialogue: 0,0:11:37.55,0:11:40.29,yin,,0,0,0,,这意味着照片只有一个拍照者\N{\fs12}That means it's a 1 to 1, relationship.
Dialogue: 0,0:11:40.29,0:11:44.46,yin,,0,0,0,,我可以把这改成To Many(对多) 这样做之后\N{\fs12}I can actually change that to to many, and when I do that,
Dialogue: 0,0:11:44.46,0:11:49.49,yin,,0,0,0,,箭头的这一边变成了双箭头\N{\fs12}you're going to see that I get a double arrow head, on that side of the pointer there,
Dialogue: 0,0:11:49.49,0:11:53.06,yin,,0,0,0,,这是说一个拍照者可以拍多张照片\N{\fs12}that's saying a photographer can have multiple photos.
Dialogue: 0,0:11:53.06,0:11:55.95,yin,,0,0,0,,我们讲了 标题是字符串\N{\fs12}Now, we talked about how title is a string
Dialogue: 0,0:11:55.95,0:12:01.39,yin,,0,0,0,,上传日期是日期 那whoTook和photos又是什么类型呢\N{\fs12}and upload date is a date, what type is who took and photos?
Dialogue: 0,0:12:01.39,0:12:02.29,yin,,0,0,0,,是什么类型\N{\fs12}What type are those?
Dialogue: 0,0:12:02.29,0:12:06.76,yin,,0,0,0,,它们也是这些对象的属性 但它们的类型是什么\N{\fs12}Because they're just properties, as well, of these objects, but what's their type?
Dialogue: 0,0:12:06.76,0:12:13.85,yin,,0,0,0,,像photos这样对多的 实际上是NSSet\N{\fs12}And it turns out that something like photos, which is a to many, is an NS set.
Dialogue: 0,0:12:13.85,0:12:15.84,yin,,0,0,0,,这就是它的类型\N{\fs12}That's going to be its type.
Dialogue: 0,0:12:15.84,0:12:19.65,yin,,0,0,0,,就像title是NSString一样 photos是NSSet\N{\fs12}Just like title is a NS string, photos is an NS set.
Dialogue: 0,0:12:19.65,0:12:21.18,yin,,0,0,0,,whoTook呢\N{\fs12}What about who took?
Dialogue: 0,0:12:21.18,0:12:25.81,yin,,0,0,0,,whoTook实际上是NSManagedObject\N{\fs12}Who took turns out to be a NS-managed object star,
Dialogue: 0,0:12:25.81,0:12:28.83,yin,,0,0,0,,它是指向NSManagedObject的指针\N{\fs12}so it's a pointer to an NS-managed object.
Dialogue: 0,0:12:28.83,0:12:34.08,yin,,0,0,0,,NSManagedObject是数据库中所有对象的超类\N{\fs12}NS-managed object is the super class for all objects in the database,
Dialogue: 0,0:12:34.08,0:12:37.30,yin,,0,0,0,,照片是NSManagedObject\N{\fs12}okay, so photo is going to be an NS managed-object,
Dialogue: 0,0:12:37.31,0:12:39.59,yin,,0,0,0,,拍照者也是NSManagedObject\N{\fs12}a photographer is going to be a NS-managed object.
Dialogue: 0,0:12:39.59,0:12:41.35,yin,,0,0,0,,在Objective-C代码中\N{\fs12}In our objective C code, they're all going
Dialogue: 0,0:12:41.35,0:12:44.60,yin,,0,0,0,,它们都是NSManagedObject 显然whoTook指针\N{\fs12}to be NS-managed objects, so, of course, the who took pointer,
Dialogue: 0,0:12:44.60,0:12:46.28,yin,,0,0,0,,作为指向拍照者的指针\N{\fs12}which is a pointer to a photographer,
Dialogue: 0,0:12:46.28,0:12:48.60,yin,,0,0,0,,肯定会是NSManagedObject\N{\fs12}is going to be an NS-managed object star,
Dialogue: 0,0:12:48.60,0:12:51.10,yin,,0,0,0,,我们会看到如何创建NSManagedObject的子类\N{\fs12}and we're going to see how we can subclass NS-managed object
Dialogue: 0,0:12:51.10,0:12:53.63,yin,,0,0,0,,添加所有这些属性 等等\N{\fs12}to add all these properties, and all this stuff,
Dialogue: 0,0:12:53.63,0:12:57.19,yin,,0,0,0,,那时它将是Photographer* 总之 whoTook就是这样\N{\fs12}and then it would be a photographer star, but that's what who took is.
Dialogue: 0,0:12:57.19,0:12:59.38,yin,,0,0,0,,它不过就是一个指针而已\N{\fs12}It's going to be exactly what you would expect, it's a pointer
Dialogue: 0,0:12:59.38,0:13:02.02,yin,,0,0,0,,指向另一个对象\N{\fs12}to an object, which is that other object.
Dialogue: 0,0:13:05.02,0:13:07.37,yin,,0,0,0,,这里有个删除规则\N{\fs12}This little delete rule right there, I'm not going
Dialogue: 0,0:13:07.37,0:13:09.35,yin,,0,0,0,,我不打算细讲\N{\fs12}to go into detail about this,
Dialogue: 0,0:13:09.35,0:13:13.36,yin,,0,0,0,,删除规则明确了 删除拍照者后 whoTook会怎样\N{\fs12}but the delete rule specifies what to do to who took, okay,
Dialogue: 0,0:13:13.36,0:13:15.21,yin,,0,0,0,,这是photos的删除规则\N{\fs12}this is the delete rule for photos,
Dialogue: 0,0:13:15.21,0:13:17.98,yin,,0,0,0,,看到这里是photos 这个删除规则说\N{\fs12}you see I'm inspecting photos there, this is the delete rule
Dialogue: 0,0:13:17.98,0:13:22.52,yin,,0,0,0,,如果我删除了一个拍照者 whoTook会怎样\N{\fs12}that says if I delete a photographer, what happens to who took?
Dialogue: 0,0:13:22.52,0:13:24.95,yin,,0,0,0,,whoTook是一个指向拍照者的指针\N{\fs12}Because who took was pointing to this photographer
Dialogue: 0,0:13:24.95,0:13:27.14,yin,,0,0,0,,如果我从数据库中删除了拍照者\N{\fs12}and if I delete that photographer from the database,
Dialogue: 0,0:13:27.14,0:13:29.82,yin,,0,0,0,,这里的删除规则是nullify\N{\fs12}and the answer here, this delete rule is nullify,
Dialogue: 0,0:13:29.82,0:13:32.28,yin,,0,0,0,,也就是whoTook会被设为nil\N{\fs12}which means who took would be set to nil.
Dialogue: 0,0:13:32.28,0:13:36.86,yin,,0,0,0,,这里还有其它规则 例如cascade\N{\fs12}But there are other rules, for example, cascade,
Dialogue: 0,0:13:36.86,0:13:39.43,yin,,0,0,0,,也就是说 删除拍照者时\N{\fs12}which means delete, when you delete the photographer,
Dialogue: 0,0:13:39.43,0:13:42.23,yin,,0,0,0,,它指向的所有照片也都删除\N{\fs12}delete every single photo that it points to.
Dialogue: 0,0:13:42.23,0:13:45.20,yin,,0,0,0,,cascade会把数据库中相关内容删干净\N{\fs12}Cascade the delete throughout the database.
Dialogue: 0,0:13:45.20,0:13:47.18,yin,,0,0,0,,你需要知道这里是什么情况\N{\fs12}So, you really want to know what you're doing here.
Dialogue: 0,0:13:47.18,0:13:49.84,yin,,0,0,0,,最安全的通常是nullify 将指针指向nil\N{\fs12}The safest one is usually nullify, set things to nil,
Dialogue: 0,0:13:49.84,0:13:52.37,yin,,0,0,0,,如果指针指向nil时 你的数据库没有意义\N{\fs12}but if your database doesn't make sense if a pointer points to nil,
Dialogue: 0,0:13:52.37,0:13:55.38,yin,,0,0,0,,这里你可能就需要更复杂的删除规则了\N{\fs12}you might need more complicated delete rules there,
Dialogue: 0,0:13:55.38,0:13:59.31,yin,,0,0,0,,不过在作业中 你们不需要考虑更复杂的东西\N{\fs12}but, in your homework, you won't need anything more complicated than that.
Dialogue: 0,0:13:59.31,0:14:05.18,yin,,0,0,0,,这就是在对象和数据库之间建立映射的方式\N{\fs12}So that's basically how we build this map between objects and the database.
Dialogue: 0,0:14:05.18,0:14:08.68,yin,,0,0,0,,有了这个映射之后 你就能做很多事情\N{\fs12}So, there's a lot of things that you can do once you have this map.
Dialogue: 0,0:14:08.68,0:14:12.40,yin,,0,0,0,,我们将聚焦于创建实体 属性\N{\fs12}We're going to focus on the creating entities, attributes,
Dialogue: 0,0:14:12.40,0:14:15.35,yin,,0,0,0,,和关系 然后设定它们的属性\N{\fs12}and relationships, and then setting their attributes
Dialogue: 0,0:14:15.35,0:14:17.53,yin,,0,0,0,,然后为它们进行查询 等等\N{\fs12}and then querying for them and things like that.
Dialogue: 0,0:14:17.53,0:14:19.57,yin,,0,0,0,,总之 Core Data中 你能做的事很多\N{\fs12}But there's a lot of other things you can do in core data,
Dialogue: 0,0:14:19.57,0:14:22.55,yin,,0,0,0,,我在最后会提到一些 如果有兴趣\N{\fs12}I'll mention some of them at the end and you can go read up on it
Dialogue: 0,0:14:22.55,0:14:25.53,yin,,0,0,0,,你也可以去进一步了解\N{\fs12}if you want to do more sophisticated database things.
Dialogue: 0,0:14:25.53,0:14:30.10,yin,,0,0,0,,创建了这个映射之后 如何访问代码中的这些东西呢\N{\fs12}So, how do we access all of this stuff in our code, once we've created this map?
Dialogue: 0,0:14:30.10,0:14:34.43,yin,,0,0,0,,答案是 我们需要一个NSManagedObjectContext\N{\fs12}And the answer is we need an NS-managed object context.
Dialogue: 0,0:14:34.43,0:14:36.19,yin,,0,0,0,,NSManagedObjectContext\N{\fs12}An NS-managed object context.
Dialogue: 0,0:14:36.19,0:14:39.87,yin,,0,0,0,,这个context就是我们所需的衔接\N{\fs12}This context is kind of the hook we need
Dialogue: 0,0:14:39.87,0:14:44.61,yin,,0,0,0,,无论是在数据库中创建对象 设置对象属性\N{\fs12}to go create objects in the database, set attributes of objects in the database,
Dialogue: 0,0:14:44.61,0:14:48.13,yin,,0,0,0,,还是查询对象 都需要通过这个context\N{\fs12}query for objects for the database, we all do these through this context.
Dialogue: 0,0:14:48.13,0:14:50.04,yin,,0,0,0,,如何获得一个context呢\N{\fs12}So, how do we get a context?
Dialogue: 0,0:14:50.04,0:14:52.03,yin,,0,0,0,,做法有两种\N{\fs12}Well, there's really two ways to do it.
Dialogue: 0,0:14:52.03,0:14:57.35,yin,,0,0,0,,一是使用UIManagedDocument这个类\N{\fs12}One is you use this class UI managed object, which I'm, or managed document rather,
Dialogue: 0,0:14:57.35,0:14:59.06,yin,,0,0,0,,这个我会讲到\N{\fs12}which I'm going to talk about.
Dialogue: 0,0:14:59.06,0:15:01.69,yin,,0,0,0,,另一种做法我不打算讲\N{\fs12}And the second way, which I'm not going to talk about,
Dialogue: 0,0:15:01.69,0:15:05.13,yin,,0,0,0,,也就是alloc init一个NSManagedObjectContext\N{\fs12}is that you can alloc init a NS-managed object context.
Dialogue: 0,0:15:05.13,0:15:06.90,yin,,0,0,0,,我不打算讲它的原因在于\N{\fs12}The reason I'm not going to talk about it is,
Dialogue: 0,0:15:06.90,0:15:10.31,yin,,0,0,0,,你需要对context及其工作方式有一定了解\N{\fs12}you got to know a little bit about context and how they work
Dialogue: 0,0:15:10.31,0:15:13.10,yin,,0,0,0,,知道它们如何保证线程安全这些\N{\fs12}and how they do thread safety and things like that,
Dialogue: 0,0:15:13.10,0:15:15.33,yin,,0,0,0,,这些我不打算详细讲解\N{\fs12}that I really don't want to get into the details of,
Dialogue: 0,0:15:15.33,0:15:19.04,yin,,0,0,0,,UIManagedDocument为我们处理好了所有这些\N{\fs12}and that UI-managed document takes care of it all for us.
Dialogue: 0,0:15:19.04,0:15:22.31,yin,,0,0,0,,因此 我只打算讲解UIManagedDocument这种做法\N{\fs12}So that's why I'm going to focus on the UI-managed document way.
Dialogue: 0,0:15:22.31,0:15:24.52,yin,,0,0,0,,如果你想了解如何\N{\fs12}If you want to see how the way
Dialogue: 0,0:15:24.52,0:15:26.76,yin,,0,0,0,,alloc init一个NSManagedObjectContext…\N{\fs12}of alloc initing an NS-managed object context,
Dialogue: 0,0:15:26.76,0:15:29.06,yin,,0,0,0,,要知道 这会变得非常复杂\N{\fs12}because there's more then that you need to do, like you've got
Dialogue: 0,0:15:29.06,0:15:32.00,yin,,0,0,0,,你需要指定文件在哪 持久性存储在哪\N{\fs12}to specify where the file is, the persistent store for it,
Dialogue: 0,0:15:32.00,0:15:34.63,yin,,0,0,0,,你需要把这个映射进来\N{\fs12}you got to get this map into the picture.
Dialogue: 0,0:15:34.63,0:15:38.49,yin,,0,0,0,,不使用UIManagedDocument的话 这些都需要手动去做\N{\fs12}All that stuff you'd have to do manually if you don't use UI-managed document.
Dialogue: 0,0:15:38.49,0:15:40.38,yin,,0,0,0,,如果你在创建一个新项目时\N{\fs12}If you go when creating a new project
Dialogue: 0,0:15:40.38,0:15:44.03,yin,,0,0,0,,说master/detail 而不是单个视图控制器\N{\fs12}and say master detail instead of single view controller,
Dialogue: 0,0:15:44.03,0:15:46.66,yin,,0,0,0,,会有一个按钮说 使用Core Data\N{\fs12}it'll actually have a button that says use core data
Dialogue: 0,0:15:46.66,0:15:49.23,yin,,0,0,0,,创建这个新的之后 你就会看到很多\N{\fs12}and when you create that new one, you'll see a whole bunch
Dialogue: 0,0:15:49.23,0:15:53.13,yin,,0,0,0,,Core Data代码 来处理所有这些工作\N{\fs12}of core data code that does all this business in there.
Dialogue: 0,0:15:53.13,0:15:55.63,yin,,0,0,0,,不过 你没必要去看那个\N{\fs12}But, there's no need for you to go look at that,
Dialogue: 0,0:15:55.63,0:16:00.54,yin,,0,0,0,,UIManagedDocument能更简洁地让你得到一个\N{\fs12}UI-managed document is a much simpler, cleaner way to get yourself a UI,
Dialogue: 0,0:16:00.54,0:16:04.06,yin,,0,0,0,,NSManagedObjectContext 这正是我们想要的\N{\fs12}or an NS-managed object context, which is what we're trying to do.
Dialogue: 0,0:16:04.06,0:16:07.47,yin,,0,0,0,,我们下面详细讲讲UIManagedDocument\N{\fs12}So let's talk about UI-managed document and how that works.
Dialogue: 0,0:16:07.47,0:16:10.00,yin,,0,0,0,,它继承自一个叫作UIDocument的类\N{\fs12}It inherits from a class called UI document.
Dialogue: 0,0:16:10.00,0:16:15.63,yin,,0,0,0,,UIDocument是一系列用于管理存储的机制\N{\fs12}UI document is a whole bunch of mechanism for managing some storage.
Dialogue: 0,0:16:15.63,0:16:17.04,yin,,0,0,0,,UIManagedDocument\N{\fs12}UI-managed document
Dialogue: 0,0:16:17.04,0:16:20.11,yin,,0,0,0,,将Core Data数据库放入某存储空间\N{\fs12}puts a core data database in some storage.
Dialogue: 0,0:16:20.11,0:16:23.17,yin,,0,0,0,,因此 你是在管理Core Data数据库的存储\N{\fs12}So you're managing the storage of your core data database,
Dialogue: 0,0:16:23.17,0:16:26.72,yin,,0,0,0,,你可以这样考虑UIManagedDocument\N{\fs12}so you can think of UI-managed document as just like a thing
Dialogue: 0,0:16:26.72,0:16:29.72,yin,,0,0,0,,它为你容纳你的Core Data数据库\N{\fs12}that contains your core data database for you.
Dialogue: 0,0:16:29.72,0:16:33.99,yin,,0,0,0,,你所做的只是打开或存储\N{\fs12}And all you ever really do is open, or save,
Dialogue: 0,0:16:34.00,0:16:36.77,yin,,0,0,0,,或者说 打开或创建一个UIManagedDocument\N{\fs12}or open or create, a UI-managed document
Dialogue: 0,0:16:36.77,0:16:38.98,yin,,0,0,0,,然后抓取它的ManagedObjectContext\N{\fs12}and then grab its managed object context,
Dialogue: 0,0:16:38.98,0:16:40.77,yin,,0,0,0,,然后用它来做数据库\N{\fs12}and then use it to do your database.
Dialogue: 0,0:16:40.77,0:16:41.65,yin,,0,0,0,,就是这样了\N{\fs12}That's it.
Dialogue: 0,0:16:41.65,0:16:43.46,yin,,0,0,0,,这就是我们要讲的\N{\fs12}So that's what we're going to talk about.
Dialogue: 0,0:16:43.46,0:16:46.69,yin,,0,0,0,,如何打开或创建一个UIManagedDocument\N{\fs12}How to open, or create, a UI-managed document,
Dialogue: 0,0:16:46.69,0:16:49.32,yin,,0,0,0,,并获得它的ManagedObjectContext 然后再回头\N{\fs12}and then get its managed object context and we'll dive back
Dialogue: 0,0:16:49.32,0:16:52.61,yin,,0,0,0,,考虑有了context 如何做Core Data\N{\fs12}into now that we have a context, how do we do core data?
Dialogue: 0,0:16:52.61,0:16:55.86,yin,,0,0,0,,这就是创建UIManagedDocument的方式\N{\fs12}So here's how you create a UI-managed document.
Dialogue: 0,0:16:55.86,0:16:56.85,yin,,0,0,0,,使用alloc init\N{\fs12}You alloc init it.
Dialogue: 0,0:16:56.85,0:17:01.07,yin,,0,0,0,,它的指定初始化器是initWithFileURL\N{\fs12}Its designated initializer is init with file URL,
Dialogue: 0,0:17:01.07,0:17:02.74,yin,,0,0,0,,你需要给它一个URL\N{\fs12}you have to give it the URL
Dialogue: 0,0:17:02.74,0:17:06.66,yin,,0,0,0,,这是这个Core Data数据库存储的地方\N{\fs12}where this core data database is going to be stored.
Dialogue: 0,0:17:06.66,0:17:11.97,yin,,0,0,0,,在黄色代码前面 我还写有四行白色代码\N{\fs12}I've put these four lines of code that are in white, that are before the yellow here,
Dialogue: 0,0:17:11.97,0:17:13.03,yin,,0,0,0,,它们描述的是\N{\fs12}they describe how
Dialogue: 0,0:17:13.03,0:17:15.97,yin,,0,0,0,,如何在用户文档目录中\N{\fs12}you would create a document called My Document
Dialogue: 0,0:17:15.98,0:17:19.07,yin,,0,0,0,,创建一个叫作MyDocument的文档\N{\fs12}in the users documents directory.
Dialogue: 0,0:17:19.07,0:17:23.28,yin,,0,0,0,,我们还没有谈到过存储文件 对吧\N{\fs12}So when you're, we haven't really talked about storing files, right?
Dialogue: 0,0:17:23.28,0:17:27.67,yin,,0,0,0,,之前讲的内容都没有涉及到文件系统\N{\fs12}We haven't accessed the file system at all, in anything we've ever done.
Dialogue: 0,0:17:27.67,0:17:30.13,yin,,0,0,0,,这需要通过这个类 NSFileManager(文件管理器)\N{\fs12}We do this with this class NS file manager.
Dialogue: 0,0:17:30.13,0:17:32.72,yin,,0,0,0,,这一周我不打算讲这个\N{\fs12}I'm not really going to cover that this week.
Dialogue: 0,0:17:32.72,0:17:36.48,yin,,0,0,0,,只需要知道 文件管理器能够\N{\fs12}Suffice it to say the file manager can give you the URL
Dialogue: 0,0:17:36.48,0:17:39.23,yin,,0,0,0,,给你用户文件目录的URL\N{\fs12}of the documents directory, for the user,
Dialogue: 0,0:17:39.23,0:17:41.42,yin,,0,0,0,,这就是第二行代码\N{\fs12}that's what the second line of code there is,
Dialogue: 0,0:17:41.42,0:17:45.50,yin,,0,0,0,,然后你可以附加上你想要的文档名\N{\fs12}and then you can just append whatever you want the name of your document to be,
Dialogue: 0,0:17:45.50,0:17:48.05,yin,,0,0,0,,例如 MyDocument 或是FlickrDatabase\N{\fs12}like my document or Flickr database,
Dialogue: 0,0:17:48.05,0:17:49.76,yin,,0,0,0,,或是别的什么\N{\fs12}or whatever you would want to call it.
Dialogue: 0,0:17:49.76,0:17:53.68,yin,,0,0,0,,这将是为你存储这一Core Data数据库的URL\N{\fs12}This is going to be the URL where it's going to put that core data database for you.
Dialogue: 0,0:17:53.68,0:17:55.36,yin,,0,0,0,,有了URL以后\N{\fs12}So now you have the URL,
Dialogue: 0,0:17:55.36,0:17:59.43,yin,,0,0,0,,你就可以用alloc init创建一个UIManagedDocument\N{\fs12}you just say alloc init to create a UI-managed document.
Dialogue: 0,0:17:59.43,0:18:01.97,yin,,0,0,0,,不过UIManagedDocument\N{\fs12}So, this UI-managed document though,
Dialogue: 0,0:18:01.97,0:18:03.38,yin,,0,0,0,,你只是alloc init了\N{\fs12}you've only alloc init it,
Dialogue: 0,0:18:03.38,0:18:05.74,yin,,0,0,0,,你还没有把它创建到磁盘上\N{\fs12}you haven't actually created it on disk.
Dialogue: 0,0:18:05.74,0:18:08.47,yin,,0,0,0,,它还不存在于磁盘上\N{\fs12}It doesn't exist on disc yet.
Dialogue: 0,0:18:08.47,0:18:12.70,yin,,0,0,0,,我们需要做些工作 让它存在于磁盘上\N{\fs12}So, we've got some work to do to make this thing exist on disc,
Dialogue: 0,0:18:12.70,0:18:14.03,yin,,0,0,0,,怎么做呢\N{\fs12}and how do we do that?
Dialogue: 0,0:18:14.03,0:18:19.08,yin,,0,0,0,,如果它不存在 我们就需要创建它\N{\fs12}Well, we have to create it if it doesn't exist,
Dialogue: 0,0:18:19.08,0:18:21.83,yin,,0,0,0,,如果它存在 我们就需要打开它\N{\fs12}and we have to open it if it does exist.
Dialogue: 0,0:18:21.83,0:18:23.92,yin,,0,0,0,,换言之 我们之前用过它\N{\fs12}In other words, we've used it before.
Dialogue: 0,0:18:23.92,0:18:26.48,yin,,0,0,0,,要弄清它是否存在于磁盘上\N{\fs12}So to find out whether it exists on disc,
Dialogue: 0,0:18:26.48,0:18:30.42,yin,,0,0,0,,我们需要这个文件管理器的方法 fileExistsAtPath\N{\fs12}we have to do this file manager thing, fileExistsAtPath.
Dialogue: 0,0:18:30.42,0:18:32.51,yin,,0,0,0,,我们有了URL 你说\N{\fs12}So you have the URL to it, you say,
Dialogue: 0,0:18:32.51,0:18:34.25,yin,,0,0,0,,NSFileManager defaultManager\N{\fs12}NS file manager default manager,
Dialogue: 0,0:18:34.25,0:18:35.89,yin,,0,0,0,,这就像是一个共享的文件管理器\N{\fs12}that's like a shared file manager.
Dialogue: 0,0:18:35.89,0:18:36.87,yin,,0,0,0,,fileExistsAtPath\N{\fs12}fileExistsAtPath,
Dialogue: 0,0:18:36.87,0:18:39.69,yin,,0,0,0,,它会返回一个布尔值 关于文件是否存在\N{\fs12}it returns a Boolean whether the file already exists.
Dialogue: 0,0:18:39.69,0:18:42.30,yin,,0,0,0,,如果文件存在\N{\fs12}If it does exist, in other words the file exists,
Dialogue: 0,0:18:42.30,0:18:44.17,yin,,0,0,0,,那么我们就会打开它\N{\fs12}then we're going to open it, and the way we're going
Dialogue: 0,0:18:44.17,0:18:46.58,yin,,0,0,0,,这要使用UIManagedDocument方法\N{\fs12}to open it is with the UI-managed document method
Dialogue: 0,0:18:46.58,0:18:48.73,yin,,0,0,0,,openWithCompletionHandler\N{\fs12}open with completion handler.
Dialogue: 0,0:18:50.10,0:18:51.39,yin,,0,0,0,,如果不存在\N{\fs12}If it doesn't exist,
Dialogue: 0,0:18:51.39,0:18:56.74,yin,,0,0,0,,那么我们将要创建文档到磁盘上 使用saveToURL\N{\fs12}then we're going to create that document on disc with save to URL.
Dialogue: 0,0:18:56.74,0:18:58.18,yin,,0,0,0,,forSaveOperation\N{\fs12}For save operation,
Dialogue: 0,0:18:58.18,0:19:00.85,yin,,0,0,0,,UIDocumentSaveForCreating是这里的参数\N{\fs12}UI document save for creating is the argument we want there,
Dialogue: 0,0:19:00.85,0:19:04.55,yin,,0,0,0,,因为我们在创建这个文件 competionHandler\N{\fs12}because we're creating this file, completion handler.
Dialogue: 0,0:19:04.55,0:19:07.67,yin,,0,0,0,,competionHandler是搞什么的\N{\fs12}What's that completion handler business all about?
Dialogue: 0,0:19:07.67,0:19:11.80,yin,,0,0,0,,为什么这些打开和保存… 这里说是保存到URL\N{\fs12}Okay, why do these open and save and create this, it says save
Dialogue: 0,0:19:11.80,0:19:14.43,yin,,0,0,0,,实际上则是在URL处创建\N{\fs12}to URL, but really it's create at URL.
Dialogue: 0,0:19:14.43,0:19:16.96,yin,,0,0,0,,为什么有这个competionHandler\N{\fs12}Why do they have this completion handler?
Dialogue: 0,0:19:16.96,0:19:20.52,yin,,0,0,0,,因为这些是异步的\N{\fs12}Well, it's because these are asynchronous.
Dialogue: 0,0:19:20.52,0:19:23.69,yin,,0,0,0,,这两个方法 打开和创建\N{\fs12}These two methods open and create, basically,
Dialogue: 0,0:19:23.69,0:19:26.37,yin,,0,0,0,,是异步的 并不立刻发生\N{\fs12}are asynchronous, they don't happen immediately.
Dialogue: 0,0:19:26.37,0:19:32.01,yin,,0,0,0,,当你请UIManagedDocument为你打开或是创建什么时\N{\fs12}When you ask the UI-managed document please open this or please create this for me,
Dialogue: 0,0:19:32.01,0:19:34.22,yin,,0,0,0,,它可能会需要一些时间\N{\fs12}it might take it a little bit of time.
Dialogue: 0,0:19:34.22,0:19:36.33,yin,,0,0,0,,为什么要时间呢\N{\fs12}Why might it take some time?
Dialogue: 0,0:19:36.33,0:19:38.67,yin,,0,0,0,,要时间的原因可能是\N{\fs12}Well, it's possible it could take some time
Dialogue: 0,0:19:38.67,0:19:41.35,yin,,0,0,0,,文件系统需要一定时间 不过\N{\fs12}because the file system takes a certain amount of time, but,
Dialogue: 0,0:19:41.35,0:19:43.87,yin,,0,0,0,,这里还涉及到其它我们不会讨论的东西\N{\fs12}yeah, there's other things involved that we're not going to talk about,
Dialogue: 0,0:19:43.89,0:19:46.33,yin,,0,0,0,,例如iCloud 它可能需要\N{\fs12}like iCloud, where maybe it needs
Dialogue: 0,0:19:46.33,0:19:49.92,yin,,0,0,0,,检查一些网络缓存或别的什么\N{\fs12}to go check something with some network cache or something
Dialogue: 0,0:19:49.92,0:19:56.01,yin,,0,0,0,,因为这个文档将要到iCloud上 到其它设备上\N{\fs12}like that, because this document is going to be on iCloud, okay, in other devices.
Dialogue: 0,0:19:56.01,0:19:59.64,yin,,0,0,0,,在Core Data数据库中使用UIManagedDocument\N{\fs12}Now, one great thing about UI-managed document and using that
Dialogue: 0,0:19:59.64,0:20:04.66,yin,,0,0,0,,一大好处就在于 你处在通往iCloud的快通道上\N{\fs12}to do your core data database, is you're on the fast-track to iCloud.
Dialogue: 0,0:20:04.66,0:20:07.25,yin,,0,0,0,,iCloud更容易 更直接\N{\fs12}iCloud much easier, more straightforward
Dialogue: 0,0:20:07.25,0:20:09.54,yin,,0,0,0,,只要你使用UIManagedDocument\N{\fs12}if you just start with UI-managed document.
Dialogue: 0,0:20:09.54,0:20:12.10,yin,,0,0,0,,不过你们只需要知道 这两个东西\N{\fs12}But anyway, suffice it to say, these two things,
Dialogue: 0,0:20:12.10,0:20:15.16,yin,,0,0,0,,打开文档和创建文档 是异步的\N{\fs12}opening a document and creating document, are asynchronous,
Dialogue: 0,0:20:15.16,0:20:19.02,yin,,0,0,0,,这意味着这个competionHandler 这一点小小的句法\N{\fs12}which means that completion handler, that little syntax there,
Dialogue: 0,0:20:19.02,0:20:21.95,yin,,0,0,0,,这个competionHandler会被调用\N{\fs12}but that completion handler gets called
Dialogue: 0,0:20:21.95,0:20:25.52,yin,,0,0,0,,回到你调用这些方法的线程上\N{\fs12}back on the thread you called these methods on,
Dialogue: 0,0:20:25.52,0:20:28.61,yin,,0,0,0,,也就是主线程 因为这是UIManagedDocument\N{\fs12}which has got to be the main thread because this is UI-managed document,
Dialogue: 0,0:20:28.61,0:20:31.25,yin,,0,0,0,,这是一个UIKit对象 这些方法的调用\N{\fs12}this is a UI kit object, you have to call these methods
Dialogue: 0,0:20:31.25,0:20:32.97,yin,,0,0,0,,需要在主线程 主队列上\N{\fs12}on the main thread, the main queue.
Dialogue: 0,0:20:32.97,0:20:34.96,yin,,0,0,0,,这个competionHandler\N{\fs12}So that completion handler
Dialogue: 0,0:20:34.96,0:20:38.32,yin,,0,0,0,,在完成时被调用回主队列上\N{\fs12}will get called back on the main queue when it's done.
Dialogue: 0,0:20:38.32,0:20:40.77,yin,,0,0,0,,无论多久 它会被调用\N{\fs12}No matter how long it takes, it'll get called later
Dialogue: 0,0:20:40.77,0:20:42.77,yin,,0,0,0,,这是完成时 然后在这个代码块\N{\fs12}when it's done, and then in that block,
Dialogue: 0,0:20:42.77,0:20:44.89,yin,,0,0,0,,你可以做你想做的事\N{\fs12}you just start doing what you want to do.
Dialogue: 0,0:20:44.89,0:20:47.05,yin,,0,0,0,,我来讲讲\N{\fs12}Alright? So let's talk about what you might,
Dialogue: 0,0:20:47.05,0:20:49.45,yin,,0,0,0,,这是怎么样的\N{\fs12}how this might look to
Dialogue: 0,0:20:49.45,0:20:51.41,yin,,0,0,0,,看文件是否存在\N{\fs12}see if the file exists
Dialogue: 0,0:20:51.42,0:20:54.41,yin,,0,0,0,,如果存在就打开 如果不存在就创建\N{\fs12}and if it does open it and if it doesn't, create it,
Dialogue: 0,0:20:54.42,0:20:55.59,yin,,0,0,0,,它是这样的\N{\fs12}it looks something like this.
Dialogue: 0,0:20:55.59,0:20:57.55,yin,,0,0,0,,在competionHandler中\N{\fs12}And inside that completion handler,
Dialogue: 0,0:20:57.55,0:21:00.74,yin,,0,0,0,,如果成功打开或成功创建了的话\N{\fs12}if you successfully opened or successfully created it,
Dialogue: 0,0:21:00.74,0:21:02.51,yin,,0,0,0,,你会调用一些你的方法\N{\fs12}you're going to call some method of yours,
Dialogue: 0,0:21:02.51,0:21:04.78,yin,,0,0,0,,我将它称作documentIsReady\N{\fs12}I've called it document is ready, you can call
Dialogue: 0,0:21:04.78,0:21:08.06,yin,,0,0,0,,你也可以起别的名称\N{\fs12}that method anything you want, that says okay,
Dialogue: 0,0:21:08.06,0:21:11.26,yin,,0,0,0,,文档已就绪 你现在可以用它了\N{\fs12}the documents ready to go, now you can go use it.
Dialogue: 0,0:21:11.26,0:21:13.23,yin,,0,0,0,,两种情况下我都做了相同的事情\N{\fs12}Alright? And I'm doing the same thing in either case.
Dialogue: 0,0:21:13.23,0:21:17.47,yin,,0,0,0,,苹果在这里没给打开或创建这样的方法 显得有些懒\N{\fs12}It's a little bit of a bummer that there's no method like open or create,
Dialogue: 0,0:21:17.47,0:21:18.89,yin,,0,0,0,,苹果只给出了这些东西\N{\fs12}and it just does it all in once, that you have
Dialogue: 0,0:21:18.89,0:21:21.89,yin,,0,0,0,,只有fileExists这些 不过你也没办法\N{\fs12}to do this file exist business, but you do, so you're going
Dialogue: 0,0:21:21.89,0:21:24.53,yin,,0,0,0,,这段代码几乎会出现在任何\N{\fs12}to have this little sequence of code
Dialogue: 0,0:21:24.53,0:21:28.07,yin,,0,0,0,,使用UIManagedDocument的app中\N{\fs12}in almost any app that uses a UI-managed document.
Dialogue: 0,0:21:28.07,0:21:33.13,yin,,0,0,0,,这有些愚蠢 因为都是很简单很类似的东西\N{\fs12}It's kind of silly, because it's all very, very simple, similar,
Dialogue: 0,0:21:33.13,0:21:35.62,yin,,0,0,0,,不过它就是这样的\N{\fs12}if then there, but that's what it looks like.
Dialogue: 0,0:21:35.62,0:21:38.68,yin,,0,0,0,,documentIsReady方法又是怎样的呢\N{\fs12}So now, what does that document is ready method look like?
Dialogue: 0,0:21:38.68,0:21:40.16,yin,,0,0,0,,大致是这样的\N{\fs12}It looks something like this.
Dialogue: 0,0:21:40.16,0:21:42.59,yin,,0,0,0,,在documentIsReady方法最开始\N{\fs12}One thing I might do at the beginning
Dialogue: 0,0:21:42.59,0:21:45.71,yin,,0,0,0,,我可以检查文档的状态\N{\fs12}of my document is ready is check the state of the document
Dialogue: 0,0:21:45.71,0:21:47.64,yin,,0,0,0,,看它是否处于正常状态\N{\fs12}to see if it's in the normal state,
Dialogue: 0,0:21:47.64,0:21:50.68,yin,,0,0,0,,正常状态是说 它准备好了\N{\fs12}normal state means this guys is ready to go.
Dialogue: 0,0:21:50.68,0:21:52.95,yin,,0,0,0,,它可以有哪些状态呢\N{\fs12}What other states could it be in?
Dialogue: 0,0:21:52.95,0:21:55.40,yin,,0,0,0,,状态还可以是关闭\N{\fs12}Well it could be in the state closed,
Dialogue: 0,0:21:55.40,0:21:57.67,yin,,0,0,0,,关闭是说 还没有打开\N{\fs12}closed means you haven't opened it yet
Dialogue: 0,0:21:57.67,0:21:59.32,yin,,0,0,0,,或者还没有创建\N{\fs12}or you haven't created it yet.
Dialogue: 0,0:21:59.32,0:22:01.23,yin,,0,0,0,,这两种都是关闭状态\N{\fs12}Either case it's going to be closed.
Dialogue: 0,0:22:01.23,0:22:03.62,yin,,0,0,0,,关闭状态的文档不能使用\N{\fs12}You cannot use a document once in the closed state.
Dialogue: 0,0:22:03.62,0:22:06.80,yin,,0,0,0,,还有一些状态 例如保存错误\N{\fs12}Some of these other states, like there was a saving error
Dialogue: 0,0:22:06.80,0:22:08.93,yin,,0,0,0,,或是编辑暂时禁用\N{\fs12}or editing is temporarily disabled
Dialogue: 0,0:22:08.93,0:22:12.04,yin,,0,0,0,,因为iCloud中有其他人正在编辑这个文档\N{\fs12}because someone else is editing this document in iCloud
Dialogue: 0,0:22:12.04,0:22:13.75,yin,,0,0,0,,例如它在更新\N{\fs12}and its updating, for example.
Dialogue: 0,0:22:13.75,0:22:16.45,yin,,0,0,0,,这门课中你不会碰到这些\N{\fs12}You're not going to run into those in this class,
Dialogue: 0,0:22:16.45,0:22:18.57,yin,,0,0,0,,但你应该知道有这些东西\N{\fs12}but you should know that they are there.
Dialogue: 0,0:22:18.57,0:22:22.27,yin,,0,0,0,,在最开始检查这个\N{\fs12}So, checking that, at the beginning to, you know,
Dialogue: 0,0:22:22.27,0:22:24.64,yin,,0,0,0,,这是一个位掩码 因此我使用了那个&符号\N{\fs12}it's a bit mask there, that's why I'm using that ampersand,
Dialogue: 0,0:22:24.64,0:22:27.33,yin,,0,0,0,,我只是检查那个位 看我的文档是否在正常状态\N{\fs12}right, I'm just checking that bit, do my documents stay normal?
Dialogue: 0,0:22:27.33,0:22:28.96,yin,,0,0,0,,看文档是否准备就绪\N{\fs12}Just to see if the document is ready to go.
Dialogue: 0,0:22:28.96,0:22:31.16,yin,,0,0,0,,这是第一件事 检查其状态\N{\fs12}So that might be the first thing I do is check its state
Dialogue: 0,0:22:31.16,0:22:33.90,yin,,0,0,0,,确保它就绪了 如果没就绪 例如是关闭的\N{\fs12}to make sure it's ready to go, if it's not, like if it was closed,
Dialogue: 0,0:22:33.90,0:22:36.23,yin,,0,0,0,,那我就需要回头尝试打开或创建它\N{\fs12}then I might go back and try to open it, or create it again.
Dialogue: 0,0:22:36.23,0:22:41.54,yin,,0,0,0,,如果有错误 我可能会等一下 再试一下 等等\N{\fs12}If it's got an error, I might wait awhile and try this again, or something like that.
Dialogue: 0,0:22:41.54,0:22:46.32,yin,,0,0,0,,无论如何 假设我的文档处在正常状态 再怎么做呢\N{\fs12}So anyway, let's say I have this document in a normal state, now what am I going to do?
Dialogue: 0,0:22:46.32,0:22:49.28,yin,,0,0,0,,我要抓取那个NSManagedObjectContext\N{\fs12}Now I'm going to grab that NS-managed object context
Dialogue: 0,0:22:49.28,0:22:51.84,yin,,0,0,0,,开始做一些Core Data方面的事\N{\fs12}and go start doing some core data stuff.
Dialogue: 0,0:22:51.84,0:22:53.69,yin,,0,0,0,,就是这样\N{\fs12}And that's it.
Dialogue: 0,0:22:53.69,0:22:56.12,yin,,0,0,0,,我们就是这样开始\N{\fs12}So this is how we get started.
Dialogue: 0,0:22:56.12,0:23:00.28,yin,,0,0,0,,在具体考虑如何处理NSManagedObjectContext前\N{\fs12}Now, before we dive into what we're going to do with that NS-managed object context,
Dialogue: 0,0:23:00.28,0:23:02.91,yin,,0,0,0,,我还要再讲几点UIManagedDocument的内容\N{\fs12}a couple more things about UI-managed document,
Dialogue: 0,0:23:02.91,0:23:06.78,yin,,0,0,0,,一是 它是自动保存的\N{\fs12}one is that it is auto saved.
Dialogue: 0,0:23:06.78,0:23:09.09,yin,,0,0,0,,你不需要手动保存\N{\fs12}You do not have to save it.
Dialogue: 0,0:23:09.09,0:23:12.03,yin,,0,0,0,,你可以用这里的方法来保存它\N{\fs12}And you can save it using this method you see here,
Dialogue: 0,0:23:12.03,0:23:15.72,yin,,0,0,0,,但一般我们不这样做 我们会让它自动保存\N{\fs12}but generally we don't, we let it auto save.
Dialogue: 0,0:23:15.72,0:23:17.99,yin,,0,0,0,,存储方式还是原来那个方法\N{\fs12}The way we save it is with the same method
Dialogue: 0,0:23:17.99,0:23:20.81,yin,,0,0,0,,我们说UIDocumentSaveForOverwriting\N{\fs12}that we used before, but we say UI document save for overwriting,
Dialogue: 0,0:23:20.82,0:23:22.91,yin,,0,0,0,,不过我们一般不会调用这个方法\N{\fs12}but generally, we don't call this method.
Dialogue: 0,0:23:22.91,0:23:24.89,yin,,0,0,0,,我们让它自动保存\N{\fs12}We let it auto save.
Dialogue: 0,0:23:24.89,0:23:27.91,yin,,0,0,0,,理解这个非常重要\N{\fs12}So that's an important thing to understand.
Dialogue: 0,0:23:27.91,0:23:31.62,yin,,0,0,0,,第二点 关闭文档\N{\fs12}Second thing, closing the document.
Dialogue: 0,0:23:31.62,0:23:34.67,yin,,0,0,0,,实际上 它也能自动关闭\N{\fs12}Well, it kind of auto closes, as well.
Dialogue: 0,0:23:34.67,0:23:35.84,yin,,0,0,0,,什么时候关闭呢\N{\fs12}When does it close?
Dialogue: 0,0:23:35.84,0:23:37.87,yin,,0,0,0,,当没有任何强指针指向它时\N{\fs12}When there are no more strong pointers to it.
Dialogue: 0,0:23:37.87,0:23:39.88,yin,,0,0,0,,换言之 当没有任何强指针指向它时\N{\fs12}In other words, when there are no more strong pointers to it,
Dialogue: 0,0:23:39.88,0:23:44.12,yin,,0,0,0,,当它要离开堆时 它就会自动关闭\N{\fs12}when it's going to leave the heap, it gets closed automatically.
Dialogue: 0,0:23:44.12,0:23:47.45,yin,,0,0,0,,因此 你一般也不用调用关闭 虽然你可以这么做\N{\fs12}So you generally don't call a close either, but you can do that as well.
Dialogue: 0,0:23:47.45,0:23:51.18,yin,,0,0,0,,关闭和保存一样 也是异步的\N{\fs12}And close, just like saving, are asynchronous,
Dialogue: 0,0:23:51.18,0:23:53.98,yin,,0,0,0,,你需要实现completionHander 来做你想做的事\N{\fs12}and you got to implement these completion handlers to do whatever you want
Dialogue: 0,0:23:53.98,0:23:56.28,yin,,0,0,0,,当它们完成关闭或是完成保存时\N{\fs12}when they're done closing or done saving.
Dialogue: 0,0:23:56.28,0:23:57.51,yin,,0,0,0,,有问题\N{\fs12}Question?
Dialogue: 0,0:24:01.21,0:24:01.87,yin,,0,0,0,,对\N{\fs12}Correct. Yes.
Dialogue: 0,0:24:01.87,0:24:04.23,yin,,0,0,0,,问题是 关闭之前它是否会自动保存\N{\fs12}So the question, does it auto save before closing?
Dialogue: 0,0:24:04.23,0:24:04.89,yin,,0,0,0,,当然会\N{\fs12}Absolutely.
Dialogue: 0,0:24:04.89,0:24:08.19,yin,,0,0,0,,你要它关闭 或是不再有强指针指向它时\N{\fs12}If you say close, or if you stop having a strong pointer to it,
Dialogue: 0,0:24:08.19,0:24:10.91,yin,,0,0,0,,它就会保存然后关闭\N{\fs12}it will save and then close.
Dialogue: 0,0:24:10.91,0:24:17.10,yin,,0,0,0,,关于保存和自动保存我还想说一点\N{\fs12}One thing I will say about saving, the auto saving,
Dialogue: 0,0:24:17.10,0:24:18.42,yin,,0,0,0,,在调试时\N{\fs12}when you're in debugging, you know,
Dialogue: 0,0:24:18.42,0:24:20.88,yin,,0,0,0,,你处在开发模式 你在调试\N{\fs12}when you're in development mode and you're debugging,
Dialogue: 0,0:24:20.88,0:24:22.96,yin,,0,0,0,,有时学生会有些困扰\N{\fs12}sometimes students will get a little confused,
Dialogue: 0,0:24:22.96,0:24:24.73,yin,,0,0,0,,因为他们会做点什么\N{\fs12}because they'll go and they'll do something,
Dialogue: 0,0:24:24.73,0:24:27.75,yin,,0,0,0,,更新数据库 然后停在调试器中\N{\fs12}update their database, and then they'll stop in the debugger,
Dialogue: 0,0:24:27.75,0:24:30.39,yin,,0,0,0,,改一下代码 再次运行 结果数据不见了\N{\fs12}made a code change and run again, and the data won't be there.
Dialogue: 0,0:24:30.39,0:24:32.75,yin,,0,0,0,,因为它没有自动保存的机会\N{\fs12}Well, because it didn't have a chance to auto save.
Dialogue: 0,0:24:32.75,0:24:36.42,yin,,0,0,0,,在开发模式中 你需要明确放一些保存进来\N{\fs12}So when you're in development mode, you might want to throw in some explicit saves
Dialogue: 0,0:24:36.42,0:24:40.05,yin,,0,0,0,,如果你总要在调试器中点停止的话\N{\fs12}if you're going to be hitting stop in the debugger all the time.
Dialogue: 0,0:24:41.25,0:24:43.65,yin,,0,0,0,,好 我们再来讨论相同文档上\N{\fs12}Alright, so let's talk about multiple instances
Dialogue: 0,0:24:43.65,0:24:47.00,yin,,0,0,0,,UIManagedDocument的多实例\N{\fs12}of UI-managed document on the same document.
Dialogue: 0,0:24:47.00,0:24:50.09,yin,,0,0,0,,能不能 我对文件URL进行alloc init\N{\fs12}Am I allowed to alloc init file URL
Dialogue: 0,0:24:50.09,0:24:52.54,yin,,0,0,0,,来创建一个UIManagedDocument\N{\fs12}to create a UI-managed document, and then somewhere else
Dialogue: 0,0:24:52.54,0:24:57.08,yin,,0,0,0,,然后其他人对相同文件URL进行alloc init\N{\fs12}in my code, alloc init file URL, the same URL, and have two
Dialogue: 0,0:24:57.08,0:25:01.42,yin,,0,0,0,,让两者着眼于相同文档 你可能会认为这行不通\N{\fs12}of them looking at the same document, you might think, oh that can't work,
Dialogue: 0,0:25:01.42,0:25:03.58,yin,,0,0,0,,但实际上 这完全可以\N{\fs12}but actually it does, it works perfectly fine.
Dialogue: 0,0:25:03.58,0:25:05.99,yin,,0,0,0,,完全没问题\N{\fs12}It works absolutely no problem,
Dialogue: 0,0:25:05.99,0:25:09.00,yin,,0,0,0,,两者有自身的ManagedObjectContext\N{\fs12}the two have their own managed object context
Dialogue: 0,0:25:09.00,0:25:11.22,yin,,0,0,0,,这是不同的 不过context都着眼于\N{\fs12}that are different, but they're both, contexts are looking
Dialogue: 0,0:25:11.22,0:25:15.39,yin,,0,0,0,,相同的数据库 它们都发生变化时 会发生保存\N{\fs12}at the same database and when they both make changes, it's going to save.
Dialogue: 0,0:25:15.39,0:25:17.53,yin,,0,0,0,,这也有可能出现问题\N{\fs12}There is the possible problem though
Dialogue: 0,0:25:17.53,0:25:21.75,yin,,0,0,0,,一个UIManagedDocument实例试图进行一种操作\N{\fs12}that one set of changes in this instance of the UI-managed document,
Dialogue: 0,0:25:21.75,0:25:23.09,yin,,0,0,0,,另一个却有冲突\N{\fs12}and this one might conflict.
Dialogue: 0,0:25:23.09,0:25:25.47,yin,,0,0,0,,一个可能想删除对象\N{\fs12}They might be trying to, one's trying to delete an object,
Dialogue: 0,0:25:25.47,0:25:28.28,yin,,0,0,0,,但同时 另一个可能想设置属性\N{\fs12}but another one is trying to set an attribute of it at the same time.
Dialogue: 0,0:25:28.28,0:25:31.36,yin,,0,0,0,,如果确实是多实例 冲突是很有可能出现的\N{\fs12}So, if you do have this, it is possible to get conflicts,
Dialogue: 0,0:25:31.36,0:25:33.38,yin,,0,0,0,,不过通常 多实例\N{\fs12}but usually if we have multiple instances,
Dialogue: 0,0:25:33.38,0:25:36.52,yin,,0,0,0,,只有一个能写 其它那些只能读\N{\fs12}it's because we have one writer and many readers.
Dialogue: 0,0:25:36.52,0:25:41.83,yin,,0,0,0,,两个控制器或什么 每个都能作出修改\N{\fs12}It's pretty rare to have two separate controllers or something, each having a document
Dialogue: 0,0:25:41.83,0:25:43.99,yin,,0,0,0,,这是很罕见的情况\N{\fs12}and their both making changes, that's pretty rare.
Dialogue: 0,0:25:43.99,0:25:46.29,yin,,0,0,0,,同时作出修改就更不用说了\N{\fs12}Especially both making changes at the same time,
Dialogue: 0,0:25:46.29,0:25:51.14,yin,,0,0,0,,屏幕上只有这么些空间可供修改决策的作出\N{\fs12}there's only so much screen for changes to be being made on.
Dialogue: 0,0:25:51.14,0:25:54.34,yin,,0,0,0,,这里有一点需要小心\N{\fs12}One thing to be careful of here is
Dialogue: 0,0:25:54.34,0:25:57.75,yin,,0,0,0,,如果一个文档修改了数据库\N{\fs12}that if one document changes the database,
Dialogue: 0,0:25:57.75,0:26:01.32,yin,,0,0,0,,另一个并不能自动看到相应变化\N{\fs12}the other one doesn't automatically see those changes.
Dialogue: 0,0:26:01.32,0:26:02.61,yin,,0,0,0,,你可能会说\N{\fs12}It's not like
Dialogue: 0,0:26:02.61,0:26:05.68,yin,,0,0,0,,哦 我加了一个对象到一个ManagedDocument\N{\fs12}oh I added an object in one managed document,
Dialogue: 0,0:26:05.68,0:26:07.34,yin,,0,0,0,,哦 我在另一个中看不到\N{\fs12}oh, I don't see it in the other one.
Dialogue: 0,0:26:07.34,0:26:08.26,yin,,0,0,0,,为什么看不到呢\N{\fs12}Why don't you see it?
Dialogue: 0,0:26:08.26,0:26:10.46,yin,,0,0,0,,看不到是因为context不同\N{\fs12}Well you don't see it because they have different context,
Dialogue: 0,0:26:10.46,0:26:12.30,yin,,0,0,0,,不同的NSManagedObjectContext\N{\fs12}different NS-managed object contexts,
Dialogue: 0,0:26:12.30,0:26:14.33,yin,,0,0,0,,不过你仍然是在修改相同的数据库\N{\fs12}but you're still modifying the same database.
Dialogue: 0,0:26:14.33,0:26:18.47,yin,,0,0,0,,那如何知道另一个文档是否进行了修改呢\N{\fs12}So how could you find out, if you wanted to find out if another document is doing,
Dialogue: 0,0:26:18.47,0:26:20.73,yin,,0,0,0,,答案是 广播站\N{\fs12}and the answer is, the radio station.
Dialogue: 0,0:26:20.73,0:26:23.80,yin,,0,0,0,,我们可以使用NSNotification\N{\fs12}We could use NS notification.
Dialogue: 0,0:26:23.80,0:26:26.98,yin,,0,0,0,,这是一个例子 有一个控制器\N{\fs12}And so, here's an example of having a controller,
Dialogue: 0,0:26:26.98,0:26:30.36,yin,,0,0,0,,到屏幕上时 开始监听\N{\fs12}when it comes on screen, start listening at,
Dialogue: 0,0:26:30.36,0:26:35.05,yin,,0,0,0,,不同文档的ManagedObjectContext\N{\fs12}to the managed object context, there, of a different document.
Dialogue: 0,0:26:35.05,0:26:37.48,yin,,0,0,0,,不是它打开的文档 而是别的\N{\fs12}Not the document it has open, but some other,
Dialogue: 0,0:26:37.48,0:26:40.92,yin,,0,0,0,,UIManagedDocument的其它实例\N{\fs12}some other instance of a UI-managed document,
Dialogue: 0,0:26:40.92,0:26:43.39,yin,,0,0,0,,而且它在找广播站\N{\fs12}and it's looking for the radio station,
Dialogue: 0,0:26:43.39,0:26:46.22,yin,,0,0,0,,NSManagedObjectContextDidSaveNotification\N{\fs12}NS-managed object context did save notification.
Dialogue: 0,0:26:46.22,0:26:50.16,yin,,0,0,0,,另一个文档自动保存时 它就会\N{\fs12}So whenever that other document auto saves, then it's going
Dialogue: 0,0:26:50.16,0:26:53.76,yin,,0,0,0,,获得NSNotification说 哦 它变了\N{\fs12}to get a NS notification saying oh, it changed.
Dialogue: 0,0:26:53.76,0:26:57.19,yin,,0,0,0,,我把这个方法叫contextChanged 或是别的什么\N{\fs12}Alright? And I'm going to call this method context changed or whatever.
Dialogue: 0,0:26:57.19,0:27:00.12,yin,,0,0,0,,这个发生时我要做什么呢\N{\fs12}And what would I do when that happens?
Dialogue: 0,0:27:00.12,0:27:05.09,yin,,0,0,0,,两点 一是我可以重新取回我的所有对象\N{\fs12}Well, two things, one, I could just refetch all my objects.
Dialogue: 0,0:27:05.09,0:27:06.86,yin,,0,0,0,,我知道数据库发生了变化\N{\fs12}Okay, I know the database is changed,
Dialogue: 0,0:27:06.86,0:27:08.83,yin,,0,0,0,,我重新取回它们 我还没讲取回\N{\fs12}I'll just refetch them all, we haven't talked about fetching,
Dialogue: 0,0:27:08.83,0:27:11.78,yin,,0,0,0,,不过 我可以重新取回 更新所有东西\N{\fs12}but I could refetch and get a fresh set of everything.
Dialogue: 0,0:27:11.78,0:27:15.71,yin,,0,0,0,,但实际上 这个ContextDidSaveNotification\N{\fs12}But, actually this context change did save notification,
Dialogue: 0,0:27:15.71,0:27:17.24,yin,,0,0,0,,会给你一个数组\N{\fs12}gives you an array,
Dialogue: 0,0:27:17.24,0:27:19.73,yin,,0,0,0,,在它用户信息中的是一个字典\N{\fs12}inside of its user info is a dictionary,
Dialogue: 0,0:27:19.73,0:27:24.20,yin,,0,0,0,,有三个数组 这是所有变化了的对象的列表\N{\fs12}with three arrays that are a list of all the objects that changed.
Dialogue: 0,0:27:24.20,0:27:28.25,yin,,0,0,0,,你可以把这些变化合并到你的context中\N{\fs12}And you can merge those changes
Dialogue: 0,0:27:28.25,0:27:31.45,yin,,0,0,0,,使用这个NSManagedObjectContext方法\N{\fs12}into your context using this NS-managed object context
Dialogue: 0,0:27:31.45,0:27:34.26,yin,,0,0,0,,mergeChangesFromContextDidSaveNotification\N{\fs12}method, merge changes from context did save notification,
Dialogue: 0,0:27:34.26,0:27:35.85,yin,,0,0,0,,你把notification给它\N{\fs12}you just give it the notification,
Dialogue: 0,0:27:35.85,0:27:38.87,yin,,0,0,0,,它会自动将所有变化合并到你的context中\N{\fs12}and it'll automatically merge all those changes into your context,
Dialogue: 0,0:27:38.87,0:27:39.78,yin,,0,0,0,,非常酷\N{\fs12}which is pretty cool.
Dialogue: 0,0:27:39.78,0:27:41.46,yin,,0,0,0,,这是一个很酷的方法\N{\fs12}This is a very cool method.
Dialogue: 0,0:27:41.46,0:27:44.70,yin,,0,0,0,,这个方法的酷经常会被人们低估\N{\fs12}Very underappreciated coolness of this method.
Dialogue: 0,0:27:44.70,0:27:46.76,yin,,0,0,0,,你在监视其它context\N{\fs12}So you're watching some other context that's
Dialogue: 0,0:27:46.76,0:27:49.30,yin,,0,0,0,,同你的具有相同数据库 但context不同\N{\fs12}on the same database as yours, but it's a different context,
Dialogue: 0,0:27:49.30,0:27:51.99,yin,,0,0,0,,你获得一个notification 将变化合并到你的里面\N{\fs12}you get a notification, you can merge those changes into yours,
Dialogue: 0,0:27:51.99,0:27:53.90,yin,,0,0,0,,就好像这些变化是你做出的一样\N{\fs12}as if you had made those changes.
Dialogue: 0,0:27:53.90,0:27:56.81,yin,,0,0,0,,两个文档同时存储时也没问题\N{\fs12}And it's all going to be fine when both documents save
Dialogue: 0,0:27:56.81,0:27:59.51,yin,,0,0,0,,因为你合并了相同的变化\N{\fs12}because you're merging in the same changes
Dialogue: 0,0:27:59.51,0:28:01.70,yin,,0,0,0,,Core Data会自动处理\N{\fs12}and this is, core data automatically deals
Dialogue: 0,0:28:01.70,0:28:04.74,yin,,0,0,0,,当相同变化由两个不同context同时完成\N{\fs12}with when the same change is being made by two different contexts,
Dialogue: 0,0:28:04.74,0:28:08.62,yin,,0,0,0,,只有冲突的才会让你产生问题\N{\fs12}only when conflicting ones happen is it a problem for you.
Dialogue: 0,0:28:08.62,0:28:11.17,yin,,0,0,0,,这些都能奇妙地良好运作\N{\fs12}So this all kind of just magically works.
Dialogue: 0,0:28:11.17,0:28:12.89,yin,,0,0,0,,这是监视另一个context\N{\fs12}So that's watching another context.
Dialogue: 0,0:28:12.89,0:28:14.41,yin,,0,0,0,,作业中可能不需要这些\N{\fs12}Probably not going to be necessary in homework,
Dialogue: 0,0:28:14.41,0:28:17.26,yin,,0,0,0,,你们或许会采取一种不同策略\N{\fs12}because you're probably going to take a different strategy,
Dialogue: 0,0:28:17.26,0:28:20.29,yin,,0,0,0,,也就是只有一个UIManagedDocument\N{\fs12}which is have one managed document, UI-managed document,
Dialogue: 0,0:28:20.29,0:28:23.40,yin,,0,0,0,,然后将它的context用到app的所有地方\N{\fs12}and you use its context everywhere in your app.
Dialogue: 0,0:28:23.40,0:28:25.05,yin,,0,0,0,,这样做显然更简单\N{\fs12}That's kind of a simpler way to do it,
Dialogue: 0,0:28:25.05,0:28:27.09,yin,,0,0,0,,作业中 我建议你们这样做\N{\fs12}and that's what I recommend for your homework.
Dialogue: 0,0:28:27.09,0:28:31.05,yin,,0,0,0,,我们会在演示中看到 演示中我会展示这个\N{\fs12}And we'll see in the demo, I'm going to do that in the demo.
Dialogue: 0,0:28:31.05,0:28:33.71,yin,,0,0,0,,好 现在我们有了NSManagedObjectContext\N{\fs12}Alright. So now we have an NS-managed object context
Dialogue: 0,0:28:33.71,0:28:36.43,yin,,0,0,0,,来自于我们的文档 我们能用它做什么\N{\fs12}that we got from our document, what can we do with it?
Dialogue: 0,0:28:36.43,0:28:38.82,yin,,0,0,0,,我们可以插入和删除对象\N{\fs12}Well, we can insert and delete objects,
Dialogue: 0,0:28:38.82,0:28:41.61,yin,,0,0,0,,我们可以修改属性 我们还可以查询对象\N{\fs12}we can change attributes, and we can query for objects.
Dialogue: 0,0:28:41.61,0:28:43.62,yin,,0,0,0,,我们来谈谈这些\N{\fs12}So let's talk about doing all those things.
Dialogue: 0,0:28:43.62,0:28:45.00,yin,,0,0,0,,首先是插入\N{\fs12}Let's start with inserting.
Dialogue: 0,0:28:45.00,0:28:48.40,yin,,0,0,0,,假设我要添加一张新照片 或是一个新的拍照人\N{\fs12}So let's say I want to put a new photo, or put a new photographer
Dialogue: 0,0:28:48.40,0:28:51.04,yin,,0,0,0,,到数据库中 我可以用这个方法\N{\fs12}into the database, I do that with this method right here,
Dialogue: 0,0:28:51.04,0:28:53.89,yin,,0,0,0,,这是一个NSEntityDescription上的类方法\N{\fs12}it's a class method on NS entity description
Dialogue: 0,0:28:53.89,0:28:56.69,yin,,0,0,0,,叫insertNewObjectForEntityForName\N{\fs12}called insert new object for entity for name
Dialogue: 0,0:28:56.70,0:28:58.24,yin,,0,0,0,,inManagedObjectContext\N{\fs12}in managed object context.
Dialogue: 0,0:28:58.24,0:29:02.30,yin,,0,0,0,,可以看到 没有context 我是无法插入对象的\N{\fs12}So you can see, I can't insert an object without having a context.
Dialogue: 0,0:29:02.30,0:29:06.07,yin,,0,0,0,,必须context牵线搭桥 才能插入对象到数据库中\N{\fs12}The context is the hook that lets you insert things
Dialogue: 0,0:29:06.07,0:29:09.83,yin,,0,0,0,,或是查询 或是做别的任何事情 context是必须的\N{\fs12}in the database or query or anything, so you have to have a context.
Dialogue: 0,0:29:09.83,0:29:15.47,yin,,0,0,0,,第一个参数@"Photo" 这是实体的名称\N{\fs12}And, that first argument, at sign photo, that is the name of the entity.
Dialogue: 0,0:29:15.47,0:29:18.41,yin,,0,0,0,,记得在映射中我创建了一个Photo实体吗\N{\fs12}So remember in the mapping thing when I made a photo entity
Dialogue: 0,0:29:18.41,0:29:22.35,yin,,0,0,0,,我还创建了一个Photographer实体 这就是实体名\N{\fs12}and I made a photographer entity, this is a string which is the name.
Dialogue: 0,0:29:22.35,0:29:24.66,yin,,0,0,0,,这里创建一张照片\N{\fs12}So here I am making a photo.
Dialogue: 0,0:29:24.66,0:29:26.06,yin,,0,0,0,,它返回什么呢\N{\fs12}And what does it return?
Dialogue: 0,0:29:26.06,0:29:28.65,yin,,0,0,0,,它会返回NSManagedObject *photo\N{\fs12}It returns NS-managed object star photo,
Dialogue: 0,0:29:28.65,0:29:31.48,yin,,0,0,0,,我讲过 数据库中的所有对象\N{\fs12}and I told you that all of the objects in the database
Dialogue: 0,0:29:31.48,0:29:35.27,yin,,0,0,0,,都是NSManagedObject或其子类\N{\fs12}are NS-managed objects or subclasses thereof.
Dialogue: 0,0:29:35.27,0:29:36.76,yin,,0,0,0,,这就是实际情况\N{\fs12}And, in fact, that's exactly what happened.
Dialogue: 0,0:29:36.76,0:29:39.38,yin,,0,0,0,,这里就会创建一个 并返回出来\N{\fs12}So this is just going to make one for you and return it.
Dialogue: 0,0:29:39.38,0:29:42.93,yin,,0,0,0,,它会是空的\N{\fs12}It's going to be blank, or empty.
Dialogue: 0,0:29:42.93,0:29:45.88,yin,,0,0,0,,这可能意味着 所有属性都是nil\N{\fs12}Now, that could mean that all of its attributes are nil,
Dialogue: 0,0:29:45.88,0:29:48.28,yin,,0,0,0,,但我们在Xcode中没看到这个\N{\fs12}but we didn't see this in Xcode,
Dialogue: 0,0:29:48.29,0:29:50.33,yin,,0,0,0,,在Xcode中检查属性时\N{\fs12}but it, when you inspect a property in Xcode,
Dialogue: 0,0:29:50.33,0:29:52.70,yin,,0,0,0,,你可以指定一个默认值\N{\fs12}you can actually specify a default value,
Dialogue: 0,0:29:52.70,0:29:54.30,yin,,0,0,0,,它会用那个值\N{\fs12}and it'll have that value.
Dialogue: 0,0:29:54.30,0:29:57.98,yin,,0,0,0,,或许 你希望它让上传日期\N{\fs12}So maybe you want it to have the upload date
Dialogue: 0,0:29:57.98,0:30:01.15,yin,,0,0,0,,默认为对象创建的日期或是别的什么\N{\fs12}by default be the date the object was created or something,
Dialogue: 0,0:30:01.15,0:30:05.42,yin,,0,0,0,,你可以创建某个固定日期\N{\fs12}you can go in and create some fixed date
Dialogue: 0,0:30:05.42,0:30:08.48,yin,,0,0,0,,或者 你希望标题总是至少为空字符串\N{\fs12}or you want the title to always be at least the empty string
Dialogue: 0,0:30:08.48,0:30:10.82,yin,,0,0,0,,诸如此类 你可以设置默认\N{\fs12}or something like that, you can set defaults,
Dialogue: 0,0:30:10.82,0:30:14.49,yin,,0,0,0,,在Xcode中 这些需要是常数\N{\fs12}they have to be constants basically, in Xcode,
Dialogue: 0,0:30:14.49,0:30:18.49,yin,,0,0,0,,在这些字段处 NSObject会带着这些默认设置回来\N{\fs12}to do that and NS object will come back with those defaults set in those fields,
Dialogue: 0,0:30:18.50,0:30:20.08,yin,,0,0,0,,否则就是nil\N{\fs12}and otherwise nil.
Dialogue: 0,0:30:20.08,0:30:21.94,yin,,0,0,0,,如果不想设置这些默认值\N{\fs12}But if you don't do any of that default setting,
Dialogue: 0,0:30:21.94,0:30:24.77,yin,,0,0,0,,这个照片中的一切属性都将是nil\N{\fs12}all the properties in this photo will be nil.
Dialogue: 0,0:30:24.77,0:30:27.07,yin,,0,0,0,,标题是nil 副标题是nil\N{\fs12}So the title will be nil, subtitle will be nil,
Dialogue: 0,0:30:27.07,0:30:30.62,yin,,0,0,0,,whoTook是nil 都是nil\N{\fs12}the who took will be nil, it'll all be nil.
Dialogue: 0,0:30:30.62,0:30:36.15,yin,,0,0,0,,很好 现在我有了对象 那如何设定属性呢\N{\fs12}So, great, now I have an object, how do I set those attributes?
Dialogue: 0,0:30:36.15,0:30:37.55,yin,,0,0,0,,我要设定标题\N{\fs12}I want to set the title.
Dialogue: 0,0:30:37.55,0:30:40.30,yin,,0,0,0,,我要设定副标题 我还要设定whoTook\N{\fs12}I want to set the subtitle, I even want to set who took?
Dialogue: 0,0:30:40.30,0:30:41.38,yin,,0,0,0,,怎么做呢\N{\fs12}How do I do that?
Dialogue: 0,0:30:41.38,0:30:45.62,yin,,0,0,0,,这要用到KeyValueCoding协议\N{\fs12}You do that using the key value coding protocol.
Dialogue: 0,0:30:45.62,0:30:48.27,yin,,0,0,0,,你们其实已经用过这个协议了\N{\fs12}And you've already used this protocol actually.
Dialogue: 0,0:30:48.29,0:30:50.13,yin,,0,0,0,,它是valueForKey\N{\fs12}It is value for key,
Dialogue: 0,0:30:50.13,0:30:51.78,yin,,0,0,0,,setValue forKey\N{\fs12}set value for key,
Dialogue: 0,0:30:51.78,0:30:53.00,yin,,0,0,0,,valueForKeyPath\N{\fs12}value for key path,
Dialogue: 0,0:30:53.00,0:30:55.29,yin,,0,0,0,,和setValue forKeyPath\N{\fs12}and set value for key path.
Dialogue: 0,0:30:55.29,0:31:00.80,yin,,0,0,0,,这个协议 由NSDictionary实现\N{\fs12}So this protocol, which is implemented by NS dictionary,
Dialogue: 0,0:31:00.80,0:31:03.53,yin,,0,0,0,,例如 这就是我们使用valueForKeyPath的方式\N{\fs12}for example, that's how we used value for key path
Dialogue: 0,0:31:03.53,0:31:05.65,yin,,0,0,0,,在NSDictionary中\N{\fs12}in those NS dictionaries, to do the things like
Dialogue: 0,0:31:05.65,0:31:08.53,yin,,0,0,0,,做description._content这样的事 记得吗\N{\fs12}description dot under bar contents, remember that,
Dialogue: 0,0:31:08.53,0:31:10.49,yin,,0,0,0,,来自Flickr\N{\fs12}from Flickr?
Dialogue: 0,0:31:10.49,0:31:12.84,yin,,0,0,0,,这就是NSManagedObject的工作方式\N{\fs12}This is how NS-managed object works.
Dialogue: 0,0:31:12.84,0:31:16.36,yin,,0,0,0,,它实现了所有这些 而且你可以说valueForKey\N{\fs12}It implements all these and you can say value for key,
Dialogue: 0,0:31:16.36,0:31:20.27,yin,,0,0,0,,@号 引号 标题 这就能得到照片的标题\N{\fs12}at sign quote title, and you can get the title of a photo.
Dialogue: 0,0:31:20.27,0:31:22.26,yin,,0,0,0,,你也可以说setValue 然后是你想设的\N{\fs12}Or you can say set value, whatever you want,
Dialogue: 0,0:31:22.26,0:31:24.31,yin,,0,0,0,,forKey @号 引号 标题\N{\fs12}for key at sign quote title,
Dialogue: 0,0:31:24.32,0:31:27.83,yin,,0,0,0,,这就为标题设了值 很简单\N{\fs12}and set the value of a title, simple as that.
Dialogue: 0,0:31:27.83,0:31:29.57,yin,,0,0,0,,valueForKey setValue forKey\N{\fs12}Value for key, set value for key.
Dialogue: 0,0:31:29.57,0:31:32.12,yin,,0,0,0,,这方面有问题吗\N{\fs12}Any questions about that?
Dialogue: 0,0:31:32.12,0:31:35.60,yin,,0,0,0,,好 显然 键只是一个字符串\N{\fs12}Okay. So, the, the key is obviously just a string,
Dialogue: 0,0:31:35.60,0:31:39.03,yin,,0,0,0,,早些时候我们创建的可视映射中的属性名\N{\fs12}the name of the property in your visual map that we built earlier.
Dialogue: 0,0:31:39.03,0:31:44.21,yin,,0,0,0,,值只是一个对象 例如如果是标题 那就是NSString\N{\fs12}The value would be just an object, like an NS string, if it was a title,
Dialogue: 0,0:31:44.21,0:31:46.91,yin,,0,0,0,,如果上传日期 那就是NSDate\N{\fs12}and NS date if it was the upload date
Dialogue: 0,0:31:46.91,0:31:51.56,yin,,0,0,0,,如果是缩略图数据什么的 那就是NSData\N{\fs12}and NS data if it was the thumbnail UR, thumbnail data or whatever.
Dialogue: 0,0:31:51.56,0:31:55.19,yin,,0,0,0,,你还可以用setValue forKey来设定关系\N{\fs12}You can also set, using set value for key, the relationships.
Dialogue: 0,0:31:55.19,0:31:56.78,yin,,0,0,0,,如果你有一个拍照者\N{\fs12}So if you had a photographer,
Dialogue: 0,0:31:56.78,0:31:59.61,yin,,0,0,0,,或许你也插入了实体描述这些\N{\fs12}which maybe you inserted with that entity description thing,
Dialogue: 0,0:31:59.61,0:32:02.69,yin,,0,0,0,,有了拍照者 你可以说\N{\fs12}so now you have photographer, as well, you can just say the,
Dialogue: 0,0:32:02.69,0:32:05.82,yin,,0,0,0,,照片 setValue 引号 whoTook\N{\fs12}the photo set value, quote who took,
Dialogue: 0,0:32:05.82,0:32:06.98,yin,,0,0,0,,设置值\N{\fs12}set the value,
Dialogue: 0,0:32:06.98,0:32:07.80,yin,,0,0,0,,拍照者\N{\fs12}the photographer,
Dialogue: 0,0:32:07.80,0:32:10.13,yin,,0,0,0,,forKey 引号 whoTook\N{\fs12}for the key quote who took.
Dialogue: 0,0:32:10.94,0:32:15.99,yin,,0,0,0,,有趣的是 如果你设置whoTook的值\N{\fs12}Now, what' really interesting is that if you set that value who took,
Dialogue: 0,0:32:16.01,0:32:21.98,yin,,0,0,0,,拍照者中的照片集合将会自动更新\N{\fs12}the photo set, in the photographer, will automatically be updated.
Dialogue: 0,0:32:21.98,0:32:24.72,yin,,0,0,0,,你不需要同时设置关系的两侧\N{\fs12}You do not have to set both sides of the relationship.
Dialogue: 0,0:32:24.72,0:32:25.66,yin,,0,0,0,,反之亦然\N{\fs12}And vice versa.
Dialogue: 0,0:32:25.66,0:32:31.68,yin,,0,0,0,,如果我有一个拍照者 我在其照片集中添加一张照片\N{\fs12}If I have a photographer and I add a photo to its photos set,
Dialogue: 0,0:32:31.68,0:32:34.16,yin,,0,0,0,,whoTook也会自动设置\N{\fs12}it'll automatically set who took.
Dialogue: 0,0:32:34.16,0:32:39.81,yin,,0,0,0,,这是因为这个数据库 需要维持自身的内部一致性\N{\fs12}And that's because this database has to maintain self internal consistency
Dialogue: 0,0:32:39.81,0:32:43.17,yin,,0,0,0,,Core Data会为你做所有这些 这非常酷\N{\fs12}and so core data does that all for you, which is really cool?
Dialogue: 0,0:32:43.17,0:32:44.89,yin,,0,0,0,,你可以设置任何一侧\N{\fs12}So you can set either side
Dialogue: 0,0:32:44.89,0:32:46.91,yin,,0,0,0,,另一侧都会自动设置\N{\fs12}and it'll automatically set the other side.
Dialogue: 0,0:32:48.51,0:32:51.53,yin,,0,0,0,,之前我说过 很多的是NSSet\N{\fs12}As I said before, the too many ones are NS sets,
Dialogue: 0,0:32:51.53,0:32:56.73,yin,,0,0,0,,不那么多的是NSManagedObject\N{\fs12}and the non-too many ones are just NS-managed object stars.
Dialogue: 0,0:32:56.73,0:33:00.09,yin,,0,0,0,,你进行的所有这些修改\N{\fs12}Now, all these changes that you're making,
Dialogue: 0,0:33:00.09,0:33:04.33,yin,,0,0,0,,插入对象 设置各种属性 这些都只发生在内存中\N{\fs12}inserting objects, setting all those properties, those only happen in memory.
Dialogue: 0,0:33:04.33,0:33:08.23,yin,,0,0,0,,不发生在磁盘上 直到context得到保存\N{\fs12}They're not happening on disc, until the context is saved.
Dialogue: 0,0:33:08.23,0:33:10.61,yin,,0,0,0,,context有一个保存方法\N{\fs12}Now the context has a save method.
Dialogue: 0,0:33:10.62,0:33:12.75,yin,,0,0,0,,你可以去看NSManagedObjectContext\N{\fs12}If you go look in NS-managed object context,
Dialogue: 0,0:33:12.75,0:33:16.10,yin,,0,0,0,,它有一个保存方法 但你不会调用它\N{\fs12}it has a save method, but you're not going to call that, because you're going
Dialogue: 0,0:33:16.10,0:33:20.04,yin,,0,0,0,,因为你会让UIManagedDocument自动保存context\N{\fs12}to let UI-managed documents auto save, save the context.
Dialogue: 0,0:33:20.04,0:33:24.42,yin,,0,0,0,,如果你保存文档 或者 你也可以发送信息给context\N{\fs12}Alright? So if you save the document or you can actually send a message
Dialogue: 0,0:33:24.42,0:33:25.89,yin,,0,0,0,,来保存它自身\N{\fs12}to the context to save itself.
Dialogue: 0,0:33:25.89,0:33:29.65,yin,,0,0,0,,无论哪种方式 它都会存到磁盘上 但这之前\N{\fs12}Either way, it will save out to disc, but until then,
Dialogue: 0,0:33:29.65,0:33:32.15,yin,,0,0,0,,所有修改都只存在于内存中\N{\fs12}all the changes you're making are just in memory.
Dialogue: 0,0:33:32.15,0:33:37.92,yin,,0,0,0,,Core Data内建有很让人难以置信的撤销与重做\N{\fs12}Now, core data has an incredible undo and redo built into it.
Dialogue: 0,0:33:37.92,0:33:41.49,yin,,0,0,0,,进行一些修改 然后说undo 修改就会撤销\N{\fs12}To, you make some changes, you say undo, it undoes them.
Dialogue: 0,0:33:41.49,0:33:44.00,yin,,0,0,0,,你还可以批处理 你可以撤销一组操作\N{\fs12}And you can batch them up and you can undo things as a group
Dialogue: 0,0:33:44.00,0:33:45.99,yin,,0,0,0,,你可以撤销最近一连串操作\N{\fs12}and can undo just the last chain, I can't,
Dialogue: 0,0:33:45.99,0:33:49.20,yin,,0,0,0,,我没时间讲所有这些 不过这非常酷\N{\fs12}I don't have time to talk about any of that, but it's really, really cool.
Dialogue: 0,0:33:49.20,0:33:52.27,yin,,0,0,0,,任何修改数据库数据的时候\N{\fs12}So anytime you have a situation where you're changing database
Dialogue: 0,0:33:52.27,0:33:56.55,yin,,0,0,0,,用户或许会要撤销 Core Data在这方面很棒\N{\fs12}and the user wants to be able to maybe undo, core data's awesome for that.
Dialogue: 0,0:33:58.00,0:34:02.88,yin,,0,0,0,,就像NSManagedObjectContextDidSaveNotification一样\N{\fs12}Just like you get UI, or NS-managed object did save notifications,
Dialogue: 0,0:34:02.88,0:34:06.04,yin,,0,0,0,,你还可以有UIManagedDocumentDidSaveNotification\N{\fs12}you can also get UI-managed document did save notification.
Dialogue: 0,0:34:06.04,0:34:08.56,yin,,0,0,0,,你可以使用这个广播站\N{\fs12}So you can sign up for that radio broadcast
Dialogue: 0,0:34:08.56,0:34:10.87,yin,,0,0,0,,弄清什么时候整个文档得到了保存\N{\fs12}and find out when the whole document did save.
Dialogue: 0,0:34:10.87,0:34:12.97,yin,,0,0,0,,这两种其实是半斤八两\N{\fs12}Kind of six, one-half dozen in the other in this case,
Dialogue: 0,0:34:12.97,0:34:14.78,yin,,0,0,0,,因为如果文档保存了\N{\fs12}because if the documents get saved,
Dialogue: 0,0:34:14.78,0:34:17.40,yin,,0,0,0,,那context显然也保存了\N{\fs12}then definitely the context is going to be saved, as well.
Dialogue: 0,0:34:20.48,0:34:23.92,yin,,0,0,0,,像这样调用valueForKey和setValue forKey\N{\fs12}Calling value for key and set value for a key like this though,
Dialogue: 0,0:34:23.92,0:34:26.21,yin,,0,0,0,,会导致一些很丑陋的代码\N{\fs12}it kind of results in some ugly code.
Dialogue: 0,0:34:26.21,0:34:29.18,yin,,0,0,0,,因为它没有类型检查 valueForKey\N{\fs12}Because it's not type checked, right, value for key
Dialogue: 0,0:34:29.18,0:34:31.06,yin,,0,0,0,,和setValue forKey\N{\fs12}and set value for key,
Dialogue: 0,0:34:31.06,0:34:34.18,yin,,0,0,0,,或许我该说setValue:forKey:\N{\fs12}that should be set value colon for key colon,
Dialogue: 0,0:34:34.18,0:34:36.84,yin,,0,0,0,,它只取id\N{\fs12}that just takes ID.
Dialogue: 0,0:34:36.84,0:34:40.20,yin,,0,0,0,,返回id 所以说 这里没有任何类型检查\N{\fs12}Right? Returns ID, so it's really not type checking any of that stuff,
Dialogue: 0,0:34:40.22,0:34:42.69,yin,,0,0,0,,而且 最终会有很多字符串字面量\N{\fs12}and also, you end up with a lot of literal strings,
Dialogue: 0,0:34:42.69,0:34:45.47,yin,,0,0,0,,例如@"thumbnailURL"\N{\fs12}like at sign quote thumbnail URL
Dialogue: 0,0:34:45.47,0:34:48.14,yin,,0,0,0,,如果你在可视映射中修改了这个的名称\N{\fs12}and if you ever changed the name of that in your visual map,
Dialogue: 0,0:34:48.14,0:34:51.94,yin,,0,0,0,,所有代码都将静静地停止工作 你甚至知都不知道\N{\fs12}all your code would just stop working silently and you wouldn't know, so,
Dialogue: 0,0:34:51.94,0:34:55.01,yin,,0,0,0,,我们这里实际想要的是属性\N{\fs12}really what we want here is properties.
Dialogue: 0,0:34:55.01,0:34:58.59,yin,,0,0,0,,我们希望能够设置标题 副标题和缩略图URL\N{\fs12}We want to be to set the title and subtitle and thumbnail URL
Dialogue: 0,0:34:58.59,0:35:03.78,yin,,0,0,0,,所有这些在我的照片中使用属性和点符号\N{\fs12}and all that stuff in my photo using properties and dot notation.
Dialogue: 0,0:35:03.78,0:35:08.53,yin,,0,0,0,,要做这些 我们需要为Photo创建一个子类\N{\fs12}So, all we need to do to do that is create subclasses for photo,
Dialogue: 0,0:35:08.53,0:35:10.44,yin,,0,0,0,,同时为Photographer创建一个子类\N{\fs12}and a subclass for photographer.
Dialogue: 0,0:35:10.44,0:35:12.69,yin,,0,0,0,,NSManagedObject的子类 对吧\N{\fs12}Subclasses of NS-managed object, right?
Dialogue: 0,0:35:12.69,0:35:15.33,yin,,0,0,0,,子类会实现所有这些属性\N{\fs12}And the subclasses will implement all these properties,
Dialogue: 0,0:35:15.33,0:35:19.71,yin,,0,0,0,,而且Xcode非常棒 它会帮你打理好这些\N{\fs12}and, of course, because Xcode is so nice, it's going to do that for you,
Dialogue: 0,0:35:19.71,0:35:21.57,yin,,0,0,0,,下面讨论一下如何\N{\fs12}so let's talk about now how
Dialogue: 0,0:35:21.57,0:35:26.42,yin,,0,0,0,,在Xcode中 为Photo和Photographer创建子类\N{\fs12}in Xcode we can make it generate subclasses for photo and photographer.
Dialogue: 0,0:35:26.42,0:35:30.15,yin,,0,0,0,,回到我的可视映射 点选Photo和Photographer\N{\fs12}So I'm going back to my visual map, I'm going to select photo and photographer,
Dialogue: 0,0:35:30.15,0:35:32.54,yin,,0,0,0,,然后从编辑器菜单\N{\fs12}and then I'm going to, from the editor menu,
Dialogue: 0,0:35:32.54,0:35:35.77,yin,,0,0,0,,选重要的菜单项 叫\N{\fs12}I'm going to pick this all important menu item called
Dialogue: 0,0:35:35.77,0:35:38.85,yin,,0,0,0,,创建NSManagedObject子类\N{\fs12}create NS-managed object subclass.
Dialogue: 0,0:35:38.85,0:35:40.84,yin,,0,0,0,,这正是我们要做的\N{\fs12}Because that's exactly what's it going to do.
Dialogue: 0,0:35:40.84,0:35:42.97,yin,,0,0,0,,这样做之后 它会问\N{\fs12}And when I do that, it's going to say okay,
Dialogue: 0,0:35:42.97,0:35:45.93,yin,,0,0,0,,哪个模型 这里我们只有一个\N{\fs12}which of your models, okay, we only have one,
Dialogue: 0,0:35:45.93,0:35:49.19,yin,,0,0,0,,Model.xcdatamodeld 不过 这里也可以有多个\N{\fs12}model dot xc data model d, but you could have multiple,
Dialogue: 0,0:35:49.19,0:35:54.15,yin,,0,0,0,,你希望为哪个模型生成NSManagedObject的子类\N{\fs12}which of your models do you want to generate managed object subclasses for?
Dialogue: 0,0:35:54.15,0:35:57.41,yin,,0,0,0,,我们选择这个模型 它会问\N{\fs12}So we'll just pick model, and then, it says okay, well,
Dialogue: 0,0:35:57.41,0:36:00.83,yin,,0,0,0,,你想为哪些类 哪些实体创建子类\N{\fs12}which of the classes, which of the entities you want to create a subclass for?
Dialogue: 0,0:36:00.83,0:36:05.35,yin,,0,0,0,,两个我都选上 Photo和Photographer\N{\fs12}We'll pick them both, both photo and photographer here, and,
Dialogue: 0,0:36:05.35,0:36:07.33,yin,,0,0,0,,它又问 存在哪呢\N{\fs12}it's going to say where do you want to store them,
Dialogue: 0,0:36:07.33,0:36:09.65,yin,,0,0,0,,存在存其它东西的地方\N{\fs12}we'll store then where we store everything else, and then,
Dialogue: 0,0:36:09.65,0:36:13.72,yin,,0,0,0,,有了 Photo.m和.h 以及Photographer.m和.h\N{\fs12}bingo, photo dot m and h, and photographer dot m and h,
Dialogue: 0,0:36:13.72,0:36:17.02,yin,,0,0,0,,看到了吗 这些得以创建\N{\fs12}you see those there, that got created for us?
Dialogue: 0,0:36:17.02,0:36:20.20,yin,,0,0,0,,这些是NSManagedObject的子类\N{\fs12}So, those are subclasses of NS-managed object,
Dialogue: 0,0:36:20.20,0:36:22.93,yin,,0,0,0,,将一个对象插入数据库时\N{\fs12}and when you insert an object in the database,
Dialogue: 0,0:36:22.94,0:36:25.23,yin,,0,0,0,,或是取回对象 这个我们还没讲到\N{\fs12}or get one back on a fetch, which we haven't talked about,
Dialogue: 0,0:36:25.23,0:36:27.56,yin,,0,0,0,,如果你将一个对象插入数据库 当它返回时\N{\fs12}if you insert an object in the database, when it comes back,
Dialogue: 0,0:36:27.56,0:36:29.58,yin,,0,0,0,,它将不再是NSManagedObject\N{\fs12}instead of being an NS-managed object star,
Dialogue: 0,0:36:29.58,0:36:33.22,yin,,0,0,0,,而是Photo *或Photographer\N{\fs12}it's going to be a photo star, or a photographer star.
Dialogue: 0,0:36:33.22,0:36:35.01,yin,,0,0,0,,这会自动生效\N{\fs12}It's just going to automatically work, that
Dialogue: 0,0:36:35.01,0:36:39.34,yin,,0,0,0,,这个insertNewObjectForEntityForName方法\N{\fs12}insert entity for, for entity for name method,
Dialogue: 0,0:36:39.34,0:36:41.19,yin,,0,0,0,,我总是记不清楚这个名字\N{\fs12}which I can never remember the name of,
Dialogue: 0,0:36:41.19,0:36:46.25,yin,,0,0,0,,如果有子类的话 返回的将是子类\N{\fs12}that will return, if there's a subclass to be had, the subclass.
Dialogue: 0,0:36:46.25,0:36:47.96,yin,,0,0,0,,我们来看看这个的代码\N{\fs12}Alright, so let's look at the code of this,
Dialogue: 0,0:36:47.96,0:36:50.81,yin,,0,0,0,,例如我们看看Photo.h 可以看到\N{\fs12}let's look at photo dot h, for example, so you can see,
Dialogue: 0,0:36:50.81,0:36:53.60,yin,,0,0,0,,Photo.h中有很多@property\N{\fs12}that photo dot h has made an at sign property for all
Dialogue: 0,0:36:53.60,0:36:56.12,yin,,0,0,0,,对应于照片的数据库属性\N{\fs12}of my database properties for photos,
Dialogue: 0,0:36:56.12,0:36:57.72,yin,,0,0,0,,有标题 照片URL\N{\fs12}see title, photo URL,
Dialogue: 0,0:36:57.72,0:37:00.19,yin,,0,0,0,,它们是正确的类型 NSDate NSData\N{\fs12}they're the right type, NS date, NS data,
Dialogue: 0,0:37:00.19,0:37:03.23,yin,,0,0,0,,甚至whoTook的类都正确\N{\fs12}even who took is the right class.
Dialogue: 0,0:37:03.23,0:37:05.62,yin,,0,0,0,,whoTook是一个Photographer\N{\fs12}You see who took is a photographer star.
Dialogue: 0,0:37:05.62,0:37:07.90,yin,,0,0,0,,有时 做这个时\N{\fs12}Now, sometimes you'll just, do this
Dialogue: 0,0:37:07.90,0:37:11.14,yin,,0,0,0,,whoTook将仍然是NSManagedObject\N{\fs12}and who took will still be an NS-managed object star.
Dialogue: 0,0:37:11.14,0:37:12.54,yin,,0,0,0,,为什么呢\N{\fs12}Why does that happen?
Dialogue: 0,0:37:12.54,0:37:14.78,yin,,0,0,0,,这是因为这是一次生成\N{\fs12}That's because this is a one-pass generation,
Dialogue: 0,0:37:14.78,0:37:18.75,yin,,0,0,0,,如果照片是在拍照者之前生成\N{\fs12}and if it happens to generate photo before it generated photographer,
Dialogue: 0,0:37:18.76,0:37:21.32,yin,,0,0,0,,它就不知道拍照者 这个就做不了\N{\fs12}it won't know about photographer and it won't be able to do this.
Dialogue: 0,0:37:21.32,0:37:23.61,yin,,0,0,0,,如果是这样 回到你的映射\N{\fs12}If that happens, just go back to your map
Dialogue: 0,0:37:23.61,0:37:26.34,yin,,0,0,0,,重新生成 这时它们就都存在了\N{\fs12}and generate them again, and this time they'll both exist,
Dialogue: 0,0:37:26.34,0:37:29.04,yin,,0,0,0,,这就能够得到正确的东西了\N{\fs12}beforehand, and so it'll, it'll make the right thing.
Dialogue: 0,0:37:29.04,0:37:31.16,yin,,0,0,0,,你想重新生成多少次都行\N{\fs12}So you can regenerate as many times as you want, and, in fact,
Dialogue: 0,0:37:31.16,0:37:33.97,yin,,0,0,0,,实际上 我们在变更方案\N{\fs12}we're going to be regenerating as we change scheme,
Dialogue: 0,0:37:33.97,0:37:36.35,yin,,0,0,0,,添加实体 添加属性时\N{\fs12}add more entities, add more properties,
Dialogue: 0,0:37:36.35,0:37:38.28,yin,,0,0,0,,也会不断进行重新生成\N{\fs12}we're going to be redoing that regenerate all the time.
Dialogue: 0,0:37:38.28,0:37:39.51,yin,,0,0,0,,有问题\N{\fs12}Question?
Dialogue: 0,0:37:47.46,0:37:49.65,yin,,0,0,0,,是 问题是\N{\fs12}Yes. So, let's, the question is
Dialogue: 0,0:37:49.65,0:37:53.55,yin,,0,0,0,,讲讲为什么那上面用@class Photographer\N{\fs12}tell me about that at sign class photographer towards the top there.
Dialogue: 0,0:37:53.57,0:37:56.72,yin,,0,0,0,,为什么不是#import Photographer.h\N{\fs12}Why is that not pound sign import photographer dot h,
Dialogue: 0,0:37:56.72,0:37:59.21,yin,,0,0,0,,在Objective-C中\N{\fs12}well, in objective c,
Dialogue: 0,0:37:59.21,0:38:03.75,yin,,0,0,0,,如果你只是想声明某个东西是某个特定类型\N{\fs12}if all you want to be able to do is declare that something is of a certain type,
Dialogue: 0,0:38:03.76,0:38:05.17,yin,,0,0,0,,你不需要所有方法\N{\fs12}and you don't need all the methods,
Dialogue: 0,0:38:05.17,0:38:07.52,yin,,0,0,0,,你也不打算调用任何方法\N{\fs12}you're not going to call any of the methods or anything like that,
Dialogue: 0,0:38:07.54,0:38:09.69,yin,,0,0,0,,这时就可以用@class指令\N{\fs12}then you can just do this at sign class directive,
Dialogue: 0,0:38:09.69,0:38:12.57,yin,,0,0,0,,你也可以对协议这样做 你可以说@protocol\N{\fs12}you can do the same thing for protocols, you can say at sign protocol, whatever,
Dialogue: 0,0:38:12.58,0:38:14.82,yin,,0,0,0,,声明这个协议存在\N{\fs12}and just declare that protocol exists, so I don't,
Dialogue: 0,0:38:14.82,0:38:18.36,yin,,0,0,0,,我不打算调用或是实现任何方法\N{\fs12}I'm not going to call any of the methods in it or implement any of the methods.
Dialogue: 0,0:38:18.37,0:38:20.52,yin,,0,0,0,,这是一种前向声明\N{\fs12}So it's kind of a forward declaration
Dialogue: 0,0:38:20.52,0:38:23.01,yin,,0,0,0,,因为最终 会用到这个的任何人\N{\fs12}because eventually anyone who's going to use this is going to
Dialogue: 0,0:38:23.01,0:38:25.42,yin,,0,0,0,,都会开始调用Photographer方法 会导入它\N{\fs12}start calling photographer methods and they're going to import it,
Dialogue: 0,0:38:25.42,0:38:28.58,yin,,0,0,0,,不过 这是一种避免编译器警告的方式\N{\fs12}but this is just a way to suppress that compiler warning,
Dialogue: 0,0:38:28.59,0:38:31.09,yin,,0,0,0,,它没有说未知类Photographer\N{\fs12}so it doesn't say unknown class photographer,
Dialogue: 0,0:38:31.09,0:38:33.87,yin,,0,0,0,,同时又不用导入Photographer.h\N{\fs12}without having to import photographer dot h.
Dialogue: 0,0:38:33.87,0:38:35.54,yin,,0,0,0,,这让它们保持独立\N{\fs12}That kind of keeps them independent,
Dialogue: 0,0:38:35.55,0:38:38.43,yin,,0,0,0,,这样你就不需要在不想的时候生成Photographer.h\N{\fs12}that way you wouldn't have to generate photographer dot h if you didn't want to,
Dialogue: 0,0:38:38.43,0:38:41.00,yin,,0,0,0,,你只想要Photo 这是可以的\N{\fs12}you just wanted photo and then that could be,
Dialogue: 0,0:38:41.00,0:38:42.44,yin,,0,0,0,,其实并不是这样\N{\fs12}although, that wouldn't be true
Dialogue: 0,0:38:42.44,0:38:44.50,yin,,0,0,0,,因为这时它就是NSManagedObject 无论如何\N{\fs12}because then it would be NS-managed project, but anyway,
Dialogue: 0,0:38:44.50,0:38:47.20,yin,,0,0,0,,如果你在这里有NSManagedObject\N{\fs12}if you have NS-managed object, there,
Dialogue: 0,0:38:47.22,0:38:49.49,yin,,0,0,0,,你只需重新生成它们\N{\fs12}then just generate them again.
Dialogue: 0,0:38:49.49,0:38:51.89,yin,,0,0,0,,我们再来看Photographer.h\N{\fs12}Alright, so let's look at photographer dot h,
Dialogue: 0,0:38:51.89,0:38:56.00,yin,,0,0,0,,可以看到 它有name和photos两个属性\N{\fs12}you can see it has name and photos, right, as promised.
Dialogue: 0,0:38:56.01,0:38:58.87,yin,,0,0,0,,photos是一个NSSet 看到了吗\N{\fs12}Photos is an NS set, you see that?
Dialogue: 0,0:38:58.89,0:39:01.85,yin,,0,0,0,,这里它还给了我好多方法\N{\fs12}It also gave me a whole bunch of methods here
Dialogue: 0,0:39:01.85,0:39:05.23,yin,,0,0,0,,用于将照片加入到照片集中\N{\fs12}for adding photos to the photo set,
Dialogue: 0,0:39:05.24,0:39:09.14,yin,,0,0,0,,这个NSSet是一个NS不可变集合\N{\fs12}because that NS set, that's an NS immutable set,
Dialogue: 0,0:39:09.14,0:39:11.68,yin,,0,0,0,,如果我想设置一个照片列表\N{\fs12}so if I wanted to set the list of photos,
Dialogue: 0,0:39:11.70,0:39:13.56,yin,,0,0,0,,我需要创建一个可变集合\N{\fs12}I'd have to create a mutable set,
Dialogue: 0,0:39:13.56,0:39:15.83,yin,,0,0,0,,将我要的所有照片对象放到里面\N{\fs12}put all the photo objects that I wanted in there,
Dialogue: 0,0:39:15.83,0:39:17.91,yin,,0,0,0,,然后设置整个东西\N{\fs12}and then set the whole thing.
Dialogue: 0,0:39:17.93,0:39:22.59,yin,,0,0,0,,你知道的 我的拍照者点photos等于整个集合\N{\fs12}You know, say, you know, my photographer dot photos equals a whole set.
Dialogue: 0,0:39:22.59,0:39:25.52,yin,,0,0,0,,通过addPhotosObject或removePhotosObject\N{\fs12}With add photos object, or remove photos object,
Dialogue: 0,0:39:25.52,0:39:27.84,yin,,0,0,0,,我可以一次加一张照片\N{\fs12}I can just add one photo at a time.
Dialogue: 0,0:39:27.84,0:39:30.35,yin,,0,0,0,,这些都是很便利的方法\N{\fs12}So it's just kind of, those are convenience methods
Dialogue: 0,0:39:30.35,0:39:32.67,yin,,0,0,0,,用于将照片加到照片集\N{\fs12}for adding photos to that photoset.
Dialogue: 0,0:39:32.67,0:39:36.09,yin,,0,0,0,,再来看看这些.m文件\N{\fs12}So let's look at the dot m's of these though.
Dialogue: 0,0:39:36.09,0:39:38.90,yin,,0,0,0,,这些.m你们觉得会是怎样的呢\N{\fs12}And what do you imagine these dot m's look like?
Dialogue: 0,0:39:38.90,0:39:40.71,yin,,0,0,0,,像集合setter和getter\N{\fs12}Like set setters and getters?
Dialogue: 0,0:39:40.71,0:39:43.38,yin,,0,0,0,,或是@synthesize 诸如此类\N{\fs12}Or, at sign synthesizes or something like that?
Dialogue: 0,0:39:43.38,0:39:45.51,yin,,0,0,0,,答案是 这些都没有\N{\fs12}And the answer is none of that.
Dialogue: 0,0:39:45.51,0:39:51.36,yin,,0,0,0,,这些的实现只是@dynamic 用于所有这些属性\N{\fs12}The implementations of these just say at sign dynamic for all of the properties.
Dialogue: 0,0:39:51.36,0:39:55.17,yin,,0,0,0,,@dynamic是什么玩意 我们从没见过这个\N{\fs12}Now, what the heck is at sign dynamic, we never seen that before?
Dialogue: 0,0:39:55.18,0:39:57.52,yin,,0,0,0,,@dynamic其实也就是说\N{\fs12}At sign dynamic basically means
Dialogue: 0,0:39:57.52,0:40:01.45,yin,,0,0,0,,我知道我在做什么 不要为此发出警告\N{\fs12}hey I know what I'm doing, don't generate a warning for this.
Dialogue: 0,0:40:01.45,0:40:06.10,yin,,0,0,0,,NSManagedObject在这里是做什么的呢\N{\fs12}And what does NS-managed object do, in this case,
Dialogue: 0,0:40:06.10,0:40:08.12,yin,,0,0,0,,这里既没有@synthesize\N{\fs12}since there's no at sign synthesize,
Dialogue: 0,0:40:08.12,0:40:09.89,yin,,0,0,0,,也没有setter和getter\N{\fs12}there's no setters and getters here,
Dialogue: 0,0:40:09.89,0:40:12.94,yin,,0,0,0,,实现只是避免发出警告而已\N{\fs12}the implementation just suppresses the warning, basically,
Dialogue: 0,0:40:12.94,0:40:15.94,yin,,0,0,0,,答案是 Objective-C 运行时\N{\fs12}and the answer is objective C, the run time,
Dialogue: 0,0:40:15.96,0:40:18.07,yin,,0,0,0,,有一个避陷机制\N{\fs12}has a trapping mechanism where
Dialogue: 0,0:40:18.07,0:40:19.82,yin,,0,0,0,,如果发送信息给一个对象\N{\fs12}if you send a message to an object,
Dialogue: 0,0:40:19.84,0:40:21.96,yin,,0,0,0,,对象不懂这个方法\N{\fs12}and it doesn't understand that method, right,
Dialogue: 0,0:40:21.97,0:40:24.37,yin,,0,0,0,,无法实现 这就陷住了\N{\fs12}it doesn't implement that, it can trap.
Dialogue: 0,0:40:24.37,0:40:26.81,yin,,0,0,0,,它会尝试别的办法\N{\fs12}And go try to figure out something else to do.
Dialogue: 0,0:40:26.81,0:40:31.10,yin,,0,0,0,,以免崩溃 或是说无法响应选择器\N{\fs12}Without crashing or saying does not respond to selector.
Dialogue: 0,0:40:31.12,0:40:34.90,yin,,0,0,0,,而NSManagedObject 当它获得了不理解的信息时\N{\fs12}And, NS-managed object, when it gets sent a message it doesn't understand,
Dialogue: 0,0:40:34.91,0:40:36.97,yin,,0,0,0,,它会尝试valueForKey\N{\fs12}it tries to do value for key,
Dialogue: 0,0:40:36.98,0:40:39.44,yin,,0,0,0,,或是setValue forKey\N{\fs12}or set value for key on it.
Dialogue: 0,0:40:39.44,0:40:41.44,yin,,0,0,0,,如果这个行不通\N{\fs12}Alright? And if that doesn't work,
Dialogue: 0,0:40:41.44,0:40:43.58,yin,,0,0,0,,这时它就会说 无法识别选择器\N{\fs12}then it says does not recognize selector,
Dialogue: 0,0:40:43.58,0:40:46.02,yin,,0,0,0,,如果行得通 那就成了\N{\fs12}but if it does work, then it just works.
Dialogue: 0,0:40:46.02,0:40:47.61,yin,,0,0,0,,这就是这里的情况\N{\fs12}So that's what's going on here,
Dialogue: 0,0:40:47.61,0:40:48.82,yin,,0,0,0,,对于NSManagedObject\N{\fs12}NS-managed object
Dialogue: 0,0:40:48.82,0:40:52.10,yin,,0,0,0,,setter getter或其它方法发送给它时 它会陷住\N{\fs12}traps when setters and getters or any method is sent to it
Dialogue: 0,0:40:52.10,0:40:54.88,yin,,0,0,0,,它会尝试valueForKey和setValue forKey\N{\fs12}and it tries to do value for key and set value for key,
Dialogue: 0,0:40:54.88,0:40:57.77,yin,,0,0,0,,如果行得通 那就行了 如果行不通 它就会说\N{\fs12}and if it can, all is good, and if it can't, then it says,
Dialogue: 0,0:40:57.77,0:40:59.77,yin,,0,0,0,,无法理解选择器\N{\fs12}does not understand selector.
Dialogue: 0,0:40:59.77,0:41:01.70,yin,,0,0,0,,都理解了吗\N{\fs12}Everyone understand that?
Dialogue: 0,0:41:01.70,0:41:04.93,yin,,0,0,0,,这个@dynamic只是说 别发出警告\N{\fs12}So this at sign dynamic just says don't generate a warning
Dialogue: 0,0:41:04.93,0:41:09.87,yin,,0,0,0,,我没实现setter和getter 但我知道我在做什么\N{\fs12}that I don't implement the setter and getter, because I know what I'm doing.
Dialogue: 0,0:41:10.61,0:41:11.42,yin,,0,0,0,,好\N{\fs12}Alright.
Dialogue: 0,0:41:11.42,0:41:15.71,yin,,0,0,0,,有了这些子类 如何使用它们\N{\fs12}So, so now that I have these subclasses, how do I use them
Dialogue: 0,0:41:15.71,0:41:19.75,yin,,0,0,0,,来使用点符号访问我的属性呢\N{\fs12}to access my attributes using dot notation,
Dialogue: 0,0:41:19.75,0:41:22.53,yin,,0,0,0,,现在我说 NSEntityDescription\N{\fs12}and so now when I say NS entity description,
Dialogue: 0,0:41:22.53,0:41:24.48,yin,,0,0,0,,insertNewObjectForEntityForName\N{\fs12}insert new object for entity for name,
Dialogue: 0,0:41:24.48,0:41:25.76,yin,,0,0,0,,inManagedObjectContext\N{\fs12}in managed object context,
Dialogue: 0,0:41:25.76,0:41:29.42,yin,,0,0,0,,我没说 NSManagedObject *photo等于那个\N{\fs12}instead of saying NS-managed object star photo equals that,
Dialogue: 0,0:41:29.42,0:41:32.17,yin,,0,0,0,,而是说 Photo *photo等于那个\N{\fs12}I say photo star photo equals that,
Dialogue: 0,0:41:32.17,0:41:33.88,yin,,0,0,0,,insertNewObjectForEntityForName\N{\fs12}insert a new object for entity for name,
Dialogue: 0,0:41:33.88,0:41:35.41,yin,,0,0,0,,返回的是id类型\N{\fs12}by the way, returns an ID,
Dialogue: 0,0:41:35.41,0:41:40.80,yin,,0,0,0,,两种情况下 编译器都不会警告你或是报错\N{\fs12}so the compiler is not going to warn you or give an error in either case.
Dialogue: 0,0:41:40.80,0:41:43.30,yin,,0,0,0,,不过如果你说Photo *photo=那个\N{\fs12}But if you say photo star photo equals that,
Dialogue: 0,0:41:43.30,0:41:46.16,yin,,0,0,0,,那么你就可以说 photo.title =\N{\fs12}then you can just say photo dot title equals,
Dialogue: 0,0:41:46.16,0:41:47.55,yin,,0,0,0,,你想要的标题\N{\fs12}whatever you want the title to be,
Dialogue: 0,0:41:47.55,0:41:49.62,yin,,0,0,0,,例如像我这样是从Flickr下载的 我可能会说\N{\fs12}like if I'm downloading this Flickr, I might say
Dialogue: 0,0:41:49.62,0:41:52.40,yin,,0,0,0,,flickrData objectForKey:FLICKR_PHOTO_TITLE\N{\fs12}Flickr data object for key Flickr photo title,
Dialogue: 0,0:41:52.40,0:41:54.25,yin,,0,0,0,,从来自Flickr的字典中将其取出\N{\fs12}get it out of that dictionary that came from Flickr
Dialogue: 0,0:41:54.25,0:41:57.21,yin,,0,0,0,,我刚在数据库中设置了那个标题\N{\fs12}and I'm just setting that title in my database.
Dialogue: 0,0:41:57.21,0:42:01.28,yin,,0,0,0,,100%完全符合大家的预期\N{\fs12}Exactly 100 percent what you would think it would be.
Dialogue: 0,0:42:01.28,0:42:03.37,yin,,0,0,0,,你还可以做如下这些事情\N{\fs12}Here's a whole bunch of other examples of what you would do,
Dialogue: 0,0:42:03.37,0:42:05.77,yin,,0,0,0,,你显然可以调用getter\N{\fs12}you can also obviously call the getter,
Dialogue: 0,0:42:05.77,0:42:08.48,yin,,0,0,0,,我可以说 NSString *myThumbnail\N{\fs12}so I could NS string star my thumbnail
Dialogue: 0,0:42:08.48,0:42:11.03,yin,,0,0,0,,= photo.thumbnailURL\N{\fs12}equals photo dot thumbnail URL.
Dialogue: 0,0:42:11.03,0:42:13.52,yin,,0,0,0,,获得那个缩略图URL\N{\fs12}Get that thumbnail URL out of there, that,
Dialogue: 0,0:42:13.52,0:42:15.42,yin,,0,0,0,,注意 数据库中不能直接放URL\N{\fs12}notice that you can't put URL's in the database,
Dialogue: 0,0:42:15.42,0:42:19.88,yin,,0,0,0,,你需要用字符串 然后把它们转换成URL\N{\fs12}you have to put strings and convert them to URL's.
Dialogue: 0,0:42:19.88,0:42:24.00,yin,,0,0,0,,我可以说 photo.lastViewedDate = [NSDate date]\N{\fs12}I could say photo dot last view date equals NS date date, okay,
Dialogue: 0,0:42:24.00,0:42:26.63,yin,,0,0,0,,NSDate中的date方法能给出当前日期和时间\N{\fs12}the date method in NS date gives the current date and time,
Dialogue: 0,0:42:26.63,0:42:29.77,yin,,0,0,0,,我可以把这设为照片最近浏览的日期\N{\fs12}I could set that as the photo's last viewed date.
Dialogue: 0,0:42:29.77,0:42:31.97,yin,,0,0,0,,我显然还可以说\N{\fs12}I can even, I can obviously do
Dialogue: 0,0:42:31.97,0:42:34.94,yin,,0,0,0,,photo.whoTook = 某个拍照者对象\N{\fs12}photo dot who took equals some photographer object,
Dialogue: 0,0:42:34.94,0:42:39.52,yin,,0,0,0,,我甚至还可以说 photo.whoTook.name =\N{\fs12}but I can even say photo dot who took dot name equals
Dialogue: 0,0:42:39.52,0:42:41.12,yin,,0,0,0,,拍照者的名字\N{\fs12}the name of the photographer.
Dialogue: 0,0:42:41.12,0:42:43.53,yin,,0,0,0,,如果我有一张照片 一个Photo\N{\fs12}So if I have a photo, a photo star,
Dialogue: 0,0:42:43.53,0:42:45.47,yin,,0,0,0,,我可以将名字设为\N{\fs12}I can actually set the name
Dialogue: 0,0:42:45.47,0:42:49.43,yin,,0,0,0,,照片拍照者的名字\N{\fs12}of the photographer who took that photo.
Dialogue: 0,0:42:49.43,0:42:52.22,yin,,0,0,0,,我这里使用的不过是常规的点符号\N{\fs12}So I'm just using dot notations and normal dot notation,
Dialogue: 0,0:42:52.22,0:42:54.52,yin,,0,0,0,,只是Photographer实现name\N{\fs12}it's just that photographer implements name
Dialogue: 0,0:42:54.52,0:42:57.34,yin,,0,0,0,,Photo实现whoTook 而whoTook是一个Photographer\N{\fs12}and photo implements who took and who took is a photographer,
Dialogue: 0,0:42:57.34,0:42:59.35,yin,,0,0,0,,因此有photo.whoTook.name\N{\fs12}therefore, photo dot who took dot name.
Dialogue: 0,0:42:59.35,0:43:00.51,yin,,0,0,0,,有问题\N{\fs12}Question?
Dialogue: 0,0:43:05.48,0:43:06.71,yin,,0,0,0,,问题是\N{\fs12}Alright, so the question is
Dialogue: 0,0:43:06.71,0:43:10.94,yin,,0,0,0,,如果photo.whoTook为nil\N{\fs12}would it auto create, if, if photo dot who took was nil,
Dialogue: 0,0:43:10.94,0:43:14.55,yin,,0,0,0,,它是否会自动在数据库中创建一个拍照者\N{\fs12}would it automatically create a photographer in the database,
Dialogue: 0,0:43:14.55,0:43:16.54,yin,,0,0,0,,这样它就可以说.name=什么\N{\fs12}so that it can say dot name equals whatever.
Dialogue: 0,0:43:16.54,0:43:17.71,yin,,0,0,0,,答案是否定的\N{\fs12}And the answer is no.
Dialogue: 0,0:43:17.71,0:43:19.94,yin,,0,0,0,,这是普通的属性\N{\fs12}This is normal properties.
Dialogue: 0,0:43:19.94,0:43:21.58,yin,,0,0,0,,如果photo.whoTook为nil\N{\fs12}If photo dot who took is nil,
Dialogue: 0,0:43:21.58,0:43:25.61,yin,,0,0,0,,那么setName将会被发送给nil 什么都不做\N{\fs12}then the set name will just be sent to nil, it will do nothing.
Dialogue: 0,0:43:25.61,0:43:28.13,yin,,0,0,0,,唯一在数据库中获得东西的方法是\N{\fs12}So the only way to get things in the database is
Dialogue: 0,0:43:28.13,0:43:31.46,yin,,0,0,0,,前面我们看到的insertNewObjectForEntityForName\N{\fs12}insert for entity for name, the thing we saw above there,
Dialogue: 0,0:43:31.46,0:43:33.48,yin,,0,0,0,,前面我们看到的insertNewObjectForEntityForName\N{\fs12}insert new object for entity for name,
Dialogue: 0,0:43:33.48,0:43:36.70,yin,,0,0,0,,不会自动创建[声音不清]\N{\fs12}okay, it doesn't auto create the [inaudible].
Dialogue: 0,0:43:36.70,0:43:39.30,yin,,0,0,0,,好 这就是我访问属性的做法\N{\fs12}Okay. So that's how I access my attributes.
Dialogue: 0,0:43:39.30,0:43:45.94,yin,,0,0,0,,如果我想在照片和拍照者类中添加代码又该怎样呢\N{\fs12}What if I, though, wanted to add code to my photo or my photographer classes?
Dialogue: 0,0:43:45.94,0:43:51.07,yin,,0,0,0,,我可以把代码放到Photo.m和h中 不过这有个问题\N{\fs12}I could put that code in photo dot m and h, but that would be a problem.
Dialogue: 0,0:43:51.07,0:43:52.49,yin,,0,0,0,,为什么呢\N{\fs12}And why is that?
Dialogue: 0,0:43:52.49,0:43:57.56,yin,,0,0,0,,出问题的原因在于… 首先 为什么我要这样做\N{\fs12}Well, that might be a problem because, well, first of all, why would I want to do that?
Dialogue: 0,0:43:57.56,0:44:00.91,yin,,0,0,0,,假设我想加一个class方法到Photo\N{\fs12}Let's say I wanted to add a class method to photo
Dialogue: 0,0:44:00.91,0:44:04.99,yin,,0,0,0,,将Flickr数据库 Flickr字典作为参数\N{\fs12}that took a Flickr database, a Flickr dictionary as an argument
Dialogue: 0,0:44:04.99,0:44:08.86,yin,,0,0,0,,在数据库中创建一张照片\N{\fs12}and created a photo in, in the database,
Dialogue: 0,0:44:08.86,0:44:12.01,yin,,0,0,0,,这在Photo中将是一个很便利的工具方法\N{\fs12}that would be an awfully convenient utility method to have in photo,
Dialogue: 0,0:44:12.01,0:44:14.59,yin,,0,0,0,,我可以说 开方括号 Photo\N{\fs12}right, I could open square bracket photo,
Dialogue: 0,0:44:14.59,0:44:17.86,yin,,0,0,0,,在这个context下用这个Flickr数据创建一张照片\N{\fs12}make a photo with this Flickr data, in a context,
Dialogue: 0,0:44:17.86,0:44:19.68,yin,,0,0,0,,它会这样做 这很酷\N{\fs12}and it could do it, right, so that would be cool.
Dialogue: 0,0:44:19.68,0:44:22.11,yin,,0,0,0,,或者 假设我想导出一个属性\N{\fs12}Or if I want to derive a property, like,
Dialogue: 0,0:44:22.11,0:44:24.73,yin,,0,0,0,,我有这个很好的属性thumbnailURL\N{\fs12}I've got this nice property thumbnail URL,
Dialogue: 0,0:44:24.73,0:44:27.22,yin,,0,0,0,,但很不幸 它是一个字符串\N{\fs12}but unfortunately it's a string, what if I wanted
Dialogue: 0,0:44:27.22,0:44:30.87,yin,,0,0,0,,如果我想要一个实际的UIImage缩略图呢\N{\fs12}to have a UI image which was the thumbnail UI image,
Dialogue: 0,0:44:30.87,0:44:33.67,yin,,0,0,0,,这时我就可以在Photo中有一个方法\N{\fs12}then I could have a little method in photo that just
Dialogue: 0,0:44:33.69,0:44:37.15,yin,,0,0,0,,只需要self.thumbnailURL 转为URL\N{\fs12}self dot thumbnail URL, turn it into URL,
Dialogue: 0,0:44:37.15,0:44:40.31,yin,,0,0,0,,然后查一下 并不一定要是因特网\N{\fs12}go look it up somewhere, preferably not on the internet,
Dialogue: 0,0:44:40.31,0:44:42.25,yin,,0,0,0,,或许吧 或许只是阻塞\N{\fs12}but maybe, maybe it would just be a blocking,
Dialogue: 0,0:44:42.25,0:44:44.56,yin,,0,0,0,,一个进行阻塞的方法 我不知道\N{\fs12}a method that would block, I don't know.
Dialogue: 0,0:44:44.56,0:44:47.60,yin,,0,0,0,,能够把这个加到Photo中也很酷 换句话说\N{\fs12}So that would be cool to add to photo, as well, so in other words, it would be nice
Dialogue: 0,0:44:47.60,0:44:49.85,yin,,0,0,0,,如果我们能将照片相关的所有这些\N{\fs12}if we could put all our photo-related stuff
Dialogue: 0,0:44:49.85,0:44:51.14,yin,,0,0,0,,放到Photo.m和h中\N{\fs12}in photo dot m and h,
Dialogue: 0,0:44:51.14,0:44:54.76,yin,,0,0,0,,而不只是各种属性的setter和getter 那就好了\N{\fs12}not just the setters and getters for all our properties.
Dialogue: 0,0:44:54.76,0:44:57.19,yin,,0,0,0,,为什么说这个存在问题呢 问题在于\N{\fs12}Why this is a problem though, the problem is
Dialogue: 0,0:44:57.19,0:44:59.18,yin,,0,0,0,,在改变可视映射时\N{\fs12}as you change your visual map,
Dialogue: 0,0:44:59.18,0:45:02.59,yin,,0,0,0,,你会不断调用重新生成方法\N{\fs12}you're constantly calling that regenerate method,
Dialogue: 0,0:45:02.59,0:45:04.94,yin,,0,0,0,,菜单项 创建NSManagedObject\N{\fs12}you know, menu item, the create NS-managed object,
Dialogue: 0,0:45:04.94,0:45:07.64,yin,,0,0,0,,这就总在重写它们\N{\fs12}so it's called always rewriting them, okay,
Dialogue: 0,0:45:07.64,0:45:10.95,yin,,0,0,0,,其中的东西总会被破坏 因此我们不能这样做\N{\fs12}it's always blasting what's in there, so we can't do it.
Dialogue: 0,0:45:10.95,0:45:14.09,yin,,0,0,0,,如果我们编辑了Photo.m和h 那么我们就不再能\N{\fs12}If we edit photo m and h then we can no longer go
Dialogue: 0,0:45:14.09,0:45:17.50,yin,,0,0,0,,在Xcode中说 创建NSManagedObject的子类\N{\fs12}into Xcode and say create NS managed object subclasses for me anymore,
Dialogue: 0,0:45:17.50,0:45:18.27,yin,,0,0,0,,这很不好\N{\fs12}and that's a bummer.
Dialogue: 0,0:45:18.27,0:45:20.56,yin,,0,0,0,,因为 特别是在开发中 我们会迭代\N{\fs12}Because, especially in development, we're iterating,
Dialogue: 0,0:45:20.56,0:45:23.05,yin,,0,0,0,,会添加属性 会添加实体\N{\fs12}we're adding some properties, we're adding some entities,
Dialogue: 0,0:45:23.05,0:45:25.28,yin,,0,0,0,,改变关系 我们希望不断回头\N{\fs12}changing some relationships, we want to constantly be going back
Dialogue: 0,0:45:25.28,0:45:27.87,yin,,0,0,0,,重新生成这些东西\N{\fs12}and regenerating those things.
Dialogue: 0,0:45:27.87,0:45:29.51,yin,,0,0,0,,有问题吗\N{\fs12}Question?
Dialogue: 0,0:45:45.13,0:45:48.35,yin,,0,0,0,,问题是 我能否设定默认值\N{\fs12}Yeah, so, the question is could I set the default for the
Dialogue: 0,0:45:48.35,0:45:51.71,yin,,0,0,0,,让whoTook属性为Photographer alloc init\N{\fs12}who took property to be photographer alloc init,
Dialogue: 0,0:45:51.71,0:45:54.91,yin,,0,0,0,,这样默认就总是创建一个新的拍摄者\N{\fs12}basically, so the, the default would always default to creating a photographer
Dialogue: 0,0:45:54.91,0:45:57.36,yin,,0,0,0,,很不幸 这很酷 但你做不到\N{\fs12}and unfortunately you can't do that, but that'd be cool.
Dialogue: 0,0:45:58.53,0:46:03.33,yin,,0,0,0,,默认都必须是我说的静态的 [声音不清]\N{\fs12}The defaults all have to be kind of like I say, static, [inaudible].
Dialogue: 0,0:46:04.44,0:46:07.04,yin,,0,0,0,,我们要怎么做呢\N{\fs12}Alright, so, what are we going to do then, because we want
Dialogue: 0,0:46:07.04,0:46:09.52,yin,,0,0,0,,我希望往Photo.m和h中添加方法\N{\fs12}to add methods to photo dot m and h,
Dialogue: 0,0:46:09.52,0:46:11.39,yin,,0,0,0,,我们希望往Photographer.m和h中添加方法\N{\fs12}and we want to add methods to photographer at m and h,
Dialogue: 0,0:46:11.39,0:46:13.62,yin,,0,0,0,,但我们又不想去碰这些文件\N{\fs12}but we don't want to have to touch those files.
Dialogue: 0,0:46:13.62,0:46:16.97,yin,,0,0,0,,我们将用到到一个新的Objective-C语言特性\N{\fs12}Well, we're going to use a new objective C language feature.
Dialogue: 0,0:46:16.97,0:46:19.24,yin,,0,0,0,,这是我要教你们的最后一个\N{\fs12}The last one I'm going to teach you.
Dialogue: 0,0:46:19.24,0:46:22.42,yin,,0,0,0,,这之后你们都要掌握 它叫category(类别)\N{\fs12}I think you know them all after this, called categories.
Dialogue: 0,0:46:22.42,0:46:29.21,yin,,0,0,0,,category让你能够添加方法到一个类\N{\fs12}Categories, let's you add a method to a class
Dialogue: 0,0:46:29.21,0:46:32.63,yin,,0,0,0,,而无需创建它的子类\N{\fs12}without sub classing it.
Dialogue: 0,0:46:33.48,0:46:34.88,yin,,0,0,0,,而且\N{\fs12}And,
Dialogue: 0,0:46:34.88,0:46:39.54,yin,,0,0,0,,你甚至不需要有该类的源代码\N{\fs12}you don't even have to have the source for that class that you're adding the method to.
Dialogue: 0,0:46:39.54,0:46:41.71,yin,,0,0,0,,有哪些例子呢\N{\fs12}So what are some of examples of this?
Dialogue: 0,0:46:41.71,0:46:45.54,yin,,0,0,0,,在UIKit中 NSAttributedString有个方法\N{\fs12}Well, in the UI kit, there's a method NS attributed string,
Dialogue: 0,0:46:45.54,0:46:46.59,yin,,0,0,0,,叫drawAtPoint\N{\fs12}draw at point,
Dialogue: 0,0:46:46.59,0:46:48.86,yin,,0,0,0,,而NSAttributedString在Foundation中\N{\fs12}well NS attributed string is in foundation,
Dialogue: 0,0:46:48.86,0:46:50.29,yin,,0,0,0,,它并不是UIKit的东西\N{\fs12}it's not a UI kit thing,
Dialogue: 0,0:46:50.29,0:46:53.53,yin,,0,0,0,,它只是一个通用的带有属性的字符串\N{\fs12}it's just a generic attributes on a string thing,
Dialogue: 0,0:46:53.53,0:46:56.26,yin,,0,0,0,,但UIKit添加了所有这些 drawAtPoint是一例\N{\fs12}but UI kit adds all these, you know, draw at point,
Dialogue: 0,0:46:56.26,0:46:59.27,yin,,0,0,0,,它还定义了其它各种属性\N{\fs12}and it defines all these other attributes that can be on there,
Dialogue: 0,0:46:59.27,0:47:01.34,yin,,0,0,0,,这都是在UIKit中进行的\N{\fs12}and it does all that in UI kit,
Dialogue: 0,0:47:01.34,0:47:04.39,yin,,0,0,0,,这甚至不需要NSAttributedString的源代码\N{\fs12}and it doesn't even need the source for NS attributed string.
Dialogue: 0,0:47:04.39,0:47:06.76,yin,,0,0,0,,只需要知道该类存在即可\N{\fs12}It just needs to know that class exists.
Dialogue: 0,0:47:06.76,0:47:08.33,yin,,0,0,0,,NSIndexPath也一样\N{\fs12}Same thing, NS index path.
Dialogue: 0,0:47:08.33,0:47:11.68,yin,,0,0,0,,我只说了NSIndexPath有两个方法\N{\fs12}I told you NS index path only had two methods on it,
Dialogue: 0,0:47:11.68,0:47:12.98,yin,,0,0,0,,row和section\N{\fs12}row and section,
Dialogue: 0,0:47:12.98,0:47:15.44,yin,,0,0,0,,实际上 NSIndexPath有很多方法\N{\fs12}but actually NS index path has a whole bunch of methods on it,
Dialogue: 0,0:47:15.44,0:47:16.54,yin,,0,0,0,,它在Foundation中\N{\fs12}it's in foundation,
Dialogue: 0,0:47:16.54,0:47:18.91,yin,,0,0,0,,它只是一个通用的索引指针\N{\fs12}it's just a generic index pointer
Dialogue: 0,0:47:18.91,0:47:22.67,yin,,0,0,0,,指向任意的链表\N{\fs12}into an arbitrary, you know, linked list of items,
Dialogue: 0,0:47:22.67,0:47:25.50,yin,,0,0,0,,只是UITableView希望调用row和section\N{\fs12}it's just that UI table view wants to call it row and section,
Dialogue: 0,0:47:25.50,0:47:29.96,yin,,0,0,0,,于是它将row和section属性添加到NSIndexPath\N{\fs12}so it adds the property's row and section to NS index path,
Dialogue: 0,0:47:29.96,0:47:32.95,yin,,0,0,0,,虽然UITableView在UIKit中\N{\fs12}even though, again, table view is in UI kit,
Dialogue: 0,0:47:32.95,0:47:36.72,yin,,0,0,0,,但NSIndexPath却在Foundation中 框架都不一样\N{\fs12}NS index path is in foundation, not even the same framework.
Dialogue: 0,0:47:36.72,0:47:38.93,yin,,0,0,0,,这是如何工作的呢\N{\fs12}So, how does this work?
Dialogue: 0,0:47:38.93,0:47:40.79,yin,,0,0,0,,它是这样的\N{\fs12}And it looks like this.
Dialogue: 0,0:47:40.79,0:47:43.03,yin,,0,0,0,,你有一个接口和实现\N{\fs12}You have an interface and implementation,
Dialogue: 0,0:47:43.03,0:47:45.69,yin,,0,0,0,,就像类 不过你这里说的不是\N{\fs12}just like the class, but you say, instead of saying
Dialogue: 0,0:47:45.69,0:47:49.44,yin,,0,0,0,,@interface 类名 冒号 超类\N{\fs12}at sign interface, name of class, colon, superclass,
Dialogue: 0,0:47:49.44,0:47:53.40,yin,,0,0,0,,而是@interface 要添加方法的类名\N{\fs12}you say at sign interface, the name of the class I want to add methods to,
Dialogue: 0,0:47:53.40,0:47:56.28,yin,,0,0,0,,这里括号中就是category的名称\N{\fs12}and then in parentheses, what I'm going to call this category,
Dialogue: 0,0:47:56.28,0:47:57.40,yin,,0,0,0,,任何名字都行\N{\fs12}and you can call it anything you want.
Dialogue: 0,0:47:57.40,0:48:00.23,yin,,0,0,0,,我叫它AddOn 你也可以叫它Flickr\N{\fs12}So here I've called it add on, but you could call it Flickr,
Dialogue: 0,0:48:00.23,0:48:02.04,yin,,0,0,0,,或是Create 什么都行\N{\fs12}you could call it Create, whatever you wanted to do.
Dialogue: 0,0:48:02.04,0:48:05.33,yin,,0,0,0,,然后你只需要列出你想添加的所有方法\N{\fs12}And then you just list all the methods you want to add to this class,
Dialogue: 0,0:48:05.34,0:48:07.12,yin,,0,0,0,,也可以是属性\N{\fs12}and they can be properties,
Dialogue: 0,0:48:07.12,0:48:10.23,yin,,0,0,0,,这里我有只读属性 还有另外一个方法\N{\fs12}here I have a read-only property and another method.
Dialogue: 0,0:48:10.23,0:48:13.27,yin,,0,0,0,,把这些东西添加到这里之后 @end收尾\N{\fs12}You just add, put them on there, and then at sign end.
Dialogue: 0,0:48:13.27,0:48:15.25,yin,,0,0,0,,你只需要做这些\N{\fs12}So that's all you need to do.
Dialogue: 0,0:48:15.25,0:48:17.45,yin,,0,0,0,,想要调用这些方法的人只需要\N{\fs12}Now anyone who wants to call these methods just has
Dialogue: 0,0:48:17.45,0:48:20.72,yin,,0,0,0,,导入这个的头文件\N{\fs12}to import this header file that has this in there.
Dialogue: 0,0:48:20.72,0:48:23.68,yin,,0,0,0,,不过 category有一个很大的局限\N{\fs12}Now, there's a big restriction on categories,
Dialogue: 0,0:48:23.68,0:48:27.65,yin,,0,0,0,,巨大的局限 你不能使用实例变量\N{\fs12}gigantic restriction, you can't use any instance variables.
Dialogue: 0,0:48:27.65,0:48:30.37,yin,,0,0,0,,你的方法的实现\N{\fs12}So the implementation of your methods
Dialogue: 0,0:48:30.37,0:48:34.24,yin,,0,0,0,,不能使用任何实例变量 或是任何存储数据\N{\fs12}cannot use any instance variables, or any stored data at all.
Dialogue: 0,0:48:34.24,0:48:37.77,yin,,0,0,0,,有办法绕过 不过这都是非法的\N{\fs12}There are ways kind of around it, but they're hacks.
Dialogue: 0,0:48:37.77,0:48:40.28,yin,,0,0,0,,一般而言 category只适用于方法\N{\fs12}So generally, categories is for methods,
Dialogue: 0,0:48:40.28,0:48:42.46,yin,,0,0,0,,没有状态 这有什么好的\N{\fs12}they have no state, well what good is that?
Dialogue: 0,0:48:42.46,0:48:46.28,yin,,0,0,0,,你添加方法的对象本身 它有很多状态\N{\fs12}Well, the object that you're adding the methods to, it has a lot of state
Dialogue: 0,0:48:46.28,0:48:48.48,yin,,0,0,0,,因此 这些方法的显现\N{\fs12}and so these methods would be all implemented
Dialogue: 0,0:48:48.48,0:48:51.94,yin,,0,0,0,,都可以使用针对对象的状态\N{\fs12}by using the state of the object you're adding the methods to.
Dialogue: 0,0:48:51.94,0:48:55.29,yin,,0,0,0,,让我们看看这两个方法的例子\N{\fs12}So, like let's look at an example for these two methods.
Dialogue: 0,0:48:55.29,0:48:57.61,yin,,0,0,0,,这是实现 @implementation\N{\fs12}So here's the implementation, the at sign implementation
Dialogue: 0,0:48:57.61,0:49:00.76,yin,,0,0,0,,Photo 照片 AddOn category\N{\fs12}of photo, photos add on category,
Dialogue: 0,0:49:00.76,0:49:03.25,yin,,0,0,0,,我把这两个方法加到Photo类\N{\fs12}so I'm adding these two methods to the photo class,
Dialogue: 0,0:49:03.25,0:49:05.52,yin,,0,0,0,,这是我们在Xcode中生成的类\N{\fs12}which is that thing we generated in Xcode,
Dialogue: 0,0:49:05.52,0:49:06.22,yin,,0,0,0,,图像\N{\fs12}image,
Dialogue: 0,0:49:06.22,0:49:09.47,yin,,0,0,0,,注意 这里只用了self.photoURL\N{\fs12}you see it just uses self dot photo URL,
Dialogue: 0,0:49:09.47,0:49:11.36,yin,,0,0,0,,self是照片\N{\fs12}self, is the photo,
Dialogue: 0,0:49:11.36,0:49:13.56,yin,,0,0,0,,因为这些方法被加到了Photo类\N{\fs12}because these methods are being added to photo class.
Dialogue: 0,0:49:13.56,0:49:15.33,yin,,0,0,0,,因此self是照片\N{\fs12}So, self is a photo,
Dialogue: 0,0:49:15.33,0:49:19.04,yin,,0,0,0,,.photoURL能获取属性 获取数据\N{\fs12}dot photo URL gets that attribute, gets that, that data.
Dialogue: 0,0:49:19.04,0:49:23.68,yin,,0,0,0,,也许 这里实际上应该是\N{\fs12}That's probably, it actually probably would be self,
Dialogue: 0,0:49:23.68,0:49:26.44,yin,,0,0,0,,来自字符串的NSURL\N{\fs12}it would NS URL from string,
Dialogue: 0,0:49:26.45,0:49:28.35,yin,,0,0,0,,self.photoURL字符串\N{\fs12}self dot photo URL string,
Dialogue: 0,0:49:28.35,0:49:30.33,yin,,0,0,0,,因为我们无法直接将URL放到数据库中\N{\fs12}because we can't put URL's directly in the database,
Dialogue: 0,0:49:30.33,0:49:31.86,yin,,0,0,0,,无论如何 然后我们说return\N{\fs12}but anyway, and then it would say return
Dialogue: 0,0:49:31.86,0:49:35.14,yin,,0,0,0,,UIImage imageWithData 返回图像\N{\fs12}UI image, image with data, and return the image.
Dialogue: 0,0:49:35.14,0:49:37.23,yin,,0,0,0,,这里没有实例变量\N{\fs12}So no instance variables there,
Dialogue: 0,0:49:37.23,0:49:39.17,yin,,0,0,0,,isOld也一样\N{\fs12}it's not using any [inaudible], same thing with is old,
Dialogue: 0,0:49:39.17,0:49:42.58,yin,,0,0,0,,它可以说self.uploadDate timeIntervalSinceNow\N{\fs12}it might say self dot upload date, time interval since now
Dialogue: 0,0:49:42.58,0:49:44.42,yin,,0,0,0,,大于一天时间\N{\fs12}is greater than a day ago.
Dialogue: 0,0:49:45.31,0:49:46.51,yin,,0,0,0,,有问题\N{\fs12}Question?
Dialogue: 0,0:49:51.50,0:49:54.01,yin,,0,0,0,,不 我是说 你不能声明任何新的\N{\fs12}No I mean you cannot declare any new ones.
Dialogue: 0,0:49:54.01,0:49:56.86,yin,,0,0,0,,这里不能使用任何实例变量\N{\fs12}So you cannot use any instance variables here,
Dialogue: 0,0:49:56.86,0:49:58.59,yin,,0,0,0,,你只能用类中的实例变量\N{\fs12}you could only use instance variables in the class,
Dialogue: 0,0:49:58.59,0:50:01.51,yin,,0,0,0,,如果你要用类的 你必须通过属性等让其为公共\N{\fs12}you're adding a two if they make them public, via properties or whatever.
Dialogue: 0,0:50:09.24,0:50:12.46,yin,,0,0,0,,category不能有任何实例变量 句号\N{\fs12}Okay. You can't have any instance variables in a category, period.
Dialogue: 0,0:50:12.46,0:50:14.46,yin,,0,0,0,,你不能声明任何一个\N{\fs12}Okay, you cannot declare any.
Dialogue: 0,0:50:14.46,0:50:16.21,yin,,0,0,0,,如果你想使用你要添加方法的类的实例变量\N{\fs12}If you want to use instance variables
Dialogue: 0,0:50:16.21,0:50:18.45,yin,,0,0,0,,如果你想使用你要添加方法的类的实例变量\N{\fs12}of the class you're adding the methods to,
Dialogue: 0,0:50:18.45,0:50:20.37,yin,,0,0,0,,这些变量必须是公共的\N{\fs12}then they have to be public
Dialogue: 0,0:50:20.37,0:50:23.20,yin,,0,0,0,,因为你只能看到公共头文件\N{\fs12}because all you can do is see the public header file,
Dialogue: 0,0:50:23.20,0:50:25.22,yin,,0,0,0,,你看不到Photo的实现\N{\fs12}you don't see the implementation of photo,
Dialogue: 0,0:50:25.22,0:50:26.79,yin,,0,0,0,,加这些方法时你是盲的\N{\fs12}you're adding these methods to it blind,
Dialogue: 0,0:50:26.79,0:50:29.69,yin,,0,0,0,,你对这些实现一无所知\N{\fs12}you don't know anything about its implementation.
Dialogue: 0,0:50:31.14,0:50:33.26,yin,,0,0,0,,总之 这就是category\N{\fs12}So anyway, so this is called categories,
Dialogue: 0,0:50:33.26,0:50:37.24,yin,,0,0,0,,我没有很早就讲这个 因为它很容易被滥用\N{\fs12}I don't teach this to you early on because this is easily abused, alright?
Dialogue: 0,0:50:37.24,0:50:40.84,yin,,0,0,0,,你可以为UIKit类添加方法 你没有理由不可以\N{\fs12}You could add methods to UI kit classes, there's no reason you couldn't.
Dialogue: 0,0:50:40.84,0:50:44.01,yin,,0,0,0,,你可以Foundation类添加方法\N{\fs12}You could add methods to, you know, foundation classes,
Dialogue: 0,0:50:44.01,0:50:45.71,yin,,0,0,0,,完全不受限\N{\fs12}completely unrestricted.
Dialogue: 0,0:50:45.71,0:50:47.71,yin,,0,0,0,,只是这样做的时候\N{\fs12}The only thing is when you start doing that,
Dialogue: 0,0:50:47.71,0:50:49.79,yin,,0,0,0,,你的代码会变得有些模糊不清\N{\fs12}you're code can kind of get a little obfuscated,
Dialogue: 0,0:50:49.79,0:50:52.30,yin,,0,0,0,,人们会说 什么 我不知道\N{\fs12}people are like what, I didn't know that, you know,
Dialogue: 0,0:50:52.30,0:50:54.79,yin,,0,0,0,,这个UIKit类有这个方法\N{\fs12}this UI kit class had that method,
Dialogue: 0,0:50:54.79,0:50:56.77,yin,,0,0,0,,因为这是你在category中加的\N{\fs12}and it's because you've added it as a category over here
Dialogue: 0,0:50:56.77,0:50:58.57,yin,,0,0,0,,这会变得很难理解\N{\fs12}and so it's just kind of hard to understand,
Dialogue: 0,0:50:58.57,0:51:02.00,yin,,0,0,0,,不过有时像这样 我们希望这样做 原因在于\N{\fs12}but sometimes like this, we want to do that because it kind
Dialogue: 0,0:51:02.00,0:51:04.72,yin,,0,0,0,,它能将代码汇集在一起 让其看起来很好\N{\fs12}of it, it collects our code and it makes things look nicer.
Dialogue: 0,0:51:04.72,0:51:05.70,yin,,0,0,0,,有问题\N{\fs12}Question?
Dialogue: 0,0:51:10.41,0:51:13.59,yin,,0,0,0,,问题是 我能否重写\N{\fs12}So the question is can I override or overwrite,
Dialogue: 0,0:51:13.59,0:51:16.28,yin,,0,0,0,,一个已经存在的方法\N{\fs12}really, a method that already exists?
Dialogue: 0,0:51:16.28,0:51:19.05,yin,,0,0,0,,答案是 不要这样做\N{\fs12}And the answer is don't do that.
Dialogue: 0,0:51:19.05,0:51:21.56,yin,,0,0,0,,这会很难理解\N{\fs12}That is really hard to understand
Dialogue: 0,0:51:21.56,0:51:24.27,yin,,0,0,0,,读你代码的人会摸不着头脑\N{\fs12}for people reading your code, what you mean by that.
Dialogue: 0,0:51:24.27,0:51:29.04,yin,,0,0,0,,只添加方法 不要尝试替换或是按别的方式\N{\fs12}So only add methods, don't try to replace or otherwise,
Dialogue: 0,0:51:29.04,0:51:31.74,yin,,0,0,0,,使用相同方法\N{\fs12}you know, use the same method.
Dialogue: 0,0:51:31.74,0:51:33.66,yin,,0,0,0,,问得很好\N{\fs12}That's a good question.
Dialogue: 0,0:51:33.66,0:51:36.51,yin,,0,0,0,,好 这里有一个很常见的category方法\N{\fs12}Alright, so, here's a common category method
Dialogue: 0,0:51:36.51,0:51:39.94,yin,,0,0,0,,我们经常会给NSManagedObject的子类添加\N{\fs12}we add for subclasses of NS-managed object,
Dialogue: 0,0:51:39.94,0:51:41.29,yin,,0,0,0,,也就是创建\N{\fs12}which is creation. So,
Dialogue: 0,0:51:41.31,0:51:45.86,yin,,0,0,0,,假设我有这个category 叫作Photo (Create)\N{\fs12}imagine I had this category called photo create,
Dialogue: 0,0:51:45.86,0:51:48.31,yin,,0,0,0,,这是我要添加的方法\N{\fs12}and I'm going to have this method that I'm going to add
Dialogue: 0,0:51:48.31,0:51:50.37,yin,,0,0,0,,Photo在ManagedObjectContext\N{\fs12}to photo called photo with Flickr data
Dialogue: 0,0:51:50.37,0:51:52.17,yin,,0,0,0,,调用photoWithFlickrData\N{\fs12}in managed object context,
Dialogue: 0,0:51:52.17,0:51:56.26,yin,,0,0,0,,它会查询数据库 看这张照片是否存在\N{\fs12}and it's going to query that database, see if that photo already exists,
Dialogue: 0,0:51:56.26,0:51:58.20,yin,,0,0,0,,如果存在就将它返回 如果不存在\N{\fs12}it's going to return it if it does, if not,
Dialogue: 0,0:51:58.20,0:52:00.53,yin,,0,0,0,,就insertNewObjectForEntityForName\N{\fs12}it's going to insert new object for entity for name,
Dialogue: 0,0:52:00.53,0:52:02.95,yin,,0,0,0,,从你发送的字典初始化照片\N{\fs12}initialize the photo from the dictionary you sent,
Dialogue: 0,0:52:02.95,0:52:06.51,yin,,0,0,0,,等等等 这一个方法会做所有这些工作\N{\fs12}etc. etc. etc. It's going to do all the work, all in one method.
Dialogue: 0,0:52:06.51,0:52:10.05,yin,,0,0,0,,如果有人想用Flickr数据创建一张新照片\N{\fs12}So that if someone wants to create a new photo using Flickr data,
Dialogue: 0,0:52:10.05,0:52:13.38,yin,,0,0,0,,他可以调用这个方法 Photo中的类方法\N{\fs12}they can just call this one method, class method in photo.
Dialogue: 0,0:52:13.38,0:52:17.24,yin,,0,0,0,,这就是我们这样做的经典原因\N{\fs12}So this is a classic reason why we would do this.
Dialogue: 0,0:52:18.61,0:52:20.64,yin,,0,0,0,,如何创建一个category呢\N{\fs12}So, how do we create a category.
Dialogue: 0,0:52:20.64,0:52:23.18,yin,,0,0,0,,我们到Objective-C 当然是新文件了\N{\fs12}So we go to objective C, new file, of course,
Dialogue: 0,0:52:23.18,0:52:27.33,yin,,0,0,0,,这里我们要的不是这里的Objective-C类\N{\fs12}and instead of saying objective C class, right, you see objective C class there,
Dialogue: 0,0:52:27.33,0:52:29.54,yin,,0,0,0,,而是Objective-C category\N{\fs12}you say objective C category,
Dialogue: 0,0:52:29.54,0:52:32.40,yin,,0,0,0,,这里Xcode不会问你要类和超类\N{\fs12}and instead of asking you the class and the super class,
Dialogue: 0,0:52:32.40,0:52:35.12,yin,,0,0,0,,它只会问你 你想把它添加到什么类去\N{\fs12}it's going to say what class do you want to add a method to
Dialogue: 0,0:52:35.12,0:52:36.63,yin,,0,0,0,,以及category取什么名称\N{\fs12}and what do you want to call this category.
Dialogue: 0,0:52:36.63,0:52:38.38,yin,,0,0,0,,我要给Photo添加方法\N{\fs12}So I'm going to add methods to photo,
Dialogue: 0,0:52:38.38,0:52:41.08,yin,,0,0,0,,而category名叫Flickr\N{\fs12}and I'm going to call the category Flickr.
Dialogue: 0,0:52:41.08,0:52:44.84,yin,,0,0,0,,这时 它创建了Photo+Flickr.h\N{\fs12}And then it creates photo plus Flickr dot h
Dialogue: 0,0:52:44.84,0:52:47.29,yin,,0,0,0,,和Photo+Flickr.m\N{\fs12}and photo plus Flickr dot m.
Dialogue: 0,0:52:47.29,0:52:51.14,yin,,0,0,0,,这是category的标准命名惯例\N{\fs12}Now, this is kind of the standard naming convention, for a category.
Dialogue: 0,0:52:51.14,0:52:56.54,yin,,0,0,0,,要加方法的类名+category名\N{\fs12}You call it name of the class you're adding the methods to plus the name of the category.
Dialogue: 0,0:52:56.54,0:52:58.44,yin,,0,0,0,,+表示分隔符\N{\fs12}Okay, the plus as a separator,
Dialogue: 0,0:52:58.44,0:53:01.53,yin,,0,0,0,,同时也表示你要加这些方法\N{\fs12}and also because plus means you're adding these methods to it.
Dialogue: 0,0:53:01.53,0:53:02.74,yin,,0,0,0,,这是命名惯例\N{\fs12}So it's kind of a naming convention.
Dialogue: 0,0:53:02.74,0:53:04.02,yin,,0,0,0,,这些头文件\N{\fs12}You could call those header file
Dialogue: 0,0:53:04.02,0:53:06.16,yin,,0,0,0,,以及实现文件 其实你叫什么都可以\N{\fs12}and the implementation file anything you want, really,
Dialogue: 0,0:53:06.16,0:53:09.00,yin,,0,0,0,,不过我们100%都会这么叫\N{\fs12}but this is what we one hundred percent of the time call it.
Dialogue: 0,0:53:09.00,0:53:11.56,yin,,0,0,0,,类名+category名\N{\fs12}Name of class, plus category.
Dialogue: 0,0:53:11.56,0:53:14.55,yin,,0,0,0,,可以看到 它创建了一个.h和一个.m文件\N{\fs12}And you can see that it's created a dot h for me and a dot m,
Dialogue: 0,0:53:14.55,0:53:16.99,yin,,0,0,0,,我将我要加的方法放到.h中\N{\fs12}and I just put the methods I want to add in the dot h
Dialogue: 0,0:53:16.99,0:53:19.08,yin,,0,0,0,,然后在.m中实现它们\N{\fs12}and then I implement them in the dot m,
Dialogue: 0,0:53:19.08,0:53:23.59,yin,,0,0,0,,只不过我不能有任何实例变量 很遗憾\N{\fs12}it's just that I can't, unfortunately, have any instance variables.
Dialogue: 0,0:53:24.14,0:53:25.51,yin,,0,0,0,,有问题\N{\fs12}Yeah, question.
Dialogue: 0,0:53:34.24,0:53:37.66,yin,,0,0,0,,问题是 如果不是使用新文件 category\N{\fs12}Yeah, so the question is instead of using new file, category,
Dialogue: 0,0:53:37.66,0:53:42.10,yin,,0,0,0,,而是创建一个空文件 直接键入这些东西\N{\fs12}if I just created an empty file and started typing this stuff in,
Dialogue: 0,0:53:42.10,0:53:46.14,yin,,0,0,0,,Objective-C如何知道这是一个category\N{\fs12}how does objective C know this is a category, well, the,
Dialogue: 0,0:53:46.14,0:53:48.27,yin,,0,0,0,,到新文件中找category\N{\fs12}when you go new file in category,
Dialogue: 0,0:53:48.27,0:53:51.35,yin,,0,0,0,,其实只是为你提供了一种便利\N{\fs12}that's just a convenience, it's just creating this for you as a convenience.
Dialogue: 0,0:53:51.35,0:53:53.17,yin,,0,0,0,,你显然可以直接键入\N{\fs12}You could certainly just type this stuff in,
Dialogue: 0,0:53:53.17,0:53:54.85,yin,,0,0,0,,Objective-C认得它是category\N{\fs12}it knows it's a category because it's
Dialogue: 0,0:53:54.85,0:53:57.81,yin,,0,0,0,,因为有@interface Photo (Flickr)\N{\fs12}at sign interface photo, parentheses Flickr, right,
Dialogue: 0,0:53:57.81,0:53:59.76,yin,,0,0,0,,它认识这个括号\N{\fs12}it knows that that parentheses thing,
Dialogue: 0,0:53:59.76,0:54:02.69,yin,,0,0,0,,有@符号 又有括号中的某个名称\N{\fs12}if you have at sign parentheses with some word in there,
Dialogue: 0,0:54:02.69,0:54:04.29,yin,,0,0,0,,它就知道这是category\N{\fs12}it knows that means a category,
Dialogue: 0,0:54:04.29,0:54:06.43,yin,,0,0,0,,在实现端也是一样 它能认出\N{\fs12}and then same thing on the implementation side, you say okay,
Dialogue: 0,0:54:06.43,0:54:08.68,yin,,0,0,0,,我提供的是该category的实现\N{\fs12}I'm providing implementation of that category.
Dialogue: 0,0:54:08.68,0:54:10.74,yin,,0,0,0,,答案是 你可以直接键入\N{\fs12}So the answer is yeah, you can do that,
Dialogue: 0,0:54:10.74,0:54:15.12,yin,,0,0,0,,新文件只是为你提供一点便利 仅此而已\N{\fs12}new file is just making it easy for you so it does this, that's all.
Dialogue: 0,0:54:15.12,0:54:16.56,yin,,0,0,0,,这方面还有问题吗\N{\fs12}Okay, any question about this?
Dialogue: 0,0:54:16.56,0:54:18.72,yin,,0,0,0,,周三的演示上我们会看到这个\N{\fs12}And we'll see this in the demo on Wednesday
Dialogue: 0,0:54:18.72,0:54:22.24,yin,,0,0,0,,我们会为Photo加一个category\N{\fs12}where it will add a category, to photo.
Dialogue: 0,0:54:22.24,0:54:26.03,yin,,0,0,0,,好 现在你知道了如何插入对象 如何改变其属性\N{\fs12}Okay. So now you know how to insert an object, you know how to change their properties.
Dialogue: 0,0:54:26.03,0:54:29.97,yin,,0,0,0,,如何创建自定义子类 这些都可以用点符号\N{\fs12}We know how to create the custom subclass, so we can do all this with dot notation,
Dialogue: 0,0:54:29.97,0:54:32.70,yin,,0,0,0,,那从数据库中删除对象呢\N{\fs12}what about deleting objects from the database.
Dialogue: 0,0:54:32.70,0:54:36.75,yin,,0,0,0,,这太简单不过了 就像黑武士喜欢说的 太容易了\N{\fs12}This is all too easy, okay, as Darth Vader would say, all too easy.
Dialogue: 0,0:54:36.75,0:54:41.54,yin,,0,0,0,,你只需要在context上调用deleteObject\N{\fs12}You just call delete object on the context, give the object,
Dialogue: 0,0:54:41.54,0:54:43.41,yin,,0,0,0,,删除就完成了\N{\fs12}bam, it deletes it.
Dialogue: 0,0:54:43.41,0:54:46.89,yin,,0,0,0,,不过 删除对象还会有分支\N{\fs12}Now, deleting the object can have ramifications.
Dialogue: 0,0:54:46.89,0:54:50.63,yin,,0,0,0,,删除一个拍照者 whoTook会被设为nil\N{\fs12}You delete a photographer, it's going to set that who took to nil.
Dialogue: 0,0:54:50.63,0:54:52.78,yin,,0,0,0,,假设你没有选cascade式删除规则\N{\fs12}Assuming you don't do that cascade delete rule
Dialogue: 0,0:54:52.78,0:54:54.87,yin,,0,0,0,,这时它会直接删掉拍照者\N{\fs12}in which case it would delete the photographer, but, okay,
Dialogue: 0,0:54:54.87,0:54:57.20,yin,,0,0,0,,反正 删除会有分支\N{\fs12}so deleting, you know, has ramifications,
Dialogue: 0,0:54:57.20,0:55:01.26,yin,,0,0,0,,你需要知道你在删什么 这很简单\N{\fs12}you got to know what you're doing and deleting, it's very easy to do.
Dialogue: 0,0:55:01.26,0:55:02.58,yin,,0,0,0,,关于这个考虑两点\N{\fs12}Two things to think about this.
Dialogue: 0,0:55:02.58,0:55:05.28,yin,,0,0,0,,一 记住 它并不实际删除照片\N{\fs12}One, remember it doesn't actually delete the photo
Dialogue: 0,0:55:05.28,0:55:07.55,yin,,0,0,0,,或者说删除对象 在保存之前\N{\fs12}or delete the object until you save,
Dialogue: 0,0:55:07.55,0:55:09.56,yin,,0,0,0,,自动保存后 删除才会发生\N{\fs12}so the auto save comes around and it'll be deleted.
Dialogue: 0,0:55:09.56,0:55:11.32,yin,,0,0,0,,这是很简单很明显的一点\N{\fs12}That's just a minor point, it's kind of obvious.
Dialogue: 0,0:55:11.32,0:55:13.22,yin,,0,0,0,,你做的所有修改也一样\N{\fs12}Same thing with all the changes you make,
Dialogue: 0,0:55:13.22,0:55:16.20,yin,,0,0,0,,在自动保存或是你手动保存之前\N{\fs12}that they don't happen on the database until that auto save happens,
Dialogue: 0,0:55:16.20,0:55:18.00,yin,,0,0,0,,它们并不发生在数据库上\N{\fs12}or until you explicitly save.
Dialogue: 0,0:55:18.00,0:55:19.40,yin,,0,0,0,,关于删除的第二点\N{\fs12}But the second thing with deletion,
Dialogue: 0,0:55:19.40,0:55:22.37,yin,,0,0,0,,你需要非常小心 看到参数photo了吗\N{\fs12}you got to be really careful is, see that argument photo?
Dialogue: 0,0:55:22.37,0:55:24.32,yin,,0,0,0,,deleteObject:photo\N{\fs12}Delete object colon photo?
Dialogue: 0,0:55:24.32,0:55:27.94,yin,,0,0,0,,如果这个photo由一个指针强引用\N{\fs12}If that photo is a strongly-held to a pointer,
Dialogue: 0,0:55:27.94,0:55:30.55,yin,,0,0,0,,你最好在这之后将其设为nil\N{\fs12}you better set it to nil right after this.
Dialogue: 0,0:55:30.55,0:55:36.19,yin,,0,0,0,,因为你无法再访问这个photo 它已经失效\N{\fs12}Because you cannot access that photo anymore, it is invalid.
Dialogue: 0,0:55:36.19,0:55:39.96,yin,,0,0,0,,删除照片后 或者说删除对象之后\N{\fs12}After you hit delete photo, or delete object rather,
Dialogue: 0,0:55:39.96,0:55:43.24,yin,,0,0,0,,记得删除掉所有指向它的强指针\N{\fs12}that thing you deleted, get rid of all your strong pointers to it,
Dialogue: 0,0:55:43.24,0:55:44.91,yin,,0,0,0,,因为这不好\N{\fs12}because it's no good.
Dialogue: 0,0:55:44.91,0:55:46.57,yin,,0,0,0,,它已经被删除了\N{\fs12}It's been deleted.
Dialogue: 0,0:55:46.57,0:55:51.19,yin,,0,0,0,,如果下一行你又说photo.title=什么\N{\fs12}So if you tried to say photo dot title equals something on the next line,
Dialogue: 0,0:55:51.19,0:55:54.10,yin,,0,0,0,,肯定会出现很糟糕的情况 别这样做\N{\fs12}I don't even know what would happen, something bad, don't do it.
Dialogue: 0,0:55:54.10,0:55:55.91,yin,,0,0,0,,这非常明显 对吧\N{\fs12}I mean, that's completely obvious, right?
Dialogue: 0,0:55:55.91,0:56:00.01,yin,,0,0,0,,但总有人忘记 结果发现程序又出问题了\N{\fs12}But, it's something people forget and then they're like, wow, it's not working.
Dialogue: 0,0:56:00.01,0:56:04.88,yin,,0,0,0,,删除有一点很酷\N{\fs12}One of the things about deletion that's kind of cool.
Dialogue: 0,0:56:04.88,0:56:08.22,yin,,0,0,0,,Core Data会发送方法\N{\fs12}Core data will send the method,
Dialogue: 0,0:56:08.22,0:56:13.92,yin,,0,0,0,,发生消息 prepareForDeletion 给所有对象\N{\fs12}send a message, prepare for deletion to all objects
Dialogue: 0,0:56:13.92,0:56:15.99,yin,,0,0,0,,当你发送deleteObject时\N{\fs12}when you send delete object.
Dialogue: 0,0:56:15.99,0:56:19.24,yin,,0,0,0,,如果我说deleteObject:photo 这个photo会被发送\N{\fs12}So if I say delete object photo, that photo will be sent,
Dialogue: 0,0:56:19.24,0:56:21.11,yin,,0,0,0,,如果它实现它 prepareForDeletion\N{\fs12}if it implements it, prepare for deletion.
Dialogue: 0,0:56:21.11,0:56:22.57,yin,,0,0,0,,很酷的是\N{\fs12}And the cool thing is,
Dialogue: 0,0:56:22.57,0:56:25.71,yin,,0,0,0,,你可以把这个prepareForDeletion放到一个category中\N{\fs12}you can put this prepare for deletion in a category.
Dialogue: 0,0:56:25.71,0:56:29.00,yin,,0,0,0,,你可以在一个category中 把prepareForDeletion方法\N{\fs12}So you can add the prepare for deletion method to photo,
Dialogue: 0,0:56:29.00,0:56:31.28,yin,,0,0,0,,加给Photo或是Photographer\N{\fs12}or photographer, in a category.
Dialogue: 0,0:56:31.28,0:56:33.96,yin,,0,0,0,,prepareForDeletion中你打算做什么呢\N{\fs12}Now what would you do in that prepare for deletion, well,
Dialogue: 0,0:56:33.96,0:56:37.10,yin,,0,0,0,,你不需要对whoTook或是photos做任何事情\N{\fs12}you don't need to do anything with the who took or the photos
Dialogue: 0,0:56:37.10,0:56:39.02,yin,,0,0,0,,这些都帮你处理了\N{\fs12}or anything that, that's all taken care of you for you,
Dialogue: 0,0:56:39.02,0:56:42.68,yin,,0,0,0,,但如果数据库中某处有另一个属性呢\N{\fs12}but what if you had another property somewhere in the database,
Dialogue: 0,0:56:42.68,0:56:46.14,yin,,0,0,0,,它在为photos计数 诸如此类\N{\fs12}which was counting the photos, or something like that,
Dialogue: 0,0:56:46.14,0:56:49.19,yin,,0,0,0,,删除某张照片会改变计数值\N{\fs12}and deleting this photo would change that count,
Dialogue: 0,0:56:49.19,0:56:51.40,yin,,0,0,0,,为什么要有这种东西\N{\fs12}and why would you have such a thing?
Dialogue: 0,0:56:51.40,0:56:54.44,yin,,0,0,0,,因为你有可能要查询照片计数\N{\fs12}Because it's possible to just query the counted photos,
Dialogue: 0,0:56:54.44,0:56:56.79,yin,,0,0,0,,例如一个拍照者拍了多少\N{\fs12}that a photographer has, for example.
Dialogue: 0,0:56:56.79,0:57:00.31,yin,,0,0,0,,也许 计数是出于效率考虑\N{\fs12}Maybe, you know, it's your, its account, for efficiency,
Dialogue: 0,0:57:00.31,0:57:02.85,yin,,0,0,0,,你检查照片信息 跟踪计数\N{\fs12}you're checking something about the photo and keeping this count.
Dialogue: 0,0:57:02.85,0:57:05.35,yin,,0,0,0,,在删除照片后 你或许应当更新计数\N{\fs12}And maybe if you delete the photo you need to update that count.
Dialogue: 0,0:57:05.35,0:57:08.59,yin,,0,0,0,,所有这些 都可以在prepareForDeletion中做到\N{\fs12}Well you can do that, all that kind of stuff here and prepare for deletion.
Dialogue: 0,0:57:08.59,0:57:10.28,yin,,0,0,0,,在prepareForDeletion中\N{\fs12}You can basically do anything in the database
Dialogue: 0,0:57:10.28,0:57:12.72,yin,,0,0,0,,你可以做任何数据库中你想做的事\N{\fs12}you want in prepare for deletion,
Dialogue: 0,0:57:12.72,0:57:15.70,yin,,0,0,0,,而要删除的东西还没被删除\N{\fs12}and the thing that's being deleted is not yet deleted.
Dialogue: 0,0:57:15.70,0:57:18.23,yin,,0,0,0,,这个调用时 它还在数据库中\N{\fs12}So it's still it the database that this is called.
Dialogue: 0,0:57:18.23,0:57:22.41,yin,,0,0,0,,但在从这个方法返回后 对象就会被删除\N{\fs12}But after you return from this method, then the object's going to be deleted,
Dialogue: 0,0:57:22.41,0:57:25.37,yin,,0,0,0,,你最好是按需求更新了数据库\N{\fs12}so you have better have updated the database however you need.
Dialogue: 0,0:57:27.14,0:57:28.88,yin,,0,0,0,,明白了吗\N{\fs12}Got that?
Dialogue: 0,0:57:28.99,0:57:32.64,yin,,0,0,0,,好 你可以插入创建对象\N{\fs12}Alright. So, now you can create objects with insert,
Dialogue: 0,0:57:32.64,0:57:35.47,yin,,0,0,0,,获取和设置属性 删除对象\N{\fs12}you can get and set the properties, you can delete the objects.
Dialogue: 0,0:57:35.47,0:57:39.06,yin,,0,0,0,,数据库中还有最后一点 query(查询)\N{\fs12}One last thing to want to do in a database, query, okay,
Dialogue: 0,0:57:39.06,0:57:44.05,yin,,0,0,0,,也就是到数据库中获取匹配标准的所有对象\N{\fs12}which means go out into the database and get me objects that match some criteria.
Dialogue: 0,0:57:44.97,0:57:48.51,yin,,0,0,0,,Core Data中可以通过一种对象做到这个\N{\fs12}So, we do this, in core data,
Dialogue: 0,0:57:48.52,0:57:51.24,yin,,0,0,0,,也就是NSFetchRequest(取回请求)\N{\fs12}with an object called NS fetch request.
Dialogue: 0,0:57:51.24,0:57:53.31,yin,,0,0,0,,顾名思义 很好理解\N{\fs12}It's exactly what you think it is,
Dialogue: 0,0:57:53.31,0:57:55.96,yin,,0,0,0,,你提出请求 从数据库中取回一些对象\N{\fs12}you're requesting to fetch some objects from the database.
Dialogue: 0,0:57:55.96,0:57:58.78,yin,,0,0,0,,你需要四个要素来得到NSFetchRequest\N{\fs12}You need four things to make an NS fetch request.
Dialogue: 0,0:57:58.78,0:58:01.32,yin,,0,0,0,,要取回的实体 这个很有趣\N{\fs12}The entity to fetch, and this is an interesting one
Dialogue: 0,0:58:01.32,0:58:04.76,yin,,0,0,0,,因为在数据库中去取时 你只能取回…\N{\fs12}because when you fetch from the database, you can only fetch,
Dialogue: 0,0:58:04.76,0:58:08.21,yin,,0,0,0,,在你执行它时 它会返回一个对象数组\N{\fs12}fetch, when you execute it, it returns an array of objects,
Dialogue: 0,0:58:08.21,0:58:09.80,yin,,0,0,0,,一个NSManagedObject数组\N{\fs12}an array of NS-managed objects,
Dialogue: 0,0:58:09.80,0:58:12.28,yin,,0,0,0,,或是其子类的数组 很好理解\N{\fs12}or subclasses thereof, as you might imagine.
Dialogue: 0,0:58:12.28,0:58:16.29,yin,,0,0,0,,这个数组都需要是相同类型的实体\N{\fs12}That array all have to be the same type of entity.
Dialogue: 0,0:58:16.29,0:58:19.82,yin,,0,0,0,,你在数据库中取回的数组不可能\N{\fs12}So there are no way to do a fetch in a database that gives you an array back,
Dialogue: 0,0:58:19.82,0:58:22.34,yin,,0,0,0,,一部分是Photo 一部分是Photographer\N{\fs12}some of the things are photos and some are photographers.
Dialogue: 0,0:58:22.34,0:58:25.28,yin,,0,0,0,,要么都是Photo 要么都是Photographer\N{\fs12}They all have to be photos, all have to be photographers.
Dialogue: 0,0:58:25.28,0:58:30.30,yin,,0,0,0,,你需要指定你要取回的实体\N{\fs12}So you have to specify the entity that you're trying to fetch.
Dialogue: 0,0:58:30.30,0:58:32.11,yin,,0,0,0,,理解吗\N{\fs12}Understand what I mean by that?
Dialogue: 0,0:58:32.11,0:58:34.14,yin,,0,0,0,,这是最重要的了\N{\fs12}That's the most important thing, in fact, the,
Dialogue: 0,0:58:34.14,0:58:36.43,yin,,0,0,0,,实际上 要创建FetchRequest\N{\fs12}the way you create the fetch request is by
Dialogue: 0,0:58:36.43,0:58:39.49,yin,,0,0,0,,就必须指定你要取回的是哪类实体\N{\fs12}specifying what kind of entity you're trying to fetch.
Dialogue: 0,0:58:39.49,0:58:41.21,yin,,0,0,0,,然后可选地 你可以指定\N{\fs12}Then you can specify, optionally,
Dialogue: 0,0:58:41.21,0:58:43.84,yin,,0,0,0,,你希望接收多少个对象\N{\fs12}how many of those objects you're willing to accept
Dialogue: 0,0:58:43.84,0:58:45.79,yin,,0,0,0,,一批有多大\N{\fs12}and how big a batch,
Dialogue: 0,0:58:45.79,0:58:48.39,yin,,0,0,0,,如果你要取的很多\N{\fs12}if, if you're fetching a whole bunch of them,
Dialogue: 0,0:58:48.39,0:58:50.94,yin,,0,0,0,,你可以指定你一次取多少\N{\fs12}you can specify how many to get at a time,
Dialogue: 0,0:58:50.94,0:58:53.38,yin,,0,0,0,,要知道 在取照片时\N{\fs12}because it's not going to, if you say
Dialogue: 0,0:58:53.38,0:58:56.24,yin,,0,0,0,,如果匹配的有一万张\N{\fs12}get me these photos and it matches 10,000,
Dialogue: 0,0:58:56.24,0:58:59.98,yin,,0,0,0,,你不可能将一万个都取出数据库 存到内存\N{\fs12}it's not going to load 10,000 things out of the database and into memory.
Dialogue: 0,0:58:59.98,0:59:02.69,yin,,0,0,0,,它会给你一万个占位符\N{\fs12}It's going to kind of give you 10,000 placeholders
Dialogue: 0,0:59:02.69,0:59:05.43,yin,,0,0,0,,然后一小批一小批地取回\N{\fs12}and then it's going to fetch them in little batches,
Dialogue: 0,0:59:05.43,0:59:09.44,yin,,0,0,0,,你可以指定批大小 具体要看你怎么使用对象\N{\fs12}and you can specify the batch size depending on how you're going to use the object,
Dialogue: 0,0:59:09.44,0:59:12.07,yin,,0,0,0,,如果你是使用信息 如果是在表格视图中显示\N{\fs12}if you use the information, if you're displaying it in a table view,
Dialogue: 0,0:59:12.07,0:59:15.39,yin,,0,0,0,,你可以把批大小设得很小 例如10到20\N{\fs12}well you can set the batch size real small, like 10 or 20, however many,
Dialogue: 0,0:59:15.39,0:59:17.77,yin,,0,0,0,,满足表格视图中一般滚动所需即可\N{\fs12}you know, would scroll around on a table view.
Dialogue: 0,0:59:17.77,0:59:22.14,yin,,0,0,0,,一次一般只能看到10到20个 这时可以用小的批大小\N{\fs12}We can only see, you know, 10 or 20 at a time, so you've got a small batch size.
Dialogue: 0,0:59:22.14,0:59:23.47,yin,,0,0,0,,你可以控制这个\N{\fs12}So you control that.
Dialogue: 0,0:59:23.47,0:59:25.55,yin,,0,0,0,,SortDescriptor(排序描述器) 我们会讲到\N{\fs12}Sort descriptors, which we're going to talk about,
Dialogue: 0,0:59:25.55,0:59:26.99,yin,,0,0,0,,也就是如何对结果排序\N{\fs12}which is how to sort the results,
Dialogue: 0,0:59:26.99,0:59:29.99,yin,,0,0,0,,要知道 结果是一个数组 而不是集合\N{\fs12}because the results are an array, not a set.
Dialogue: 0,0:59:29.99,0:59:31.75,yin,,0,0,0,,数组就必然有顺序\N{\fs12}So the array means it's ordered,
Dialogue: 0,0:59:31.75,0:59:35.11,yin,,0,0,0,,你必须指定对象给回来的顺序\N{\fs12}so you got to specify what order to give those objects back in.
Dialogue: 0,0:59:35.11,0:59:37.40,yin,,0,0,0,,然后最重要的是Predicate(谓词)\N{\fs12}And then, most importantly, the predicate,
Dialogue: 0,0:59:37.40,0:59:42.40,yin,,0,0,0,,谓词是说 你想要哪些实体 哪些照片\N{\fs12}and the predicate says which of those entities you want, which photos?
Dialogue: 0,0:59:42.40,0:59:44.08,yin,,0,0,0,,哪些拍照者\N{\fs12}Which photographers?
Dialogue: 0,0:59:44.08,0:59:46.13,yin,,0,0,0,,我们来看看这四大要素\N{\fs12}So let's look at these four things.
Dialogue: 0,0:59:46.13,0:59:48.31,yin,,0,0,0,,FetchRequest是这样的\N{\fs12}Here's what a fetch request looks like.
Dialogue: 0,0:59:48.31,0:59:50.86,yin,,0,0,0,,用fetchRequestWithEntityName创建\N{\fs12}You create it with fetch request with entity name,
Dialogue: 0,0:59:50.86,0:59:53.14,yin,,0,0,0,,这告诉你是从哪取回的\N{\fs12}that tells you what you're fetching out of there,
Dialogue: 0,0:59:53.14,0:59:56.50,yin,,0,0,0,,然后你可以设置批大小 批限制\N{\fs12}and then you can set things like the batch size and the batch limit,
Dialogue: 0,0:59:56.50,0:59:58.55,yin,,0,0,0,,这些都是request上的属性\N{\fs12}they're just properties on the request,
Dialogue: 0,0:59:58.55,1:00:01.57,yin,,0,0,0,,然后sortDescriptors是一个SortDescriptor数组\N{\fs12}and then the sort descriptors is an array of sort descriptors,
Dialogue: 0,1:00:01.57,1:00:03.57,yin,,0,0,0,,我们会谈到为什么这是数组\N{\fs12}we'll talk about why that's an array.
Dialogue: 0,1:00:03.57,1:00:05.88,yin,,0,0,0,,然后谓词是NSPredicate\N{\fs12}And then the predicate is, is NS predicate.
Dialogue: 0,1:00:05.88,1:00:08.78,yin,,0,0,0,,这就是创建一个FetchRequest的方式\N{\fs12}So this is how you would set up a fetch request.
Dialogue: 0,1:00:08.78,1:00:10.75,yin,,0,0,0,,非常简单\N{\fs12}Very simple.
Dialogue: 0,1:00:10.75,1:00:15.77,yin,,0,0,0,,你可以查NSFetchRequest 具体看批大小\N{\fs12}So, you can look up in NS fetch request how batch size works,
Dialogue: 0,1:00:15.77,1:00:17.67,yin,,0,0,0,,批限制 具体我不打算讲\N{\fs12}how fetch limits works, I'm not going to get into detail
Dialogue: 0,1:00:17.67,1:00:19.05,yin,,0,0,0,,毕竟时间有限\N{\fs12}about that for time reasons,
Dialogue: 0,1:00:19.05,1:00:21.30,yin,,0,0,0,,不过我打算仔细考虑排序描述器和谓词\N{\fs12}but I am going to focus on sort descriptors and predicate
Dialogue: 0,1:00:21.30,1:00:23.84,yin,,0,0,0,,因为这些很重要 这是排序描述器\N{\fs12}because those are really important, so let's look at the sort descriptor.
Dialogue: 0,1:00:23.84,1:00:28.64,yin,,0,0,0,,创建排序描述器用这个类NSSortDescriptor\N{\fs12}You create a sort descriptor using this class NS sort descriptor.
Dialogue: 0,1:00:28.64,1:00:31.93,yin,,0,0,0,,创建它有很多种类方法\N{\fs12}And it has quite a number of class methods to create it,
Dialogue: 0,1:00:31.93,1:00:34.91,yin,,0,0,0,,你可以自己去文档查\N{\fs12}so you should go look at the documentation and familiarize yourself,
Dialogue: 0,1:00:34.91,1:00:38.31,yin,,0,0,0,,不过一般都是形如sortDescriptorWithKey\N{\fs12}but they're generally of the form sort descriptor with key,
Dialogue: 0,1:00:38.31,1:00:40.21,yin,,0,0,0,,这是排序所根据的键\N{\fs12}so that's the key you want to sort by,
Dialogue: 0,1:00:40.21,1:00:41.75,yin,,0,0,0,,如果我要取照片\N{\fs12}so if I were fetching for photos,
Dialogue: 0,1:00:41.75,1:00:45.34,yin,,0,0,0,,我可以让照片按标题排序\N{\fs12}I want to get the result sorted by the title of the photo,
Dialogue: 0,1:00:45.34,1:00:47.01,yin,,0,0,0,,这是最典型的做法\N{\fs12}that would be a classic thing.
Dialogue: 0,1:00:47.01,1:00:48.17,yin,,0,0,0,,ascending(升序)\N{\fs12}Ascending is whether
Dialogue: 0,1:00:48.17,1:00:50.94,yin,,0,0,0,,YES是字母顺序 NO是反字母顺序\N{\fs12}it's alphabetical order or reverse alphabetical order,
Dialogue: 0,1:00:50.94,1:00:53.27,yin,,0,0,0,,然后selector(选择器)很有趣\N{\fs12}and then the selector is interesting there.
Dialogue: 0,1:00:53.27,1:01:00.39,yin,,0,0,0,,这个方法将被用于在排序过程中对比照片\N{\fs12}That is the method that will be used to compare photos, while it's sorting them.
Dialogue: 0,1:01:02.23,1:01:07.60,yin,,0,0,0,,结果将会依标题排序\N{\fs12}So, it's going to sort the results by the title,
Dialogue: 0,1:01:07.60,1:01:09.40,yin,,0,0,0,,它会用到这个方法\N{\fs12}and it's going to be using the method here,
Dialogue: 0,1:01:09.40,1:01:11.68,yin,,0,0,0,,localizedStandardCompare\N{\fs12}localized standard compare
Dialogue: 0,1:01:11.68,1:01:15.99,yin,,0,0,0,,来对比标题 以明确如何排序\N{\fs12}to compare the titles to know how to sort them.
Dialogue: 0,1:01:15.99,1:01:20.25,yin,,0,0,0,,首先看 什么是localizedStandardCompare\N{\fs12}Now, A, what is localized standard compare?
Dialogue: 0,1:01:20.25,1:01:21.73,yin,,0,0,0,,localizedStandardCompare是说\N{\fs12}Localized standard compare means
Dialogue: 0,1:01:21.74,1:01:26.23,yin,,0,0,0,,像Mac finder中的方法一样排序\N{\fs12}sort them like they would look in the Mac finder, basically.
Dialogue: 0,1:01:26.23,1:01:29.09,yin,,0,0,0,,或者说得更直白一些\N{\fs12}Or, that's kind of colloquial way of saying it, but basically,
Dialogue: 0,1:01:29.09,1:01:33.58,yin,,0,0,0,,按照一般人认为应该的方法来排序\N{\fs12}sort them how real people think things should be sorted,
Dialogue: 0,1:01:33.58,1:01:35.44,yin,,0,0,0,,对大小写不敏感\N{\fs12}not case insensitively,
Dialogue: 0,1:01:35.44,1:01:37.38,yin,,0,0,0,,对发音符做出正确反应\N{\fs12}do the right thing with diacritic marks,
Dialogue: 0,1:01:37.38,1:01:40.28,yin,,0,0,0,,如果语言中带有发音符 这类\N{\fs12}if it's a language that has a lot of diacritics, that kind of thing.
Dialogue: 0,1:01:40.28,1:01:42.87,yin,,0,0,0,,这就是localizedStandardCompare\N{\fs12}That's what localized standard compare is.
Dialogue: 0,1:01:42.87,1:01:45.86,yin,,0,0,0,,此外还有其它一些选择器可用\N{\fs12}There are other selectors that are sensible
Dialogue: 0,1:01:45.86,1:01:49.12,yin,,0,0,0,,如果是字符串类型的属性\N{\fs12}if it was a string type property,
Dialogue: 0,1:01:49.12,1:01:51.70,yin,,0,0,0,,例如localizedCaseInsensitiveCompare\N{\fs12}like localized case insensitive compare,
Dialogue: 0,1:01:51.70,1:01:53.11,yin,,0,0,0,,听起来一样\N{\fs12}which sounds the same,
Dialogue: 0,1:01:53.11,1:01:54.59,yin,,0,0,0,,大小写不敏感的排序\N{\fs12}case insensitive sorting,
Dialogue: 0,1:01:54.59,1:01:57.29,yin,,0,0,0,,但这里 发音符的处理方式会不同\N{\fs12}but the diacritics are handled differently in that case.
Dialogue: 0,1:01:57.29,1:01:58.98,yin,,0,0,0,,因此 你会希望使用标准对比\N{\fs12}So that's why you would want to use standard compare.
Dialogue: 0,1:01:58.98,1:02:04.09,yin,,0,0,0,,你可以查阅SortDescriptor 看有哪些内建方法\N{\fs12}So you can look up in sort descriptors, see what kind of methods are kind of built in.
Dialogue: 0,1:02:04.09,1:02:07.45,yin,,0,0,0,,除了字符串 别的也可以排序\N{\fs12}If you were, you can sort by things besides strings,
Dialogue: 0,1:02:07.45,1:02:10.30,yin,,0,0,0,,例如你可以使用上传日期的排序描述器\N{\fs12}you can say sort descriptor with key upload date,
Dialogue: 0,1:02:10.30,1:02:13.71,yin,,0,0,0,,这时选择器将是compare:\N{\fs12}and then the selector would want to be compare colon.
Dialogue: 0,1:02:13.71,1:02:16.87,yin,,0,0,0,,compare:是大多数甚至所有…\N{\fs12}Compare colon is a method most things, if not all,
Dialogue: 0,1:02:16.87,1:02:18.75,yin,,0,0,0,,或许除了NSData\N{\fs12}except for NS data maybe,
Dialogue: 0,1:02:18.75,1:02:21.69,yin,,0,0,0,,数据库中的东西几乎都会对它作出响应\N{\fs12}things in the database will respond to,
Dialogue: 0,1:02:21.69,1:02:23.60,yin,,0,0,0,,compare:可以说是默认对比\N{\fs12}compare colon, it's kind of the default compare,
Dialogue: 0,1:02:23.60,1:02:25.99,yin,,0,0,0,,不过通常对于字符串 它并不是最好的\N{\fs12}but it's not going to do what you want, usually with reverse string,
Dialogue: 0,1:02:25.99,1:02:27.37,yin,,0,0,0,,你希望用更好的\N{\fs12}so you want a better one,
Dialogue: 0,1:02:27.37,1:02:32.53,yin,,0,0,0,,不过它对于日期和数字这些还是可以的\N{\fs12}but it will work for dates and things like, and numbers, things like that.
Dialogue: 0,1:02:32.53,1:02:34.61,yin,,0,0,0,,这是选择器\N{\fs12}So that's the selector.
Dialogue: 0,1:02:34.61,1:02:39.09,yin,,0,0,0,,创建SortDescriptor时 你可以不用选择器\N{\fs12}You can leave that selector off, when you create the sort descriptor,
Dialogue: 0,1:02:39.09,1:02:41.19,yin,,0,0,0,,只说sortDescriptorWithKey和ascending\N{\fs12}just say sort descriptor with key ascending,
Dialogue: 0,1:02:41.19,1:02:44.36,yin,,0,0,0,,闭方括号 你也会得到对比\N{\fs12}close square bracket, and you'll get compare.
Dialogue: 0,1:02:44.36,1:02:48.19,yin,,0,0,0,,这时对比使用的是默认值\N{\fs12}So, compare is kind of the default one you get.
Dialogue: 0,1:02:48.19,1:02:52.57,yin,,0,0,0,,为什么要给FetchRequest一个数组呢\N{\fs12}Why do we give an array of these things to the fetch request?
Dialogue: 0,1:02:52.57,1:02:55.87,yin,,0,0,0,,我们看到request.sortDescriptors\N{\fs12}Okay, when, we saw request dot sort descriptors,
Dialogue: 0,1:02:55.87,1:02:58.05,yin,,0,0,0,,这是一个描述器的数组\N{\fs12}it was an array of these,
Dialogue: 0,1:02:58.05,1:03:00.70,yin,,0,0,0,,这是很久就有的姓名问题\N{\fs12}well that's the old last name, first name thing.
Dialogue: 0,1:03:00.70,1:03:03.79,yin,,0,0,0,,我可能要取回一些人\N{\fs12}If I said hey, I'm going to fetch some people,
Dialogue: 0,1:03:03.79,1:03:08.74,yin,,0,0,0,,从雇员数据库中取一些雇员 我要按姓排序\N{\fs12}some employees out of an employee database, and I want you to sort it by last name.
Dialogue: 0,1:03:08.74,1:03:12.19,yin,,0,0,0,,显然 所有史密斯都排到了一起\N{\fs12}Well, of course, all the Smith's would all sort to the same thing.
Dialogue: 0,1:03:12.19,1:03:15.47,yin,,0,0,0,,然后 你希望再对其名排序\N{\fs12}So, you want to then sort those by the first name.
Dialogue: 0,1:03:15.47,1:03:18.12,yin,,0,0,0,,这就要两个排序描述器 一个按姓来\N{\fs12}So you provide 2 sort descriptors, one that sorts by last name,
Dialogue: 0,1:03:18.12,1:03:22.26,yin,,0,0,0,,这是主要排序 然后根据名排序 这是次要排序\N{\fs12}that's the primary sorting, and then one by first name is the secondary sorting.
Dialogue: 0,1:03:22.26,1:03:24.81,yin,,0,0,0,,另一个很常见的情况是表格视图 注意了\N{\fs12}Another common one is a table view, pay attention,
Dialogue: 0,1:03:24.81,1:03:27.11,yin,,0,0,0,,因为作业中 你们需要考虑到这个\N{\fs12}because your homework, you might have to do this, is
Dialogue: 0,1:03:27.11,1:03:30.60,yin,,0,0,0,,或许我的表格视图就像你们这次的作业一样\N{\fs12}maybe I'm doing the table view like you're doing your current assignment,
Dialogue: 0,1:03:30.60,1:03:36.52,yin,,0,0,0,,我排序是地方的名字\N{\fs12}and I'm sorting, you know, basically by the name of the place, in the place one,
Dialogue: 0,1:03:36.52,1:03:39.34,yin,,0,0,0,,不过我还要对section的国家进行排序\N{\fs12}but I'm supposed to do it by countries, sections by country,
Dialogue: 0,1:03:39.34,1:03:42.18,yin,,0,0,0,,而且我应当首先对国家排序\N{\fs12}so really I need to sort first by country,
Dialogue: 0,1:03:42.18,1:03:45.70,yin,,0,0,0,,然后才排序国家内的地名\N{\fs12}then I sort by the name of the place in the country.
Dialogue: 0,1:03:45.70,1:03:50.26,yin,,0,0,0,,这就是使用两种排序描述器的例子\N{\fs12}So, that's an example where you might use two sort descriptors.
Dialogue: 0,1:03:50.26,1:03:52.37,yin,,0,0,0,,国家排序 然后地方\N{\fs12}Country sort then the place.
Dialogue: 0,1:03:52.37,1:03:56.51,yin,,0,0,0,,我让所有地名排好序 国家放前面\N{\fs12}That's so that I can get them in order so that the, their by country first.
Dialogue: 0,1:03:56.51,1:03:59.10,yin,,0,0,0,,明白了吗\N{\fs12}That make sense?
Dialogue: 0,1:03:59.10,1:04:01.79,yin,,0,0,0,,好 再看谓词 这非常核心\N{\fs12}Alright, predicates, so this is the guts, this is the thing
Dialogue: 0,1:04:01.79,1:04:06.20,yin,,0,0,0,,它说的是 我要哪些照片 哪些拍照者\N{\fs12}that says which photos do I want, which photographers do I want, and,
Dialogue: 0,1:04:06.20,1:04:12.18,yin,,0,0,0,,而且在创建时 NSPredicate和NSString很像\N{\fs12}and NS predicate looks a lot like NS string when it comes to creating them.
Dialogue: 0,1:04:12.18,1:04:14.54,yin,,0,0,0,,就像NSString stringWithFormat\N{\fs12}So just like we have NS string, string with format,
Dialogue: 0,1:04:14.54,1:04:18.17,yin,,0,0,0,,这里有NSPredicate predicateWithFormat\N{\fs12}we actually have NS predicate, predicate with format.
Dialogue: 0,1:04:18.17,1:04:20.39,yin,,0,0,0,,你可以指定任意字符串\N{\fs12}And you can specify this arbitrary string.
Dialogue: 0,1:04:20.39,1:04:22.79,yin,,0,0,0,,这是一把双刃剑\N{\fs12}Now, this is good and bad.
Dialogue: 0,1:04:22.79,1:04:25.65,yin,,0,0,0,,好消息是 这非常灵活\N{\fs12}The good news is this is incredibly flexible
Dialogue: 0,1:04:25.65,1:04:30.55,yin,,0,0,0,,你可以指定很多难以置信的标准\N{\fs12}and you can specify unbelievable kinds of criteria
Dialogue: 0,1:04:30.55,1:04:32.94,yin,,0,0,0,,用于寻找数据库中的内容\N{\fs12}for finding what things you want in the database.
Dialogue: 0,1:04:32.94,1:04:34.81,yin,,0,0,0,,坏消息是 你需要学一些东西\N{\fs12}The bad thing is, it's a little bit for you to learn,
Dialogue: 0,1:04:34.81,1:04:37.39,yin,,0,0,0,,看起来就像你要学习一门语言\N{\fs12}because it's almost like you have to learn a little bit of a language here,
Dialogue: 0,1:04:37.40,1:04:40.69,yin,,0,0,0,,谓词语言 关于如何指定你要选择的东西\N{\fs12}the predicate language for how you specify what you want to choose.
Dialogue: 0,1:04:40.69,1:04:47.78,yin,,0,0,0,,基本格式让你能够进行%@符号替换\N{\fs12}The basic format allows you to do the percent at sign replacement,
Dialogue: 0,1:04:47.79,1:04:50.18,yin,,0,0,0,,就像NSString中一样 例如这里\N{\fs12}just like you could with NS string, so here, for example,
Dialogue: 0,1:04:50.18,1:04:54.51,yin,,0,0,0,,我在找所有来自flickr-5服务器的缩略图URL\N{\fs12}I'm looking for all the thumbnail URLs that come off of Flickr five server.
Dialogue: 0,1:04:54.51,1:04:58.81,yin,,0,0,0,,于是我这里说 谓词是thumbnailURL 包含flickr-5\N{\fs12}So I'm saying predicate is thumbnail URL contains Flickr five,
Dialogue: 0,1:04:58.81,1:05:00.85,yin,,0,0,0,,但这里没有直接写flickr-5\N{\fs12}but I don't put the Flickr five right in there,
Dialogue: 0,1:05:00.85,1:05:03.71,yin,,0,0,0,,我使用%@符号 而且它是一个参数\N{\fs12}I use percent at sign, and it's an argument.
Dialogue: 0,1:05:03.71,1:05:05.54,yin,,0,0,0,,我可以用%@来替换\N{\fs12}So I can use percent at sign for replacement,
Dialogue: 0,1:05:05.54,1:05:09.41,yin,,0,0,0,,我不仅可以替换右侧 包含的对象\N{\fs12}and I can replace not only the right side, what's contained,
Dialogue: 0,1:05:09.41,1:05:11.35,yin,,0,0,0,,我还可以替换左侧\N{\fs12}but I can replace the left side,
Dialogue: 0,1:05:11.35,1:05:14.95,yin,,0,0,0,,例如我要搜索是否包含flickr-5的属性\N{\fs12}like which property I want to search to see if it contains Flickr five.
Dialogue: 0,1:05:14.95,1:05:18.51,yin,,0,0,0,,等下我会讲到包含(contains) 有问题\N{\fs12}And we'll talk about contains in a second, question?
Dialogue: 0,1:05:25.88,1:05:29.42,yin,,0,0,0,,对 问题是 这是不是\N{\fs12}Correct. Yeah so, this is not just, the question is is
Dialogue: 0,1:05:29.42,1:05:31.45,yin,,0,0,0,,生成一个字符串然后传递\N{\fs12}that just making a string and passing it off
Dialogue: 0,1:05:31.45,1:05:32.67,yin,,0,0,0,,答案是否定的\N{\fs12}and the answer is no,
Dialogue: 0,1:05:32.67,1:05:35.79,yin,,0,0,0,,NSPredicate会看你在解析什么\N{\fs12}NS predicate is actually looking at what you're parsing and,
Dialogue: 0,1:05:35.79,1:05:39.40,yin,,0,0,0,,不过 它不知道你正在什么数据库中进行取回\N{\fs12}now it's, it can't know what database you're doing a fetch into,
Dialogue: 0,1:05:39.40,1:05:42.29,yin,,0,0,0,,因此 它只在取回时才会失败\N{\fs12}so it won't be until fetch time that it might fail.
Dialogue: 0,1:05:42.29,1:05:45.60,yin,,0,0,0,,如果你说thumbnailFoo包含什么\N{\fs12}If you say thumbnail foo, contains whatever,
Dialogue: 0,1:05:45.60,1:05:47.70,yin,,0,0,0,,你可以创建这个谓词\N{\fs12}its predicate is going to let you create that predicate,
Dialogue: 0,1:05:47.70,1:05:49.13,yin,,0,0,0,,但在真正取回时\N{\fs12}but then when you go to do the fetch it's going
Dialogue: 0,1:05:49.13,1:05:53.26,yin,,0,0,0,,你会被告知 本数据库中没有thumbnailFoo\N{\fs12}to say no property thumbnail foo in this database.
Dialogue: 0,1:05:53.90,1:05:56.63,yin,,0,0,0,,好 你们看到这里有contains\N{\fs12}Okay, so, you see this one's contained.
Dialogue: 0,1:05:56.63,1:06:00.01,yin,,0,0,0,,contains是说 一个字符串包含在另一个字符串之中\N{\fs12}Contains means, you know, that string is contained in the other string,
Dialogue: 0,1:06:00.02,1:06:00.75,yin,,0,0,0,,顾名思义\N{\fs12}exactly what you want,
Dialogue: 0,1:06:00.75,1:06:04.29,yin,,0,0,0,,contains是用于创建谓词的一点语言词汇\N{\fs12}so contains is one of the words in this little language for setting up predicates.
Dialogue: 0,1:06:04.29,1:06:05.93,yin,,0,0,0,,这里还有很多别的例子\N{\fs12}Here's a whole bunch of other examples.
Dialogue: 0,1:06:05.93,1:06:08.42,yin,,0,0,0,,今天我不可能把所有谓词都讲完\N{\fs12}I'm not going to teach you all of predicate today, you're going
Dialogue: 0,1:06:08.42,1:06:10.43,yin,,0,0,0,,你们需要自己去查NSPredicate的文档\N{\fs12}to have to look at NS predicate documentation,
Dialogue: 0,1:06:10.43,1:06:12.18,yin,,0,0,0,,不过这里有一些例子\N{\fs12}see what it can do, but here's a bunch of examples.
Dialogue: 0,1:06:12.18,1:06:14.00,yin,,0,0,0,,显然 这里有等于\N{\fs12}Obviously, you have equals,
Dialogue: 0,1:06:14.00,1:06:17.33,yin,,0,0,0,,你可以说uniqueId = %@\N{\fs12}so you can say unique ID equals percent at sign,
Dialogue: 0,1:06:17.33,1:06:22.69,yin,,0,0,0,,或许是Flickr对象 Flickr照片 唯一ID\N{\fs12}maybe the Flickr object, the Flickr photos, unique ID,
Dialogue: 0,1:06:22.69,1:06:26.59,yin,,0,0,0,,你可以说name contains[c]\N{\fs12}you can say name contains with square bracket C,
Dialogue: 0,1:06:26.59,1:06:30.25,yin,,0,0,0,,这是说大小写不敏感地包含\N{\fs12}that means contains case insensitively.
Dialogue: 0,1:06:30.25,1:06:33.78,yin,,0,0,0,,这是一种contains 你还可以有大于和小于\N{\fs12}So that's part of the thing, you can have greater than and less than,
Dialogue: 0,1:06:33.78,1:06:36.63,yin,,0,0,0,,假设我有一个日期属性叫viewed(被阅览)\N{\fs12}so if I had a date property called viewed,
Dialogue: 0,1:06:36.63,1:06:39.48,yin,,0,0,0,,我可以说 如果viewed大于特定日期\N{\fs12}I could say if viewed is greater than a certain date,
Dialogue: 0,1:06:39.48,1:06:41.89,yin,,0,0,0,,例如今天的日期\N{\fs12}like today's date, for example,
Dialogue: 0,1:06:41.89,1:06:43.89,yin,,0,0,0,,或许小于今天的日期会更合理\N{\fs12}or, it would be, I guess, less than today's date
Dialogue: 0,1:06:43.89,1:06:46.08,yin,,0,0,0,,或是小于今天的日期减24小时 诸如此类\N{\fs12}or less than today's date minus 24 hours, whatever,
Dialogue: 0,1:06:46.08,1:06:48.11,yin,,0,0,0,,你可以用大于或小于\N{\fs12}so you can use greater than or less than.
Dialogue: 0,1:06:48.15,1:06:51.38,yin,,0,0,0,,你还可以用点符号来跟踪关系\N{\fs12}You can use dot notation to follow relationships.
Dialogue: 0,1:06:51.38,1:06:56.51,yin,,0,0,0,,你可以说 whoTook.name = CS193P授课者\N{\fs12}So you can say who took dot name equals CS193p instructor, right?
Dialogue: 0,1:06:56.51,1:06:59.50,yin,,0,0,0,,这里可以是一个查询 或者谓词\N{\fs12}So you could have, this would be a query or a predicate
Dialogue: 0,1:06:59.50,1:07:02.61,yin,,0,0,0,,用于搜索照片 实体\N{\fs12}for searching in the photos, entities,
Dialogue: 0,1:07:02.62,1:07:04.70,yin,,0,0,0,,你希望获得照片实体\N{\fs12}so you're trying to get photos entities,
Dialogue: 0,1:07:04.70,1:07:10.93,yin,,0,0,0,,但是照片实体要求满足拍照者名字是某个人名\N{\fs12}but you want photos entities where the who took name is some photographers name.
Dialogue: 0,1:07:10.93,1:07:15.09,yin,,0,0,0,,你所获得的东西是照片 但是查询\N{\fs12}So, the things you're getting are photos, but the query,
Dialogue: 0,1:07:15.09,1:07:16.85,yin,,0,0,0,,用于找它们的谓词\N{\fs12}the predicate you're using to find them,
Dialogue: 0,1:07:16.85,1:07:20.50,yin,,0,0,0,,却是用点符号考察拍照者名字\N{\fs12}is looking over at the photographer using dot notation,
Dialogue: 0,1:07:20.50,1:07:22.09,yin,,0,0,0,,明白吗\N{\fs12}you understand this?
Dialogue: 0,1:07:22.09,1:07:24.57,yin,,0,0,0,,要做好作业 理解这些是必须的\N{\fs12}You definitely need to understand this for your homework.
Dialogue: 0,1:07:24.57,1:07:26.60,yin,,0,0,0,,你可以进行很强大的搜索\N{\fs12}And you can do really powerful searches like
Dialogue: 0,1:07:26.60,1:07:30.17,yin,,0,0,0,,如 给我标题包含某内容的任何照片\N{\fs12}give me any photo who's title contains,
Dialogue: 0,1:07:30.17,1:07:33.12,yin,,0,0,0,,抱歉 这里是 拍照者查询\N{\fs12}sorry, give me, this would be a photographer query,
Dialogue: 0,1:07:33.12,1:07:34.87,yin,,0,0,0,,我要搜的是拍照者\N{\fs12}so let's say I'm searching photographers,
Dialogue: 0,1:07:34.87,1:07:41.06,yin,,0,0,0,,给我照片标题包含这个的任何(any)拍照者\N{\fs12}give me any photographer where any of its photos title contains this.
Dialogue: 0,1:07:41.06,1:07:43.73,yin,,0,0,0,,这个any就是这里所特有的\N{\fs12}So that any is kind of a special thing,
Dialogue: 0,1:07:43.73,1:07:47.24,yin,,0,0,0,,意思是说 我要找拍照者\N{\fs12}and that means I'm the photographer, look at all my,
Dialogue: 0,1:07:47.24,1:07:49.53,yin,,0,0,0,,在数据库中搜所有拍照者\N{\fs12}look at, in the database at all the photographers,
Dialogue: 0,1:07:49.53,1:07:52.77,yin,,0,0,0,,看它们拍的照片的集合\N{\fs12}look through their, their photos set,
Dialogue: 0,1:07:52.77,1:07:56.62,yin,,0,0,0,,看其中所有照片 看所有照片的标题\N{\fs12}to look at all their photos, look at all the titles of all those photos,
Dialogue: 0,1:07:56.62,1:07:58.28,yin,,0,0,0,,看是否包含这个字符串\N{\fs12}see if it contains this string,
Dialogue: 0,1:07:58.28,1:08:01.24,yin,,0,0,0,,如果包含 返回这个拍照者\N{\fs12}and if it does, return that photographer.
Dialogue: 0,1:08:01.24,1:08:04.65,yin,,0,0,0,,你肯定会说 哇 这得消耗多少计算力啊\N{\fs12}Now this seems, I'm sure you're like whoa, that is going to take
Dialogue: 0,1:08:04.65,1:08:10.16,yin,,0,0,0,,如果有成千上万的照片 成百上千的拍照者怎么办\N{\fs12}a lot of computing power if I had thousands of photos and hundreds of photographers,
Dialogue: 0,1:08:10.16,1:08:13.62,yin,,0,0,0,,实际上 数据库能够很好地完成这个\N{\fs12}but actually, databases know how to do this really, really well.
Dialogue: 0,1:08:13.62,1:08:16.13,yin,,0,0,0,,你所做的事情不过是\N{\fs12}And all this stuff that you're doing is
Dialogue: 0,1:08:16.13,1:08:18.66,yin,,0,0,0,,生成SQL侧发生的东西\N{\fs12}generating stuff that happens on the sequel side,
Dialogue: 0,1:08:18.66,1:08:21.18,yin,,0,0,0,,你会得到一个大的SQL语句生成在这里\N{\fs12}so you're going to get a big sequel statement generated here
Dialogue: 0,1:08:21.18,1:08:23.93,yin,,0,0,0,,将表格结合在一起 进行搜索\N{\fs12}to join these tables, do these searches,
Dialogue: 0,1:08:23.93,1:08:26.10,yin,,0,0,0,,这会非常高效\N{\fs12}it's going to be incredibly efficient,
Dialogue: 0,1:08:26.10,1:08:30.04,yin,,0,0,0,,Core Data很重要的一点便是 它非常高效\N{\fs12}and one thing to understand about core data is it's very efficient.
Dialogue: 0,1:08:30.04,1:08:34.66,yin,,0,0,0,,它生成的SQL最大程度地进行了优化\N{\fs12}The sequel it generates is totally tuned to the max.
Dialogue: 0,1:08:34.66,1:08:36.28,yin,,0,0,0,,话虽如此\N{\fs12}Having said that,
Dialogue: 0,1:08:36.28,1:08:39.06,yin,,0,0,0,,有些查询还是会比其它更高效\N{\fs12}there are certain queries that are more efficient than others
Dialogue: 0,1:08:39.06,1:08:40.96,yin,,0,0,0,,虽然达成的目的都是一样的\N{\fs12}that can accomplish the same goals.
Dialogue: 0,1:08:40.96,1:08:45.36,yin,,0,0,0,,如果你想成为Core Data专家 要创建大数据库\N{\fs12}So, if you get to be a core data expert and you start building big databases
Dialogue: 0,1:08:45.36,1:08:47.88,yin,,0,0,0,,在大数据集上要进行很多工作量巨大的查询\N{\fs12}and you're making a lot of big queries on big data sets,
Dialogue: 0,1:08:47.88,1:08:50.64,yin,,0,0,0,,你会最终了解 什么查询好\N{\fs12}you will eventually learn what makes a good query,
Dialogue: 0,1:08:50.64,1:08:53.09,yin,,0,0,0,,什么查询不那么好\N{\fs12}what makes a not so good query, etc.
Dialogue: 0,1:08:53.09,1:08:55.05,yin,,0,0,0,,但在作业中 你还不需要担心这些\N{\fs12}For your homework, you don't have to worry about that yet.
Dialogue: 0,1:08:55.05,1:08:56.38,yin,,0,0,0,,首先只需打好基础\N{\fs12}Let's get the basics first.
Dialogue: 0,1:08:56.38,1:08:57.51,yin,,0,0,0,,有问题\N{\fs12}Question.
Dialogue: 0,1:09:03.52,1:09:05.55,yin,,0,0,0,,问题是不是\N{\fs12}So the question, you mean like
Dialogue: 0,1:09:05.55,1:09:09.51,yin,,0,0,0,,大于和小于这些能否作为%@符号传入\N{\fs12}the greater than and less than, can I pass that in as a percent sign?
Dialogue: 0,1:09:13.82,1:09:15.70,yin,,0,0,0,,你不能进行SQL…\N{\fs12}Yes. You can't do sequel,
Dialogue: 0,1:09:15.70,1:09:19.12,yin,,0,0,0,,问题是 能否使用%@符号进行SQL隐码攻击\N{\fs12}the question is can I do sequel injection by using the percent at sign to,
Dialogue: 0,1:09:19.12,1:09:22.47,yin,,0,0,0,,从而让运算符可配置\N{\fs12}to basically make the operator be, you know,
Dialogue: 0,1:09:22.47,1:09:24.86,yin,,0,0,0,,答案是不能\N{\fs12}configurable, and the answer is you can't do that.
Dialogue: 0,1:09:24.88,1:09:27.19,yin,,0,0,0,,NSPredicate会报错\N{\fs12}NS predicate would complain about that.
Dialogue: 0,1:09:27.19,1:09:30.60,yin,,0,0,0,,NSPredicate知道什么时候%@符号在右侧\N{\fs12}NS predicate does know when a percent at sign is a right-hand
Dialogue: 0,1:09:30.60,1:09:33.56,yin,,0,0,0,,什么时候在这些表达式左侧\N{\fs12}or a left-hand of one of these expressions, so
Dialogue: 0,1:09:33.57,1:09:36.24,yin,,0,0,0,,答案是不 你不能那样做\N{\fs12}the answer is no. You can't do that.
Dialogue: 0,1:09:36.75,1:09:40.18,yin,,0,0,0,,好 这里有一些例子 我只是给一些例子\N{\fs12}Okay, so there's a bunch of examples, again, I'm just trying to give you the examples,
Dialogue: 0,1:09:40.18,1:09:44.43,yin,,0,0,0,,这里我不打算把所有谓词都讲一遍\N{\fs12}we're not trying to teach you predicate here.
Dialogue: 0,1:09:44.43,1:09:46.48,yin,,0,0,0,,还有一个复合谓词\N{\fs12}There's also a compound predicate.
Dialogue: 0,1:09:46.48,1:09:50.02,yin,,0,0,0,,在NSPredicate中 你可以说AND或OR\N{\fs12}In the NS predicate, you can say and or or.
Dialogue: 0,1:09:50.02,1:09:50.93,yin,,0,0,0,,例如你可以说\N{\fs12}So you could say
Dialogue: 0,1:09:50.93,1:09:54.15,yin,,0,0,0,,(name = %@) OR (title = %@)\N{\fs12}name equals percent at sign or title equals percent at sign,
Dialogue: 0,1:09:54.15,1:09:56.81,yin,,0,0,0,,如果你的对象有一个name和一个title\N{\fs12}okay, if you had an object that had a name and a title.
Dialogue: 0,1:09:56.81,1:09:57.64,yin,,0,0,0,,你也可以说\N{\fs12}Or you could say
Dialogue: 0,1:09:57.65,1:10:01.31,yin,,0,0,0,,(whoTook.name=%@) OR (title=%@)\N{\fs12}who took dot name equals blah, or title equals blah,
Dialogue: 0,1:10:01.31,1:10:03.50,yin,,0,0,0,,虽然没什么意义 但你可以这样做\N{\fs12}it kind of wouldn't make much sense, but you could.
Dialogue: 0,1:10:03.50,1:10:07.96,yin,,0,0,0,,在代码中创建复合谓词还可以使用\N{\fs12}You can also create compound predicates in code by doing,
Dialogue: 0,1:10:07.96,1:10:11.77,yin,,0,0,0,,NSCompoundPredicate中的and谓词或or谓词\N{\fs12}using and predicate or or predicate in NS compound predicate.
Dialogue: 0,1:10:11.77,1:10:16.91,yin,,0,0,0,,它会取一个谓词的数组 形成复合谓词\N{\fs12}And it just takes an array of other predicates and makes a compound one.
Dialogue: 0,1:10:16.91,1:10:21.94,yin,,0,0,0,,这就像是代码中if-then的and和or\N{\fs12}That's like if you want the and-ing and or-ing to kind of be if then, okay, in code,
Dialogue: 0,1:10:21.94,1:10:25.16,yin,,0,0,0,,只是内建到字符串中\N{\fs12}as opposed to just built into the string.
Dialogue: 0,1:10:25.16,1:10:28.82,yin,,0,0,0,,高级查询 出于时间考虑 我打算跳过这个\N{\fs12}Advanced querying, for time reasons I'm going to skip this,
Dialogue: 0,1:10:28.82,1:10:31.71,yin,,0,0,0,,不过键值编码也就是\N{\fs12}but key value coding, which is the thing
Dialogue: 0,1:10:31.71,1:10:36.10,yin,,0,0,0,,让你使用点符号在字典内往下搜索的东西\N{\fs12}that lets you use dot notation to search down inside of a dictionary,
Dialogue: 0,1:10:36.10,1:10:38.62,yin,,0,0,0,,它是valueForKeyPath那些\N{\fs12}it's the value for key path business.
Dialogue: 0,1:10:38.62,1:10:42.25,yin,,0,0,0,,你可以在数据库中使用valueForKeyPath\N{\fs12}You can kind of do value for key path in the database,
Dialogue: 0,1:10:42.25,1:10:44.80,yin,,0,0,0,,我们没有讨论过这些\N{\fs12}and there is, we didn't talk about this,
Dialogue: 0,1:10:44.80,1:10:47.68,yin,,0,0,0,,不过键值编码中有一点很酷\N{\fs12}but there is a really cool thing in key value coding,
Dialogue: 0,1:10:47.68,1:10:50.33,yin,,0,0,0,,也就是函数 其中有个函数\N{\fs12}which is functions, and one of the functions,
Dialogue: 0,1:10:50.33,1:10:55.37,yin,,0,0,0,,或许在你的作业中有用 注意了 是@count\N{\fs12}which you probably will need for your homework, so pay attention, is at sign count.
Dialogue: 0,1:10:55.37,1:11:01.12,yin,,0,0,0,,如果你将@count放到你要查询的东西里面\N{\fs12}So, if you put at sign count in the thing you're querying for,
Dialogue: 0,1:11:01.12,1:11:04.81,yin,,0,0,0,,只要它左侧是一个集合 一个NSSet\N{\fs12}as long as the thing to the left of it is an array, or a set,
Dialogue: 0,1:11:04.81,1:11:07.22,yin,,0,0,0,,只要它左侧是一个集合 一个NSSet\N{\fs12}sorry, a set, one of these NS sets,
Dialogue: 0,1:11:07.22,1:11:12.50,yin,,0,0,0,,那它就会将它替换为集合中元素的计数值\N{\fs12}then it will replace that with the count of how many things are in that set.
Dialogue: 0,1:11:12.50,1:11:16.00,yin,,0,0,0,,例如 如果我想找的所有拍照者\N{\fs12}So, for example, if I wanted to find out all the photographers,
Dialogue: 0,1:11:16.00,1:11:19.42,yin,,0,0,0,,满足条件拍的照片多于五张\N{\fs12}give me back all of the photographers who have taken more than five photos,
Dialogue: 0,1:11:19.42,1:11:24.79,yin,,0,0,0,,我的谓词将是photos.@count>5\N{\fs12}my predicate would be photos dot at sign count is greater than five.
Dialogue: 0,1:11:24.79,1:11:28.59,yin,,0,0,0,,还有其它@ 例如@avg(平均值)等等\N{\fs12}And there are other at signs, at sign average, at sign,
Dialogue: 0,1:11:28.59,1:11:30.99,yin,,0,0,0,,你可以自己去查有哪些 这里我给了个链接\N{\fs12}you can look through and find out what there is, I put a link in here,
Dialogue: 0,1:11:30.99,1:11:32.94,yin,,0,0,0,,你们知道 我很少在幻灯片中给链接\N{\fs12}you know I don't, I usually don't put links in my slides,
Dialogue: 0,1:11:32.94,1:11:34.87,yin,,0,0,0,,不过这个确实值得一看\N{\fs12}but this one is worth looking at.
Dialogue: 0,1:11:34.87,1:11:38.71,yin,,0,0,0,,这个能对任何键值编码的东西奏效\N{\fs12}And, this also works, it works for any key value coding things,
Dialogue: 0,1:11:38.71,1:11:40.59,yin,,0,0,0,,例如对字典\N{\fs12}like for dictionaries, so
Dialogue: 0,1:11:40.59,1:11:42.76,yin,,0,0,0,,你可以回Shutterbug\N{\fs12}go back to the shutter bug
Dialogue: 0,1:11:42.76,1:11:45.66,yin,,0,0,0,,尝试propertyListResults valueForKeyPath\N{\fs12}and try doing property list results, value for key path,
Dialogue: 0,1:11:45.66,1:11:49.69,yin,,0,0,0,,photos.photo.@avg.latitude\N{\fs12}photos dot photo dot average dot latitude.
Dialogue: 0,1:11:49.69,1:11:52.74,yin,,0,0,0,,有人试着答下 这个会返回什么吗\N{\fs12}Anyone hazard what that returns?
Dialogue: 0,1:11:54.96,1:11:56.51,yin,,0,0,0,,请讲\N{\fs12}Yeah?
Dialogue: 0,1:11:59.48,1:12:04.89,yin,,0,0,0,,对 它会返回所有照片的平均纬度值\N{\fs12}Correct. It returns the average latitude of all the photos.
Dialogue: 0,1:12:04.89,1:12:07.94,yin,,0,0,0,,这是给你们留的 祝玩的开心\N{\fs12}So, that's something for you to, to have fun with.
Dialogue: 0,1:12:07.94,1:12:10.58,yin,,0,0,0,,你还可以创建更复杂的表达式\N{\fs12}You can build even more complicated expressions
Dialogue: 0,1:12:10.58,1:12:13.05,yin,,0,0,0,,有一个机制可以到数据库中查询\N{\fs12}and there's a mechanism to query into the database
Dialogue: 0,1:12:13.05,1:12:15.98,yin,,0,0,0,,但不获得NSManagedObject\N{\fs12}and not get back an array of NS-managed objects,
Dialogue: 0,1:12:15.98,1:12:20.76,yin,,0,0,0,,而获得对其中内容进行计算后得到的数据\N{\fs12}but to actually get kind of data that's been calculated from,
Dialogue: 0,1:12:20.76,1:12:22.68,yin,,0,0,0,,这样做时 你得到的\N{\fs12}from what's in there, and when you do that,
Dialogue: 0,1:12:22.68,1:12:26.33,yin,,0,0,0,,将不是NSManagedObject数组 而是NSDictionary数组\N{\fs12}instead of getting an array of NS-managed objects, you get an array of NS dictionaries,
Dialogue: 0,1:12:26.33,1:12:29.61,yin,,0,0,0,,这些字典包含键和值 这正是你要找的数据\N{\fs12}and those dictionaries contain keys and values, which is the data you look for.
Dialogue: 0,1:12:29.61,1:12:33.60,yin,,0,0,0,,这些都是高级内容 看到标题了吗 高级查询\N{\fs12}This is all super advanced, see the title of this thing, advanced querying,
Dialogue: 0,1:12:33.60,1:12:35.53,yin,,0,0,0,,我不打算在课上细讲\N{\fs12}not going to talk about it in this class,
Dialogue: 0,1:12:35.53,1:12:40.34,yin,,0,0,0,,我只是想让你们知道 FetchRequest可以被用于\N{\fs12}but just so you know, that fetch request can be used to create something
Dialogue: 0,1:12:40.34,1:12:44.83,yin,,0,0,0,,实际取回数据 而不是取回ManagedObject\N{\fs12}that's actually fetching data rather than just fetching managed objects.
Dialogue: 0,1:12:44.83,1:12:48.62,yin,,0,0,0,,好 我们把所有这些为request综合起来\N{\fs12}Alright. So, let's put it all together for the request.
Dialogue: 0,1:12:48.62,1:12:51.15,yin,,0,0,0,,这是一个request\N{\fs12}So I created, this is a request.
Dialogue: 0,1:12:51.15,1:12:52.98,yin,,0,0,0,,请求所有拍照者\N{\fs12}That's going to get all the photographers,
Dialogue: 0,1:12:52.98,1:12:55.04,yin,,0,0,0,,代码是fetchRequestWithEntityName Photographer\N{\fs12}so I say fetch request fetchRequestWithEntityName photographer,
Dialogue: 0,1:12:55.04,1:12:57.71,yin,,0,0,0,,请求过去24小时内拍过照的\N{\fs12}who have taken a photo in the last 24 hours,
Dialogue: 0,1:12:57.71,1:12:59.86,yin,,0,0,0,,昨天 这需要NSDate\N{\fs12}so I get yesterday, which is NS date,
Dialogue: 0,1:12:59.86,1:13:03.77,yin,,0,0,0,,dateWithTimeIntervalSinceNow -24小时\N{\fs12}date with time interval since now minus 24 hours.
Dialogue: 0,1:13:03.77,1:13:09.69,yin,,0,0,0,,谓词 any photos.uploadDate > 某某\N{\fs12}Predicate, any photos dot upload date greater than whatever.
Dialogue: 0,1:13:09.69,1:13:10.66,yin,,0,0,0,,昨天\N{\fs12}Yesterday.
Dialogue: 0,1:13:10.66,1:13:13.09,yin,,0,0,0,,然后 我要按拍照者名字排序\N{\fs12}And then I'm going to sort it by the photographer's name,
Dialogue: 0,1:13:13.09,1:13:16.88,yin,,0,0,0,,一个SortDescriptor的数组 按名字排序\N{\fs12}so an array of one sort descriptor, where the sort descriptor's the name,
Dialogue: 0,1:13:16.88,1:13:18.66,yin,,0,0,0,,这里会用compare\N{\fs12}it's going to be using compare here,
Dialogue: 0,1:13:18.66,1:13:19.95,yin,,0,0,0,,这可能不好\N{\fs12}which is probably not good, I probably
Dialogue: 0,1:13:19.95,1:13:23.33,yin,,0,0,0,,或许@selector(localizedStandardCompare:)会更好\N{\fs12}want to say selector at sign localized compare.
Dialogue: 0,1:13:23.33,1:13:26.08,yin,,0,0,0,,这就是创建request的方式\N{\fs12}So that's I would create a request.
Dialogue: 0,1:13:26.08,1:13:29.28,yin,,0,0,0,,有了request后 如何执行呢\N{\fs12}Now that I have a request, how do I execute it?
Dialogue: 0,1:13:29.28,1:13:30.47,yin,,0,0,0,,答案是\N{\fs12}And the answer is
Dialogue: 0,1:13:30.47,1:13:33.08,yin,,0,0,0,,我们使用NSManagedObjectContext中的\N{\fs12}we use the method execute fetch request
Dialogue: 0,1:13:33.08,1:13:34.97,yin,,0,0,0,,executeFetchRequest方法\N{\fs12}in NS-managed object context.
Dialogue: 0,1:13:34.97,1:13:37.89,yin,,0,0,0,,NSManagedObjectContext是一切的中心\N{\fs12}So I told you NS manage object context is the hub of everything
Dialogue: 0,1:13:37.89,1:13:40.24,yin,,0,0,0,,也是查询的中心\N{\fs12}and it's the hub of querying, as well.
Dialogue: 0,1:13:40.24,1:13:42.24,yin,,0,0,0,,可以看到 它有一个额外的参数\N{\fs12}And you can see it has a little extra argument there,
Dialogue: 0,1:13:42.24,1:13:45.01,yin,,0,0,0,,error:&error 这会返回NSError\N{\fs12}error colon, at sign error, which will return an NS error
Dialogue: 0,1:13:45.01,1:13:47.88,yin,,0,0,0,,发生错误时 这会告诉你错误在哪\N{\fs12}and tell you what went wrong if things went wrong,
Dialogue: 0,1:13:47.88,1:13:50.65,yin,,0,0,0,,如果executeFetchRequest返回nil 你能知道出错了\N{\fs12}and you can tell things went wrong with the fetch request
Dialogue: 0,1:13:50.65,1:13:54.50,yin,,0,0,0,,这是使用FetchRequest时的情况\N{\fs12}if execute fetch request returns nil.
Dialogue: 0,1:13:54.50,1:13:57.82,yin,,0,0,0,,如果executeFetchRequest返回nil 那就肯定出错了\N{\fs12}If execute fetch request returns nil, something went wrong,
Dialogue: 0,1:13:57.82,1:14:00.35,yin,,0,0,0,,&error会填入某种错误\N{\fs12}and that at sign error will be filled out with some error.
Dialogue: 0,1:14:00.35,1:14:04.74,yin,,0,0,0,,如果返回的是空数组 不是nil\N{\fs12}If it returns an empty array, that's not nil,
Dialogue: 0,1:14:04.74,1:14:05.83,yin,,0,0,0,,而是空数组\N{\fs12}empty array,
Dialogue: 0,1:14:05.83,1:14:09.20,yin,,0,0,0,,这意味着 没有匹配请求的内容\N{\fs12}that means nothing matches what you're requesting.
Dialogue: 0,1:14:09.20,1:14:10.10,yin,,0,0,0,,没有错误\N{\fs12}So no error.
Dialogue: 0,1:14:10.10,1:14:14.62,yin,,0,0,0,,只是你请求的对象没有 它们都不匹配你的谓词\N{\fs12}It's just that you requested objects and there aren't any that match that predicate.
Dialogue: 0,1:14:14.62,1:14:20.46,yin,,0,0,0,,否则 它会返回一个NSManagedObject数组\N{\fs12}Otherwise, it's going to return an array of NS-managed objects.
Dialogue: 0,1:14:20.46,1:14:23.68,yin,,0,0,0,,或是其子类 Photo\N{\fs12}Or, subclasses thereof, photos stars,
Dialogue: 0,1:14:23.68,1:14:26.26,yin,,0,0,0,,Photographer * 这些你所设置的实体名\N{\fs12}photographer stars, whatever you set as the entity name,
Dialogue: 0,1:14:26.26,1:14:28.83,yin,,0,0,0,,它会传回这些组成的数组\N{\fs12}it's going to pass an array of them.
Dialogue: 0,1:14:28.83,1:14:29.96,yin,,0,0,0,,就这了\N{\fs12}That's it.
Dialogue: 0,1:14:29.96,1:14:32.96,yin,,0,0,0,,查询不能再简单了\N{\fs12}It could not be simpler to query.
Dialogue: 0,1:14:32.96,1:14:35.41,yin,,0,0,0,,查询结果有一点我想提下\N{\fs12}One thing about the query results, by the way,
Dialogue: 0,1:14:35.41,1:14:39.27,yin,,0,0,0,,如果你想找一万个东西 你不会得到一万个东西\N{\fs12}if you query 10,000 things, you're not going to get 10,000 things,
Dialogue: 0,1:14:39.27,1:14:41.36,yin,,0,0,0,,你会得到一万个占位符\N{\fs12}you're going to get 10,000 placeholders
Dialogue: 0,1:14:41.36,1:14:43.91,yin,,0,0,0,,在你开始看属性时\N{\fs12}and as you start looking at the attributes,
Dialogue: 0,1:14:43.91,1:14:46.66,yin,,0,0,0,,你才会从数据库中获得它们\N{\fs12}then it'll start faulting them in from the database.
Dialogue: 0,1:14:46.66,1:14:50.06,yin,,0,0,0,,这里隐藏有很多性能优化方面的内容\N{\fs12}So there's a lot of performance optimization going on behind the scenes
Dialogue: 0,1:14:50.06,1:14:51.78,yin,,0,0,0,,你现在并不需要知道\N{\fs12}that you don't really need to know about,
Dialogue: 0,1:14:51.78,1:14:53.32,yin,,0,0,0,,但获取会发生\N{\fs12}but faulting is happening,
Dialogue: 0,1:14:53.32,1:14:56.07,yin,,0,0,0,,有些专注数据库的人 可能对此感到担忧\N{\fs12}for those of you who are database heads and you're probably worried about this,
Dialogue: 0,1:14:56.07,1:14:59.95,yin,,0,0,0,,别担心 并非所有数据都从表格中取出了\N{\fs12}no worries, it's not actually pulling all that data out of those tables,
Dialogue: 0,1:14:59.95,1:15:03.24,yin,,0,0,0,,在访问过程中 你能获得它们\N{\fs12}it faults them in as you access them.
Dialogue: 0,1:15:03.24,1:15:06.85,yin,,0,0,0,,简单讲下Core Data线程安全\N{\fs12}Quick thing about core data thread safety.
Dialogue: 0,1:15:06.85,1:15:10.29,yin,,0,0,0,,NSManagedObjectContext并不线程安全 换言之\N{\fs12}NS-managed object is not thread safe, in other words,
Dialogue: 0,1:15:10.29,1:15:12.93,yin,,0,0,0,,你不能简单在多线程中用它\N{\fs12}you can't just use it in multiple threads,
Dialogue: 0,1:15:12.93,1:15:15.06,yin,,0,0,0,,不过你可以安全访问它们\N{\fs12}but you can safely access them.
Dialogue: 0,1:15:15.06,1:15:16.37,yin,,0,0,0,,大多数ManagedObject\N{\fs12}Most managed objects,
Dialogue: 0,1:15:16.37,1:15:19.49,yin,,0,0,0,,创建时都用了线程包含\N{\fs12}we create them with this kind of thread containment,
Dialogue: 0,1:15:19.49,1:15:22.17,yin,,0,0,0,,线程并发机制\N{\fs12}thread concurrency mechanism.
Dialogue: 0,1:15:22.17,1:15:24.90,yin,,0,0,0,,NSManagedObjectContext中有一个方法\N{\fs12}There's a method in NS-managed object context,
Dialogue: 0,1:15:24.90,1:15:27.39,yin,,0,0,0,,你会希望用到 叫performBlock\N{\fs12}which you will want to use, called perform block,
Dialogue: 0,1:15:27.39,1:15:29.78,yin,,0,0,0,,它没有参数 而是取一段代码\N{\fs12}it just takes a block with no arguments.
Dialogue: 0,1:15:29.78,1:15:34.17,yin,,0,0,0,,任何你希望对context做的事 插入对象 查询等等\N{\fs12}Anything you want to do on a context, inserting objects, querying, anything,
Dialogue: 0,1:15:34.17,1:15:36.91,yin,,0,0,0,,都可以在performBlock中执行\N{\fs12}do it inside a perform block.
Dialogue: 0,1:15:36.91,1:15:38.08,yin,,0,0,0,,为什么这样做呢\N{\fs12}Why do you do that?
Dialogue: 0,1:15:38.08,1:15:41.73,yin,,0,0,0,,它会对context在安全队列中执行\N{\fs12}It'll do it on the safe queue for that context,
Dialogue: 0,1:15:41.73,1:15:44.11,yin,,0,0,0,,这就确保了线程安全\N{\fs12}and it'll guaranteed to be safe, thread safe.
Dialogue: 0,1:15:44.11,1:15:46.44,yin,,0,0,0,,这个安全队列有可能是主队列\N{\fs12}Now, that safe queue might be the main queue,
Dialogue: 0,1:15:46.44,1:15:50.16,yin,,0,0,0,,因此 这并不一定能让你拥有多线程\N{\fs12}so this will not necessarily give you multithreaded.
Dialogue: 0,1:15:50.16,1:15:52.94,yin,,0,0,0,,但它会很安全 请养成这样做的习惯\N{\fs12}But it will be safe, so get in the habit of doing this,
Dialogue: 0,1:15:52.94,1:15:54.73,yin,,0,0,0,,或许以后哪一天\N{\fs12}because if you do come, come to a day
Dialogue: 0,1:15:54.73,1:15:56.51,yin,,0,0,0,,你就会使用NSManagedObjectContext\N{\fs12}when you're using NS-managed object context
Dialogue: 0,1:15:56.51,1:15:58.35,yin,,0,0,0,,并在不同队列上创建它们\N{\fs12}and you're creating them on different queues,
Dialogue: 0,1:15:58.35,1:16:00.01,yin,,0,0,0,,你可以在一个队列载入一个数据库\N{\fs12}so you can load the database in one queue
Dialogue: 0,1:16:00.01,1:16:01.58,yin,,0,0,0,,同时在另一个队列中查看\N{\fs12}while you look at another, whatever,
Dialogue: 0,1:16:01.58,1:16:02.56,yin,,0,0,0,,这都是可行的\N{\fs12}which is all doable,
Dialogue: 0,1:16:02.56,1:16:05.51,yin,,0,0,0,,你需要这个performBlock 至少这样做没有坏处\N{\fs12}you need to be doing this perform block, it doesn't hurt to do it,
Dialogue: 0,1:16:05.51,1:16:07.48,yin,,0,0,0,,我建议你们养成习惯这样做\N{\fs12}so might as well do it.
Dialogue: 0,1:16:07.48,1:16:10.46,yin,,0,0,0,,父上下文我没时间讲\N{\fs12}And parent context I don't have time to talk about.
Dialogue: 0,1:16:10.46,1:16:13.58,yin,,0,0,0,,实际上 Core Data还有很多东西我都没时间讲\N{\fs12}There is a ton other stuff, actually, in core data I don't have time to talk about
Dialogue: 0,1:16:13.58,1:16:15.22,yin,,0,0,0,,因为今天的课就快完了\N{\fs12}because we're at the end of lecture today.
Dialogue: 0,1:16:15.22,1:16:17.18,yin,,0,0,0,,乐观锁\N{\fs12}Optimistic locking,
Dialogue: 0,1:16:17.18,1:16:22.10,yin,,0,0,0,,回滚未保存状态变化 这很好理解\N{\fs12}rolling back unsaved changes to, you know, states that make sense,
Dialogue: 0,1:16:22.10,1:16:24.05,yin,,0,0,0,,撤销和重做我讲过\N{\fs12}undo and redo I talked about.
Dialogue: 0,1:16:24.05,1:16:26.96,yin,,0,0,0,,不刷新时间 也就是取回后数据要待多长时间\N{\fs12}Staleness, you do a fetch and it sits around for a long time,
Dialogue: 0,1:16:26.96,1:16:28.28,yin,,0,0,0,,而不被刷新\N{\fs12}the data could be stale,
Dialogue: 0,1:16:28.29,1:16:31.10,yin,,0,0,0,,一定时间后 需要重新取回\N{\fs12}it might need to be refetched, thrown out and refetched.
Dialogue: 0,1:16:31.10,1:16:34.63,yin,,0,0,0,,这里有很多东西 我都讲不了\N{\fs12}It just, a massive amount of stuff, can't talk about it.
Dialogue: 0,1:16:34.63,1:16:38.12,yin,,0,0,0,,从这里 你需要熟练掌握\N{\fs12}When you walk out of here, what you really want to be comfortable with is you know how
Dialogue: 0,1:16:38.12,1:16:41.95,yin,,0,0,0,,如何创建可视映射 插入对象 创建子类\N{\fs12}to create the visual map, insert objects, make the subclasses,
Dialogue: 0,1:16:41.95,1:16:46.46,yin,,0,0,0,,使用点符号来访问 删除对象 查询对象\N{\fs12}use dot notation to access them, delete objects, and query for them.
Dialogue: 0,1:16:46.46,1:16:50.03,yin,,0,0,0,,这就是Core Data基础 这就是我们今天的内容\N{\fs12}Okay, that's the fundamentals of core data, that's what we talked about today,
Dialogue: 0,1:16:50.03,1:16:53.19,yin,,0,0,0,,这就是你们需要从这门课中学到的\N{\fs12}that's what you should, need to know how to do for this class.
Dialogue: 0,1:16:53.19,1:16:55.83,yin,,0,0,0,,此外 你只需要知道还有很多内容\N{\fs12}And then outside of that, you just need to know that there's a lot more,
Dialogue: 0,1:16:55.83,1:16:57.72,yin,,0,0,0,,如果你要严肃了解数据库方面\N{\fs12}and if you're going to do serious database work,
Dialogue: 0,1:16:57.72,1:17:00.70,yin,,0,0,0,,这些都需要你自己去读\N{\fs12}you need to some reading up on that.
Dialogue: 0,1:17:00.70,1:17:02.27,yin,,0,0,0,,好 就这些了\N{\fs12}Okay, so that's it.
Dialogue: 0,1:17:02.27,1:17:05.79,yin,,0,0,0,,很抱歉我拖了几分钟堂 周三再见\N{\fs12}Sorry to keep you a couple minutes over and I will see you on Wednesday
Dialogue: 0,1:17:05.79,1:17:08.97,yin,,0,0,0,,到时会有一个大的演示\N{\fs12}with a big demo of all this stuff.
Dialogue: 0,1:17:08.97,1:17:12.68,yin,,0,0,0,,更多内容 请访问我校官网stanford.edu\N{\fs12}> For more, please visit us at stanford.edu.
